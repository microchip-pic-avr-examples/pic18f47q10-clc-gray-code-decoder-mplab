

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Oct 16 10:40:47 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1,keep,inline
    54                           	psect	text44,global,reloc=2,class=CODE,delta=1
    55                           	psect	text45,global,reloc=2,class=CODE,delta=1
    56                           	psect	text46,global,reloc=2,class=CODE,delta=1
    57                           	psect	text47,global,reloc=2,class=CODE,delta=1
    58                           	psect	text48,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.30
    66                           ; Generated 20/08/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F47Q10 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101 ;; Function _SPI1_ExchangeBlock is unused but had its address taken
   102  0000                     
   103 ;; Function _SPI1_ReadBlock is unused but had its address taken
   104  0000                     
   105 ;; Function _SPI1_WriteByte is unused but had its address taken
   106  0000                     
   107 ;; Function _SPI1_ReadByte is unused but had its address taken
   108  0000                     
   109                           	psect	smallconst
   110  000F00                     __psmallconst:
   111                           	callstack 0
   112  000F00  00                 	db	0
   113  000F01                     _spiMaster:
   114                           	callstack 0
   115  000F01  CC                 	db	low _SPI1_Close
   116  000F02  27                 	db	high _SPI1_Close
   117  000F03  00                 	db	low (_SPI1_Close shr (0+16))
   118  000F04  C4                 	db	low _LCD_open
   119  000F05  27                 	db	high _LCD_open
   120  000F06  00                 	db	low (_LCD_open shr (0+16))
   121  000F07  FC                 	db	low _SPI1_ExchangeByte
   122  000F08  26                 	db	high _SPI1_ExchangeByte
   123  000F09  00                 	db	low (_SPI1_ExchangeByte shr (0+16))
   124  000F0A  00                 	db	0
   125  000F0B  00                 	db	0
   126  000F0C  00                 	db	0
   127  000F0D  5E                 	db	low _SPI1_WriteBlock
   128  000F0E  24                 	db	high _SPI1_WriteBlock
   129  000F0F  00                 	db	low (_SPI1_WriteBlock shr (0+16))
   130  000F10  00                 	db	0
   131  000F11  00                 	db	0
   132  000F12  00                 	db	0
   133  000F13  00                 	db	0
   134  000F14  00                 	db	0
   135  000F15  00                 	db	0
   136  000F16  00                 	db	0
   137  000F17  00                 	db	0
   138  000F18  00                 	db	0
   139  000F19  00                 	db	0
   140  000F1A  00                 	db	0
   141  000F1B  00                 	db	0
   142  000F1C  00                 	db	0
   143  000F1D  00                 	db	0
   144  000F1E  00                 	db	0
   145  000F1F                     __end_of_spiMaster:
   146                           	callstack 0
   147  000F1F                     _spi1_configuration:
   148                           	callstack 0
   149  000F1F  0A                 	db	10
   150  000F20  40                 	db	64
   151  000F21  01                 	db	1
   152  000F22  00                 	db	0
   153  000F23  00                 	db	0
   154  000F24  40                 	db	64
   155  000F25  01                 	db	1
   156  000F26  00                 	db	0
   157  000F27                     __end_of_spi1_configuration:
   158                           	callstack 0
   159  0000                     _CLCDATA	set	3703
   160  0000                     _PIR3bits	set	3784
   161  0000                     _SSP1DATPPS	set	3763
   162  0000                     _RC6PPS	set	3832
   163  0000                     _CLCIN1PPS	set	3616
   164  0000                     _CLCIN2PPS	set	3617
   165  0000                     _RC4PPS	set	3830
   166  0000                     _CLCIN3PPS	set	3618
   167  0000                     _CLCIN0PPS	set	3615
   168  0000                     _SSP1CLKPPS	set	3762
   169  0000                     _PMD5	set	3809
   170  0000                     _PMD4	set	3808
   171  0000                     _PMD3	set	3807
   172  0000                     _PMD2	set	3806
   173  0000                     _PMD1	set	3805
   174  0000                     _PMD0	set	3804
   175  0000                     _OSCTUNE	set	3800
   176  0000                     _OSCFRQ	set	3801
   177  0000                     _OSCEN	set	3799
   178  0000                     _OSCCON3	set	3797
   179  0000                     _OSCCON1	set	3795
   180  0000                     _CLC1CONbits	set	3623
   181  0000                     _CLC1CON	set	3623
   182  0000                     _CLC1GLS3	set	3632
   183  0000                     _CLC1GLS2	set	3631
   184  0000                     _CLC1GLS1	set	3630
   185  0000                     _CLC1GLS0	set	3629
   186  0000                     _CLC1SEL3	set	3628
   187  0000                     _CLC1SEL2	set	3627
   188  0000                     _CLC1SEL1	set	3626
   189  0000                     _CLC1SEL0	set	3625
   190  0000                     _CLC1POL	set	3624
   191  0000                     _CLC2CONbits	set	3633
   192  0000                     _CLC2CON	set	3633
   193  0000                     _CLC2GLS3	set	3642
   194  0000                     _CLC2GLS2	set	3641
   195  0000                     _CLC2GLS1	set	3640
   196  0000                     _CLC2GLS0	set	3639
   197  0000                     _CLC2SEL3	set	3638
   198  0000                     _CLC2SEL2	set	3637
   199  0000                     _CLC2SEL1	set	3636
   200  0000                     _CLC2SEL0	set	3635
   201  0000                     _CLC2POL	set	3634
   202  0000                     _CLC5CONbits	set	3663
   203  0000                     _CLC5CON	set	3663
   204  0000                     _CLC5GLS3	set	3672
   205  0000                     _CLC5GLS2	set	3671
   206  0000                     _CLC5GLS1	set	3670
   207  0000                     _CLC5GLS0	set	3669
   208  0000                     _CLC5SEL3	set	3668
   209  0000                     _CLC5SEL2	set	3667
   210  0000                     _CLC5SEL1	set	3666
   211  0000                     _CLC5SEL0	set	3665
   212  0000                     _CLC5POL	set	3664
   213  0000                     _CLC6CONbits	set	3673
   214  0000                     _CLC6CON	set	3673
   215  0000                     _CLC6GLS3	set	3682
   216  0000                     _CLC6GLS2	set	3681
   217  0000                     _CLC6GLS1	set	3680
   218  0000                     _CLC6GLS0	set	3679
   219  0000                     _CLC6SEL3	set	3678
   220  0000                     _CLC6SEL2	set	3677
   221  0000                     _CLC6SEL1	set	3676
   222  0000                     _CLC6SEL0	set	3675
   223  0000                     _CLC6POL	set	3674
   224  0000                     _INLVLE	set	3877
   225  0000                     _INLVLD	set	3869
   226  0000                     _INLVLC	set	3864
   227  0000                     _INLVLB	set	3856
   228  0000                     _INLVLA	set	3848
   229  0000                     _SLRCONE	set	3878
   230  0000                     _SLRCOND	set	3870
   231  0000                     _SLRCONC	set	3865
   232  0000                     _SLRCONB	set	3857
   233  0000                     _SLRCONA	set	3849
   234  0000                     _ODCOND	set	3871
   235  0000                     _ODCONC	set	3866
   236  0000                     _ODCONB	set	3858
   237  0000                     _ODCONA	set	3850
   238  0000                     _ODCONE	set	3879
   239  0000                     _WPUC	set	3867
   240  0000                     _WPUA	set	3851
   241  0000                     _WPUB	set	3859
   242  0000                     _WPUE	set	3880
   243  0000                     _WPUD	set	3872
   244  0000                     _ANSELA	set	3852
   245  0000                     _ANSELE	set	3881
   246  0000                     _ANSELB	set	3860
   247  0000                     _ANSELC	set	3868
   248  0000                     _ANSELD	set	3873
   249  0000                     _LATDbits	set	3973
   250  0000                     _LATAbits	set	3970
   251  0000                     _SSP1BUF	set	3985
   252  0000                     _SSP1CON2	set	3990
   253  0000                     _SSP1CON1bits	set	3989
   254  0000                     _TRISCbits	set	3977
   255  0000                     _SSP1ADD	set	3986
   256  0000                     _SSP1CON1	set	3989
   257  0000                     _SSP1STAT	set	3988
   258  0000                     _TRISD	set	3978
   259  0000                     _TRISC	set	3977
   260  0000                     _TRISB	set	3976
   261  0000                     _TRISA	set	3975
   262  0000                     _TRISE	set	3979
   263  0000                     _LATC	set	3972
   264  0000                     _LATB	set	3971
   265  0000                     _LATA	set	3970
   266  0000                     _LATD	set	3973
   267  0000                     _LATE	set	3974
   268  000F27                     STR_1:
   269  000F27  41                 	db	65	;'A'
   270  000F28  6E                 	db	110	;'n'
   271  000F29  67                 	db	103	;'g'
   272  000F2A  6C                 	db	108	;'l'
   273  000F2B  65                 	db	101	;'e'
   274  000F2C  3A                 	db	58	;':'
   275  000F2D  20                 	db	32
   276  000F2E  20                 	db	32
   277  000F2F  20                 	db	32
   278  000F30  20                 	db	32
   279  000F31  20                 	db	32
   280  000F32  20                 	db	32
   281  000F33  20                 	db	32
   282  000F34  20                 	db	32
   283  000F35  20                 	db	32
   284  000F36  20                 	db	32
   285  000F37  00                 	db	0
   286  000F38                     STR_2:
   287  000F38  44                 	db	68	;'D'
   288  000F39  65                 	db	101	;'e'
   289  000F3A  63                 	db	99	;'c'
   290  000F3B  6F                 	db	111	;'o'
   291  000F3C  64                 	db	100	;'d'
   292  000F3D  65                 	db	101	;'e'
   293  000F3E  64                 	db	100	;'d'
   294  000F3F  20                 	db	32
   295  000F40  76                 	db	118	;'v'
   296  000F41  61                 	db	97	;'a'
   297  000F42  6C                 	db	108	;'l'
   298  000F43  75                 	db	117	;'u'
   299  000F44  65                 	db	101	;'e'
   300  000F45  3A                 	db	58	;':'
   301  000F46  20                 	db	32
   302  000F47  20                 	db	32
   303  000F48  00                 	db	0
   304  000F49                     STR_4:
   305  000F49  25                 	db	37
   306  000F4A  33                 	db	51	;'3'
   307  000F4B  64                 	db	100	;'d'
   308  000F4C  2E                 	db	46
   309  000F4D  25                 	db	37
   310  000F4E  30                 	db	48	;'0'
   311  000F4F  32                 	db	50	;'2'
   312  000F50  64                 	db	100	;'d'
   313  000F51  25                 	db	37
   314  000F52  63                 	db	99	;'c'
   315  000F53  00                 	db	0
   316  000F54                     STR_5:
   317  000F54  25                 	db	37
   318  000F55  33                 	db	51	;'3'
   319  000F56  64                 	db	100	;'d'
   320  000F57  25                 	db	37
   321  000F58  63                 	db	99	;'c'
   322  000F59  20                 	db	32
   323  000F5A  20                 	db	32
   324  000F5B  20                 	db	32
   325  000F5C  00                 	db	0
   326  000F5D                     STR_3:
   327  000F5D  25                 	db	37
   328  000F5E  30                 	db	48	;'0'
   329  000F5F  32                 	db	50	;'2'
   330  000F60  64                 	db	100	;'d'
   331  000F61  00                 	db	0
   332  000F62  00                 	db	0	; dummy byte at the end
   333  0000                     
   334                           ; #config settings
   335                           
   336                           	psect	cinit
   337  00278A                     __pcinit:
   338                           	callstack 0
   339  00278A                     start_initialization:
   340                           	callstack 0
   341  00278A                     __initialization:
   342                           	callstack 0
   343                           
   344                           ; Clear objects allocated to BANK0 (51 bytes)
   345  00278A  EE00  F060         	lfsr	0,__pbssBANK0
   346  00278E  0E33               	movlw	51
   347  002790                     clear_0:
   348  002790  6AEE               	clrf	postinc0,c
   349  002792  06E8               	decf	wreg,f,c
   350  002794  E1FD               	bnz	clear_0
   351  002796                     end_of_initialization:
   352                           	callstack 0
   353  002796                     __end_of__initialization:
   354                           	callstack 0
   355  002796  0100               	movlb	0
   356  002798  EFBB  F013         	goto	_main	;jump to C main() function
   357                           
   358                           	psect	bssBANK0
   359  000060                     __pbssBANK0:
   360                           	callstack 0
   361  000060                     	ds	8
   362  000068                     _spi1_interruptHandler:
   363                           	callstack 0
   364  000068                     	ds	3
   365  00006B                     _nout:
   366                           	callstack 0
   367  00006B                     	ds	2
   368  00006D                     _width:
   369                           	callstack 0
   370  00006D                     	ds	2
   371  00006F                     _prec:
   372                           	callstack 0
   373  00006F                     	ds	2
   374  000071                     _flags:
   375                           	callstack 0
   376  000071                     	ds	2
   377  000073                     _dbuf:
   378                           	callstack 0
   379  000073                     	ds	32
   380                           
   381                           	psect	cstackBANK0
   382  000093                     __pcstackBANK0:
   383                           	callstack 0
   384  000093                     ?_sprintf:
   385                           	callstack 0
   386  000093                     sprintf@s:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x0
   390  000093                     	ds	2
   391  000095                     sprintf@fmt:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x2
   395  000095                     	ds	10
   396  00009F                     sprintf@ap:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xC
   400  00009F                     	ds	2
   401  0000A1                     sprintf@f:
   402                           	callstack 0
   403                           
   404                           ; 6 bytes @ 0xE
   405  0000A1                     	ds	6
   406  0000A7                     GDapplication@lcdDataBuffer:
   407                           	callstack 0
   408                           
   409                           ; 8 bytes @ 0x14
   410  0000A7                     	ds	8
   411  0000AF                     GDapplication@degree:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1C
   415  0000AF                     	ds	2
   416  0000B1                     GDapplication@clcData:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1E
   420  0000B1                     	ds	1
   421                           
   422                           	psect	cstackCOMRAM
   423  000001                     __pcstackCOMRAM:
   424                           	callstack 0
   425  000001                     ??_SPI1_Open:
   426  000001                     ?_strlen:
   427                           	callstack 0
   428  000001                     ?_isdigit:
   429                           	callstack 0
   430  000001                     ?_isspace:
   431                           	callstack 0
   432  000001                     ?___wmul:
   433                           	callstack 0
   434  000001                     ?___lwdiv:
   435                           	callstack 0
   436  000001                     ?___lwmod:
   437                           	callstack 0
   438  000001                     ?___aodiv:
   439                           	callstack 0
   440  000001                     ?___aomod:
   441                           	callstack 0
   442  000001                     SPI1_ExchangeByte@data:
   443                           	callstack 0
   444  000001                     DELAY_milliseconds@milliseconds:
   445                           	callstack 0
   446  000001                     ___wmul@multiplier:
   447                           	callstack 0
   448  000001                     ___lwdiv@dividend:
   449                           	callstack 0
   450  000001                     ___lwmod@dividend:
   451                           	callstack 0
   452  000001                     isdigit@c:
   453                           	callstack 0
   454  000001                     isspace@c:
   455                           	callstack 0
   456  000001                     fputc@c:
   457                           	callstack 0
   458  000001                     strlen@s:
   459                           	callstack 0
   460  000001                     ___aodiv@dividend:
   461                           	callstack 0
   462  000001                     ___aomod@dividend:
   463                           	callstack 0
   464                           
   465                           ; 8 bytes @ 0x0
   466  000001                     	ds	1
   467  000002                     SPI1_Open@spi1UniqueConfiguration:
   468                           	callstack 0
   469  000002                     SPI1_WriteBlock@block:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x1
   473  000002                     	ds	1
   474  000003                     ??_spi_master_open:
   475  000003                     ??_isdigit:
   476  000003                     ??_isspace:
   477  000003                     ___wmul@multiplicand:
   478                           	callstack 0
   479  000003                     ___lwdiv@divisor:
   480                           	callstack 0
   481  000003                     ___lwmod@divisor:
   482                           	callstack 0
   483  000003                     fputc@fp:
   484                           	callstack 0
   485  000003                     strlen@a:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x2
   489  000003                     	ds	1
   490  000004                     SPI1_WriteBlock@blockSize:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x3
   494  000004                     	ds	1
   495  000005                     ??_fputc:
   496  000005                     spi_master_open@config:
   497                           	callstack 0
   498  000005                     ___lwmod@counter:
   499                           	callstack 0
   500  000005                     ___wmul@product:
   501                           	callstack 0
   502  000005                     ___lwdiv@quotient:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x4
   506  000005                     	ds	1
   507  000006                     SPI1_WriteBlock@data:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x5
   511  000006                     	ds	1
   512  000007                     ___lwdiv@counter:
   513                           	callstack 0
   514  000007                     _isspace$1436:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x6
   518  000007                     	ds	1
   519  000008                     ?_atoi:
   520                           	callstack 0
   521  000008                     expander_sendByte@byte:
   522                           	callstack 0
   523  000008                     atoi@s:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x7
   527  000008                     	ds	1
   528  000009                     expander_sendByte@addr:
   529                           	callstack 0
   530  000009                     ___aodiv@divisor:
   531                           	callstack 0
   532  000009                     ___aomod@divisor:
   533                           	callstack 0
   534                           
   535                           ; 8 bytes @ 0x8
   536  000009                     	ds	1
   537  00000A                     ??_atoi:
   538  00000A                     ?_ctoa:
   539                           	callstack 0
   540  00000A                     ctoa@fp:
   541                           	callstack 0
   542  00000A                     fputs@s:
   543                           	callstack 0
   544  00000A                     expander_sendByte@cmd:
   545                           	callstack 0
   546                           
   547                           ; 3 bytes @ 0x9
   548  00000A                     	ds	2
   549  00000C                     ctoa@c:
   550                           	callstack 0
   551  00000C                     fputs@fp:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xB
   555  00000C                     	ds	1
   556  00000D                     ??_ctoa:
   557  00000D                     expander_setOutput@output:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0xC
   561  00000D                     	ds	1
   562  00000E                     lcd_sendNibble@RSbit:
   563                           	callstack 0
   564  00000E                     lcd_sendByte@RSbit:
   565                           	callstack 0
   566  00000E                     fputs@c:
   567                           	callstack 0
   568  00000E                     ctoa@l:
   569                           	callstack 0
   570  00000E                     atoi@neg:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xD
   574  00000E                     	ds	1
   575  00000F                     ??_lcd_sendNibble:
   576  00000F                     ??_lcd_sendByte:
   577  00000F                     fputs@i:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xE
   581  00000F                     	ds	1
   582  000010                     lcd_sendNibble@nibble:
   583                           	callstack 0
   584  000010                     lcd_sendByte@nibbleHigh:
   585                           	callstack 0
   586  000010                     ctoa@w:
   587                           	callstack 0
   588  000010                     _atoi$1418:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0xF
   592  000010                     	ds	1
   593  000011                     ?_pad:
   594                           	callstack 0
   595  000011                     lcd_sendNibble@packet:
   596                           	callstack 0
   597  000011                     lcd_sendByte@nibbleLow:
   598                           	callstack 0
   599  000011                     ___aodiv@counter:
   600                           	callstack 0
   601  000011                     ___aomod@counter:
   602                           	callstack 0
   603  000011                     pad@fp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x10
   607  000011                     	ds	1
   608  000012                     lcd_sendByte@byte:
   609                           	callstack 0
   610  000012                     ___aodiv@sign:
   611                           	callstack 0
   612  000012                     ___aomod@sign:
   613                           	callstack 0
   614  000012                     _atoi$1420:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x11
   618  000012                     	ds	1
   619  000013                     ?_abs:
   620                           	callstack 0
   621  000013                     lcd_sendByte@packetHigh:
   622                           	callstack 0
   623  000013                     pad@buf:
   624                           	callstack 0
   625  000013                     abs@a:
   626                           	callstack 0
   627  000013                     ___aodiv@quotient:
   628                           	callstack 0
   629                           
   630                           ; 8 bytes @ 0x12
   631  000013                     	ds	1
   632  000014                     lcd_sendByte@packetLow:
   633                           	callstack 0
   634  000014                     _atoi$1419:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x13
   638  000014                     	ds	1
   639  000015                     ??_abs:
   640  000015                     lcd_setAddr@character:
   641                           	callstack 0
   642  000015                     lcd_writeChar@character:
   643                           	callstack 0
   644  000015                     pad@p:
   645                           	callstack 0
   646  000015                     atoi@n:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x14
   650  000015                     	ds	1
   651  000016                     lcd_setAddr@row:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x15
   655  000016                     	ds	1
   656  000017                     ??_pad:
   657  000017                     User_lcd_writeString@string:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x16
   661  000017                     	ds	1
   662  000018                     pad@i:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x17
   666  000018                     	ds	1
   667  000019                     User_lcd_writeString@row:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x18
   671  000019                     	ds	1
   672  00001A                     User_lcd_writeString@column:
   673                           	callstack 0
   674  00001A                     pad@w:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x19
   678  00001A                     	ds	1
   679  00001B                     ??_User_lcd_writeString:
   680                           
   681                           ; 1 bytes @ 0x1A
   682  00001B                     	ds	1
   683  00001C                     ?_dtoa:
   684                           	callstack 0
   685  00001C                     dtoa@fp:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x1B
   689  00001C                     	ds	1
   690  00001D                     User_lcd_writeString@i:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x1C
   694  00001D                     	ds	1
   695  00001E                     dtoa@d:
   696                           	callstack 0
   697                           
   698                           ; 8 bytes @ 0x1D
   699  00001E                     	ds	8
   700  000026                     ??_dtoa:
   701                           
   702                           ; 1 bytes @ 0x25
   703  000026                     	ds	8
   704  00002E                     _dtoa$1382:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x2D
   708  00002E                     	ds	2
   709  000030                     dtoa@p:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x2F
   713  000030                     	ds	2
   714  000032                     dtoa@w:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x31
   718  000032                     	ds	2
   719  000034                     dtoa@s:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x33
   723  000034                     	ds	2
   724  000036                     dtoa@n:
   725                           	callstack 0
   726                           
   727                           ; 8 bytes @ 0x35
   728  000036                     	ds	8
   729  00003E                     dtoa@i:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x3D
   733  00003E                     	ds	2
   734  000040                     ?_vfpfcnvrt:
   735                           	callstack 0
   736  000040                     vfpfcnvrt@fp:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x3F
   740  000040                     	ds	2
   741  000042                     vfpfcnvrt@fmt:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x41
   745  000042                     	ds	2
   746  000044                     vfpfcnvrt@ap:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x43
   750  000044                     	ds	2
   751  000046                     ??_vfpfcnvrt:
   752                           
   753                           ; 1 bytes @ 0x45
   754  000046                     	ds	4
   755  00004A                     vfpfcnvrt@ll:
   756                           	callstack 0
   757                           
   758                           ; 8 bytes @ 0x49
   759  00004A                     	ds	8
   760  000052                     vfpfcnvrt@done:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x51
   764  000052                     	ds	2
   765  000054                     _vfpfcnvrt$1397:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x53
   769  000054                     	ds	2
   770  000056                     vfpfcnvrt@c:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x55
   774  000056                     	ds	1
   775  000057                     ?_vfprintf:
   776                           	callstack 0
   777  000057                     vfprintf@fp:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x56
   781  000057                     	ds	2
   782  000059                     vfprintf@fmt:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x58
   786  000059                     	ds	2
   787  00005B                     vfprintf@ap:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x5A
   791  00005B                     	ds	2
   792  00005D                     vfprintf@cfmt:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x5C
   796  00005D                     	ds	2
   797  00005F                     ??_GDapplication:
   798  00005F                     
   799                           ; 1 bytes @ 0x5E
   800  00005F                     	ds	1
   801  000060                     
   802                           ; 1 bytes @ 0x5F
   803 ;;
   804 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   805 ;;
   806 ;; *************** function _main *****************
   807 ;; Defined at:
   808 ;;		line 51 in file "main.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   826 ;;Total ram usage:        0 bytes
   827 ;; Hardware stack levels required when called:    9
   828 ;; This function calls:
   829 ;;		_ApplicationInit
   830 ;;		_GDapplication
   831 ;;		_SYSTEM_Initialize
   832 ;; This function is called by:
   833 ;;		Startup code after reset
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text0
   838  002776                     __ptext0:
   839                           	callstack 0
   840  002776                     _main:
   841                           	callstack 22
   842  002776                     
   843                           ;main.c: 54:     SYSTEM_Initialize();
   844  002776  EC38  F013         	call	_SYSTEM_Initialize	;wreg free
   845  00277A                     
   846                           ;main.c: 71:     ApplicationInit();
   847  00277A  ECB5  F012         	call	_ApplicationInit	;wreg free
   848  00277E                     l2879:
   849                           
   850                           ;main.c: 74:     {;main.c: 76:         GDapplication();
   851  00277E  EC71  F00D         	call	_GDapplication	;wreg free
   852  002782  EFBF  F013         	goto	l2879
   853  002786  EF00  F000         	goto	start
   854  00278A                     __end_of_main:
   855                           	callstack 0
   856                           
   857 ;; *************** function _SYSTEM_Initialize *****************
   858 ;; Defined at:
   859 ;;		line 50 in file "mcc_generated_files/mcc.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    8
   880 ;; This function calls:
   881 ;;		_CLC1_Initialize
   882 ;;		_CLC2_Initialize
   883 ;;		_CLC5_Initialize
   884 ;;		_CLC6_Initialize
   885 ;;		_OSCILLATOR_Initialize
   886 ;;		_PIN_MANAGER_Initialize
   887 ;;		_PMD_Initialize
   888 ;;		_SPI1_Initialize
   889 ;;		_lcd_setup
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text1
   896  002670                     __ptext1:
   897                           	callstack 0
   898  002670                     _SYSTEM_Initialize:
   899                           	callstack 22
   900  002670                     
   901                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   902  002670  EC70  F013         	call	_PMD_Initialize	;wreg free
   903                           
   904                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
   905  002674  EC5E  F013         	call	_SPI1_Initialize	;wreg free
   906                           
   907                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   908  002678  ECFE  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
   909                           
   910                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   911  00267C  EC8C  F013         	call	_OSCILLATOR_Initialize	;wreg free
   912                           
   913                           ;mcc_generated_files/mcc.c: 56:     CLC1_Initialize();
   914  002680  EC0E  F013         	call	_CLC1_Initialize	;wreg free
   915                           
   916                           ;mcc_generated_files/mcc.c: 57:     CLC5_Initialize();
   917  002684  ECE2  F012         	call	_CLC5_Initialize	;wreg free
   918                           
   919                           ;mcc_generated_files/mcc.c: 58:     CLC6_Initialize();
   920  002688  ECCC  F012         	call	_CLC6_Initialize	;wreg free
   921                           
   922                           ;mcc_generated_files/mcc.c: 59:     CLC2_Initialize();
   923  00268C  ECF8  F012         	call	_CLC2_Initialize	;wreg free
   924  002690                     
   925                           ;mcc_generated_files/mcc.c: 60:     lcd_setup();
   926  002690  ECAB  F00F         	call	_lcd_setup	;wreg free
   927  002694  0012               	return		;funcret
   928  002696                     __end_of_SYSTEM_Initialize:
   929                           	callstack 0
   930                           
   931 ;; *************** function _lcd_setup *****************
   932 ;; Defined at:
   933 ;;		line 87 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    7
   954 ;; This function calls:
   955 ;;		_DELAY_milliseconds
   956 ;;		_expander_setOutput
   957 ;;		_expander_setup
   958 ;;		_lcd_clearDisplay
   959 ;;		_lcd_returnHome
   960 ;;		_lcd_sendByte
   961 ;;		_lcd_sendNibble
   962 ;; This function is called by:
   963 ;;		_SYSTEM_Initialize
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text2
   968  001F56                     __ptext2:
   969                           	callstack 0
   970  001F56                     _lcd_setup:
   971                           	callstack 22
   972  001F56                     
   973                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 88:     LATDbits.LATD4 = 1;
   974  001F56  8885               	bsf	133,4,c	;volatile
   975                           
   976                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 89:     LATAbits.LATA0 = 1;
   977  001F58  8082               	bsf	130,0,c	;volatile
   978                           
   979                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 90:     LATAbits.LATA7 = 1;
   980  001F5A  8E82               	bsf	130,7,c	;volatile
   981  001F5C                     
   982                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 91:     expander_setup();
   983  001F5C  ECDC  F013         	call	_expander_setup	;wreg free
   984                           
   985                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 92:     expander_setOutput(0);
   986  001F60  0E00               	movlw	0
   987  001F62  ECD5  F013         	call	_expander_setOutput
   988  001F66                     
   989                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 93:     DELAY_milliseconds(40);
   990  001F66  0E00               	movlw	0
   991  001F68  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
   992  001F6A  0E28               	movlw	40
   993  001F6C  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
   994  001F6E  EC24  F013         	call	_DELAY_milliseconds	;wreg free
   995  001F72                     
   996                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 94:     lcd_sendNibble(0b11, 0);
   997  001F72  0E00               	movlw	0
   998  001F74  6E0E               	movwf	lcd_sendNibble@RSbit^0,c
   999  001F76  0E03               	movlw	3
  1000  001F78  ECCB  F011         	call	_lcd_sendNibble
  1001                           
  1002                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 95:     DELAY_milliseconds(10);
  1003  001F7C  0E00               	movlw	0
  1004  001F7E  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1005  001F80  0E0A               	movlw	10
  1006  001F82  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1007  001F84  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  1008  001F88                     
  1009                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 97:     lcd_sendNibble(0b11, 0);
  1010  001F88  0E00               	movlw	0
  1011  001F8A  6E0E               	movwf	lcd_sendNibble@RSbit^0,c
  1012  001F8C  0E03               	movlw	3
  1013  001F8E  ECCB  F011         	call	_lcd_sendNibble
  1014  001F92                     
  1015                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 98:     DELAY_milliseconds(10);
  1016  001F92  0E00               	movlw	0
  1017  001F94  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1018  001F96  0E0A               	movlw	10
  1019  001F98  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1020  001F9A  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  1021                           
  1022                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 99:     lcd_sendNibble(0b11, 0);
  1023  001F9E  0E00               	movlw	0
  1024  001FA0  6E0E               	movwf	lcd_sendNibble@RSbit^0,c
  1025  001FA2  0E03               	movlw	3
  1026  001FA4  ECCB  F011         	call	_lcd_sendNibble
  1027  001FA8                     
  1028                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 100:     DELAY_milliseconds(10);
  1029  001FA8  0E00               	movlw	0
  1030  001FAA  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1031  001FAC  0E0A               	movlw	10
  1032  001FAE  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1033  001FB0  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  1034  001FB4                     
  1035                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 101:     lcd_sendNibble(0x2,0);
  1036  001FB4  0E00               	movlw	0
  1037  001FB6  6E0E               	movwf	lcd_sendNibble@RSbit^0,c
  1038  001FB8  0E02               	movlw	2
  1039  001FBA  ECCB  F011         	call	_lcd_sendNibble
  1040  001FBE                     
  1041                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 102:     lcd_sendByte(0x2C, 0);
  1042  001FBE  0E00               	movlw	0
  1043  001FC0  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  1044  001FC2  0E2C               	movlw	44
  1045  001FC4  EC98  F010         	call	_lcd_sendByte
  1046  001FC8                     
  1047                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 103:     lcd_sendByte(0b1100, 0);
  1048  001FC8  0E00               	movlw	0
  1049  001FCA  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  1050  001FCC  0E0C               	movlw	12
  1051  001FCE  EC98  F010         	call	_lcd_sendByte
  1052  001FD2                     
  1053                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 104:     lcd_sendByte(0x06, 0);
  1054  001FD2  0E00               	movlw	0
  1055  001FD4  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  1056  001FD6  0E06               	movlw	6
  1057  001FD8  EC98  F010         	call	_lcd_sendByte
  1058  001FDC                     
  1059                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 105:     lcd_sendByte(0x0C, 0);
  1060  001FDC  0E00               	movlw	0
  1061  001FDE  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  1062  001FE0  0E0C               	movlw	12
  1063  001FE2  EC98  F010         	call	_lcd_sendByte
  1064                           
  1065                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 106:     DELAY_milliseconds(2);
  1066  001FE6  0E00               	movlw	0
  1067  001FE8  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1068  001FEA  0E02               	movlw	2
  1069  001FEC  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1070  001FEE  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  1071  001FF2                     
  1072                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 107:     lcd_returnHome();
  1073  001FF2  ECA4  F013         	call	_lcd_returnHome	;wreg free
  1074  001FF6                     
  1075                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 108:     lcd_clearDisplay();
  1076  001FF6  EC98  F013         	call	_lcd_clearDisplay	;wreg free
  1077  001FFA  0012               	return		;funcret
  1078  001FFC                     __end_of_lcd_setup:
  1079                           	callstack 0
  1080                           
  1081 ;; *************** function _lcd_sendNibble *****************
  1082 ;; Defined at:
  1083 ;;		line 29 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  nibble          1    wreg     unsigned char 
  1086 ;;  RSbit           1   13[COMRAM] _Bool 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  nibble          1   15[COMRAM] unsigned char 
  1089 ;;  packet          1   16[COMRAM] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1099 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;Total ram usage:        4 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    5
  1106 ;; This function calls:
  1107 ;;		_DELAY_milliseconds
  1108 ;;		_expander_setOutput
  1109 ;; This function is called by:
  1110 ;;		_lcd_setup
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text3
  1115  002396                     __ptext3:
  1116                           	callstack 0
  1117  002396                     _lcd_sendNibble:
  1118                           	callstack 23
  1119                           
  1120                           ;incstack = 0
  1121                           ;lcd_sendNibble@nibble stored from wreg
  1122  002396  6E10               	movwf	lcd_sendNibble@nibble^0,c
  1123  002398                     
  1124                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 30:     uint8_t packet = (nibble << 4) | (RSb
      +                          it << 2);
  1125  002398  C00E  F00F         	movff	lcd_sendNibble@RSbit,??_lcd_sendNibble
  1126  00239C  90D8               	bcf	status,0,c
  1127  00239E  360F               	rlcf	??_lcd_sendNibble^0,f,c
  1128  0023A0  90D8               	bcf	status,0,c
  1129  0023A2  360F               	rlcf	??_lcd_sendNibble^0,f,c
  1130  0023A4  3810               	swapf	lcd_sendNibble@nibble^0,w,c
  1131  0023A6  0BF0               	andlw	240
  1132  0023A8  100F               	iorwf	??_lcd_sendNibble^0,w,c
  1133  0023AA  6E11               	movwf	lcd_sendNibble@packet^0,c
  1134  0023AC                     
  1135                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 31:     expander_setOutput(packet);
  1136  0023AC  5011               	movf	lcd_sendNibble@packet^0,w,c
  1137  0023AE  ECD5  F013         	call	_expander_setOutput
  1138  0023B2                     
  1139                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 32:     expander_setOutput(packet | (1<<3));
  1140  0023B2  5011               	movf	lcd_sendNibble@packet^0,w,c
  1141  0023B4  0908               	iorlw	8
  1142  0023B6  ECD5  F013         	call	_expander_setOutput
  1143  0023BA                     
  1144                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 33:     DELAY_milliseconds(1);
  1145  0023BA  0E00               	movlw	0
  1146  0023BC  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1147  0023BE  0E01               	movlw	1
  1148  0023C0  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1149  0023C2  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  1150  0023C6                     
  1151                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 34:     expander_setOutput(packet);
  1152  0023C6  5011               	movf	lcd_sendNibble@packet^0,w,c
  1153  0023C8  ECD5  F013         	call	_expander_setOutput
  1154  0023CC                     
  1155                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 35:     DELAY_milliseconds(40);
  1156  0023CC  0E00               	movlw	0
  1157  0023CE  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1158  0023D0  0E28               	movlw	40
  1159  0023D2  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1160  0023D4  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  1161  0023D8  0012               	return		;funcret
  1162  0023DA                     __end_of_lcd_sendNibble:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _expander_setup *****************
  1166 ;; Defined at:
  1167 ;;		line 44 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1185 ;;Total ram usage:        0 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    4
  1188 ;; This function calls:
  1189 ;;		_expander_sendByte
  1190 ;; This function is called by:
  1191 ;;		_lcd_setup
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text4
  1196  0027B8                     __ptext4:
  1197                           	callstack 0
  1198  0027B8                     _expander_setup:
  1199                           	callstack 24
  1200  0027B8                     
  1201                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 45:     expander_sendByte(0x01, 0);
  1202  0027B8  0E00               	movlw	0
  1203  0027BA  6E08               	movwf	expander_sendByte@byte^0,c
  1204  0027BC  0E01               	movlw	1
  1205  0027BE  EC83  F012         	call	_expander_sendByte
  1206  0027C2  0012               	return		;funcret
  1207  0027C4                     __end_of_expander_setup:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function _SPI1_Initialize *****************
  1211 ;; Defined at:
  1212 ;;		line 70 in file "mcc_generated_files/spi1.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_SYSTEM_Initialize
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text5
  1240  0026BC                     __ptext5:
  1241                           	callstack 0
  1242  0026BC                     _SPI1_Initialize:
  1243                           	callstack 29
  1244  0026BC                     
  1245                           ;mcc_generated_files/spi1.c: 73:     uint8_t *data = block;
  1246  0026BC  0E16               	movlw	22
  1247  0026BE  010E               	movlb	14	; () banked
  1248  0026C0  6FB2               	movwf	178,b	;volatile
  1249                           
  1250                           ;mcc_generated_files/spi1.c: 74:     while(blockSize--)
  1251  0026C2  0E15               	movlw	21
  1252  0026C4  6FB3               	movwf	179,b	;volatile
  1253                           
  1254                           ;mcc_generated_files/spi1.c: 75:     {
  1255  0026C6  0E0F               	movlw	15
  1256  0026C8  6FF8               	movwf	248,b	;volatile
  1257                           
  1258                           ;mcc_generated_files/spi1.c: 76:         SPI1_ExchangeByte(*data++);
  1259  0026CA  0E10               	movlw	16
  1260  0026CC  6FF6               	movwf	246,b	;volatile
  1261                           
  1262                           ;mcc_generated_files/spi1.c: 78: }
  1263  0026CE  0E40               	movlw	64
  1264  0026D0  6E94               	movwf	148,c	;volatile
  1265                           
  1266                           ;mcc_generated_files/spi1.c: 79: 
  1267  0026D2  0E00               	movlw	0
  1268  0026D4  6E95               	movwf	149,c	;volatile
  1269                           
  1270                           ;mcc_generated_files/spi1.c: 80: void SPI1_ReadBlock(void *block, size_t blockSize)
  1271  0026D6  0E01               	movlw	1
  1272  0026D8  6E92               	movwf	146,c	;volatile
  1273  0026DA                     
  1274                           ; BSR set to: 14
  1275                           ;mcc_generated_files/spi1.c: 81: {
  1276  0026DA  9C89               	bcf	137,6,c	;volatile
  1277  0026DC                     
  1278                           ; BSR set to: 14
  1279                           ;mcc_generated_files/spi1.c: 82:     uint8_t *data = block;
  1280  0026DC  9A95               	bcf	149,5,c	;volatile
  1281  0026DE                     
  1282                           ; BSR set to: 14
  1283  0026DE  0012               	return		;funcret
  1284  0026E0                     __end_of_SPI1_Initialize:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _PMD_Initialize *****************
  1288 ;; Defined at:
  1289 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_SYSTEM_Initialize
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text6
  1317  0026E0                     __ptext6:
  1318                           	callstack 0
  1319  0026E0                     _PMD_Initialize:
  1320                           	callstack 29
  1321  0026E0                     
  1322                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  1323  0026E0  0E00               	movlw	0
  1324  0026E2  010E               	movlb	14	; () banked
  1325  0026E4  6FDC               	movwf	220,b	;volatile
  1326                           
  1327                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  1328  0026E6  0E00               	movlw	0
  1329  0026E8  6FDD               	movwf	221,b	;volatile
  1330                           
  1331                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  1332  0026EA  0E00               	movlw	0
  1333  0026EC  6FDE               	movwf	222,b	;volatile
  1334                           
  1335                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  1336  0026EE  0E00               	movlw	0
  1337  0026F0  6FDF               	movwf	223,b	;volatile
  1338                           
  1339                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  1340  0026F2  0E00               	movlw	0
  1341  0026F4  6FE0               	movwf	224,b	;volatile
  1342                           
  1343                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  1344  0026F6  0E00               	movlw	0
  1345  0026F8  6FE1               	movwf	225,b	;volatile
  1346  0026FA                     
  1347                           ; BSR set to: 14
  1348  0026FA  0012               	return		;funcret
  1349  0026FC                     __end_of_PMD_Initialize:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _PIN_MANAGER_Initialize *****************
  1353 ;; Defined at:
  1354 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_SYSTEM_Initialize
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text7
  1382  001FFC                     __ptext7:
  1383                           	callstack 0
  1384  001FFC                     _PIN_MANAGER_Initialize:
  1385                           	callstack 29
  1386  001FFC                     
  1387                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1388  001FFC  0E00               	movlw	0
  1389  001FFE  6E86               	movwf	134,c	;volatile
  1390                           
  1391                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1392  002000  0E00               	movlw	0
  1393  002002  6E85               	movwf	133,c	;volatile
  1394                           
  1395                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1396  002004  0E00               	movlw	0
  1397  002006  6E82               	movwf	130,c	;volatile
  1398                           
  1399                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1400  002008  0E00               	movlw	0
  1401  00200A  6E83               	movwf	131,c	;volatile
  1402                           
  1403                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1404  00200C  0E00               	movlw	0
  1405  00200E  6E84               	movwf	132,c	;volatile
  1406                           
  1407                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1408  002010  0E07               	movlw	7
  1409  002012  6E8B               	movwf	139,c	;volatile
  1410                           
  1411                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7E;
  1412  002014  0E7E               	movlw	126
  1413  002016  6E87               	movwf	135,c	;volatile
  1414  002018                     
  1415                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1416  002018  6888               	setf	136,c	;volatile
  1417                           
  1418                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xAF;
  1419  00201A  0EAF               	movlw	175
  1420  00201C  6E89               	movwf	137,c	;volatile
  1421                           
  1422                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xEF;
  1423  00201E  0EEF               	movlw	239
  1424  002020  6E8A               	movwf	138,c	;volatile
  1425                           
  1426                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xE3;
  1427  002022  0EE3               	movlw	227
  1428  002024  010F               	movlb	15	; () banked
  1429  002026  6F21               	movwf	33,b	;volatile
  1430                           
  1431                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x8F;
  1432  002028  0E8F               	movlw	143
  1433  00202A  6F1C               	movwf	28,b	;volatile
  1434  00202C                     
  1435                           ; BSR set to: 15
  1436                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  1437  00202C  6914               	setf	20,b	;volatile
  1438                           
  1439                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1440  00202E  0E07               	movlw	7
  1441  002030  6F29               	movwf	41,b	;volatile
  1442                           
  1443                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x4E;
  1444  002032  0E4E               	movlw	78
  1445  002034  6F0C               	movwf	12,b	;volatile
  1446                           
  1447                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x0C;
  1448  002036  0E0C               	movlw	12
  1449  002038  6F20               	movwf	32,b	;volatile
  1450                           
  1451                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1452  00203A  0E00               	movlw	0
  1453  00203C  6F28               	movwf	40,b	;volatile
  1454                           
  1455                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1456  00203E  0E00               	movlw	0
  1457  002040  6F13               	movwf	19,b	;volatile
  1458                           
  1459                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x30;
  1460  002042  0E30               	movlw	48
  1461  002044  6F0B               	movwf	11,b	;volatile
  1462                           
  1463                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x03;
  1464  002046  0E03               	movlw	3
  1465  002048  6F1B               	movwf	27,b	;volatile
  1466                           
  1467                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1468  00204A  0E00               	movlw	0
  1469  00204C  6F27               	movwf	39,b	;volatile
  1470                           
  1471                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1472  00204E  0E00               	movlw	0
  1473  002050  6F0A               	movwf	10,b	;volatile
  1474                           
  1475                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1476  002052  0E00               	movlw	0
  1477  002054  6F12               	movwf	18,b	;volatile
  1478                           
  1479                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1480  002056  0E00               	movlw	0
  1481  002058  6F1A               	movwf	26,b	;volatile
  1482                           
  1483                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1484  00205A  0E00               	movlw	0
  1485  00205C  6F1F               	movwf	31,b	;volatile
  1486  00205E                     
  1487                           ; BSR set to: 15
  1488                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1489  00205E  6909               	setf	9,b	;volatile
  1490  002060                     
  1491                           ; BSR set to: 15
  1492                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1493  002060  6911               	setf	17,b	;volatile
  1494  002062                     
  1495                           ; BSR set to: 15
  1496                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1497  002062  6919               	setf	25,b	;volatile
  1498  002064                     
  1499                           ; BSR set to: 15
  1500                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1501  002064  691E               	setf	30,b	;volatile
  1502                           
  1503                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1504  002066  0E07               	movlw	7
  1505  002068  6F26               	movwf	38,b	;volatile
  1506  00206A                     
  1507                           ; BSR set to: 15
  1508                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1509  00206A  6908               	setf	8,b	;volatile
  1510  00206C                     
  1511                           ; BSR set to: 15
  1512                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1513  00206C  6910               	setf	16,b	;volatile
  1514  00206E                     
  1515                           ; BSR set to: 15
  1516                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1517  00206E  6918               	setf	24,b	;volatile
  1518  002070                     
  1519                           ; BSR set to: 15
  1520                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1521  002070  691D               	setf	29,b	;volatile
  1522                           
  1523                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1524  002072  0E0F               	movlw	15
  1525  002074  6F25               	movwf	37,b	;volatile
  1526                           
  1527                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x16;
  1528  002076  0E16               	movlw	22
  1529  002078  010E               	movlb	14	; () banked
  1530  00207A  6FB2               	movwf	178,b	;volatile
  1531                           
  1532                           ;mcc_generated_files/pin_manager.c: 128:     CLCIN0PPS = 0x04;
  1533  00207C  0E04               	movlw	4
  1534  00207E  6F1F               	movwf	31,b	;volatile
  1535                           
  1536                           ;mcc_generated_files/pin_manager.c: 129:     CLCIN3PPS = 0x1B;
  1537  002080  0E1B               	movlw	27
  1538  002082  6F22               	movwf	34,b	;volatile
  1539                           
  1540                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
  1541  002084  0E10               	movlw	16
  1542  002086  6FF6               	movwf	246,b	;volatile
  1543                           
  1544                           ;mcc_generated_files/pin_manager.c: 131:     CLCIN2PPS = 0x1A;
  1545  002088  0E1A               	movlw	26
  1546  00208A  6F21               	movwf	33,b	;volatile
  1547                           
  1548                           ;mcc_generated_files/pin_manager.c: 132:     CLCIN1PPS = 0x05;
  1549  00208C  0E05               	movlw	5
  1550  00208E  6F20               	movwf	32,b	;volatile
  1551                           
  1552                           ;mcc_generated_files/pin_manager.c: 133:     RC6PPS = 0x0F;
  1553  002090  0E0F               	movlw	15
  1554  002092  6FF8               	movwf	248,b	;volatile
  1555                           
  1556                           ;mcc_generated_files/pin_manager.c: 134:     SSP1DATPPS = 0x15;
  1557  002094  0E15               	movlw	21
  1558  002096  6FB3               	movwf	179,b	;volatile
  1559  002098                     
  1560                           ; BSR set to: 14
  1561  002098  0012               	return		;funcret
  1562  00209A                     __end_of_PIN_MANAGER_Initialize:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _OSCILLATOR_Initialize *****************
  1566 ;; Defined at:
  1567 ;;		line 63 in file "mcc_generated_files/mcc.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_SYSTEM_Initialize
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text8
  1595  002718                     __ptext8:
  1596                           	callstack 0
  1597  002718                     _OSCILLATOR_Initialize:
  1598                           	callstack 29
  1599  002718                     
  1600                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  1601  002718  0E60               	movlw	96
  1602  00271A  010E               	movlb	14	; () banked
  1603  00271C  6FD3               	movwf	211,b	;volatile
  1604                           
  1605                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  1606  00271E  0E00               	movlw	0
  1607  002720  6FD5               	movwf	213,b	;volatile
  1608                           
  1609                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  1610  002722  0E00               	movlw	0
  1611  002724  6FD7               	movwf	215,b	;volatile
  1612                           
  1613                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x00;
  1614  002726  0E00               	movlw	0
  1615  002728  6FD9               	movwf	217,b	;volatile
  1616                           
  1617                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  1618  00272A  0E00               	movlw	0
  1619  00272C  6FD8               	movwf	216,b	;volatile
  1620  00272E                     
  1621                           ; BSR set to: 14
  1622  00272E  0012               	return		;funcret
  1623  002730                     __end_of_OSCILLATOR_Initialize:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _CLC6_Initialize *****************
  1627 ;; Defined at:
  1628 ;;		line 58 in file "mcc_generated_files/clc6.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;Total ram usage:        0 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_SYSTEM_Initialize
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text9
  1656  002598                     __ptext9:
  1657                           	callstack 0
  1658  002598                     _CLC6_Initialize:
  1659                           	callstack 29
  1660  002598                     
  1661                           ;mcc_generated_files/clc6.c: 63:     CLC6POL = 0x00;
  1662  002598  0E00               	movlw	0
  1663  00259A  010E               	movlb	14	; () banked
  1664  00259C  6F5A               	movwf	90,b	;volatile
  1665                           
  1666                           ;mcc_generated_files/clc6.c: 65:     CLC6SEL0 = 0x03;
  1667  00259E  0E03               	movlw	3
  1668  0025A0  6F5B               	movwf	91,b	;volatile
  1669                           
  1670                           ;mcc_generated_files/clc6.c: 67:     CLC6SEL1 = 0x0F;
  1671  0025A2  0E0F               	movlw	15
  1672  0025A4  6F5C               	movwf	92,b	;volatile
  1673                           
  1674                           ;mcc_generated_files/clc6.c: 69:     CLC6SEL2 = 0x0F;
  1675  0025A6  0E0F               	movlw	15
  1676  0025A8  6F5D               	movwf	93,b	;volatile
  1677                           
  1678                           ;mcc_generated_files/clc6.c: 71:     CLC6SEL3 = 0x0F;
  1679  0025AA  0E0F               	movlw	15
  1680  0025AC  6F5E               	movwf	94,b	;volatile
  1681                           
  1682                           ;mcc_generated_files/clc6.c: 73:     CLC6GLS0 = 0x01;
  1683  0025AE  0E01               	movlw	1
  1684  0025B0  6F5F               	movwf	95,b	;volatile
  1685                           
  1686                           ;mcc_generated_files/clc6.c: 75:     CLC6GLS1 = 0x00;
  1687  0025B2  0E00               	movlw	0
  1688  0025B4  6F60               	movwf	96,b	;volatile
  1689                           
  1690                           ;mcc_generated_files/clc6.c: 77:     CLC6GLS2 = 0x00;
  1691  0025B6  0E00               	movlw	0
  1692  0025B8  6F61               	movwf	97,b	;volatile
  1693                           
  1694                           ;mcc_generated_files/clc6.c: 79:     CLC6GLS3 = 0x00;
  1695  0025BA  0E00               	movlw	0
  1696  0025BC  6F62               	movwf	98,b	;volatile
  1697                           
  1698                           ;mcc_generated_files/clc6.c: 81:     CLC6CON = 0x81;
  1699  0025BE  0E81               	movlw	129
  1700  0025C0  6F59               	movwf	89,b	;volatile
  1701  0025C2                     
  1702                           ; BSR set to: 14
  1703  0025C2  0012               	return		;funcret
  1704  0025C4                     __end_of_CLC6_Initialize:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _CLC5_Initialize *****************
  1708 ;; Defined at:
  1709 ;;		line 58 in file "mcc_generated_files/clc5.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_SYSTEM_Initialize
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text10
  1737  0025C4                     __ptext10:
  1738                           	callstack 0
  1739  0025C4                     _CLC5_Initialize:
  1740                           	callstack 29
  1741  0025C4                     
  1742                           ;mcc_generated_files/clc5.c: 63:     CLC5POL = 0x00;
  1743  0025C4  0E00               	movlw	0
  1744  0025C6  010E               	movlb	14	; () banked
  1745  0025C8  6F50               	movwf	80,b	;volatile
  1746                           
  1747                           ;mcc_generated_files/clc5.c: 65:     CLC5SEL0 = 0x03;
  1748  0025CA  0E03               	movlw	3
  1749  0025CC  6F51               	movwf	81,b	;volatile
  1750                           
  1751                           ;mcc_generated_files/clc5.c: 67:     CLC5SEL1 = 0x0F;
  1752  0025CE  0E0F               	movlw	15
  1753  0025D0  6F52               	movwf	82,b	;volatile
  1754                           
  1755                           ;mcc_generated_files/clc5.c: 69:     CLC5SEL2 = 0x0F;
  1756  0025D2  0E0F               	movlw	15
  1757  0025D4  6F53               	movwf	83,b	;volatile
  1758                           
  1759                           ;mcc_generated_files/clc5.c: 71:     CLC5SEL3 = 0x02;
  1760  0025D6  0E02               	movlw	2
  1761  0025D8  6F54               	movwf	84,b	;volatile
  1762                           
  1763                           ;mcc_generated_files/clc5.c: 73:     CLC5GLS0 = 0x01;
  1764  0025DA  0E01               	movlw	1
  1765  0025DC  6F55               	movwf	85,b	;volatile
  1766                           
  1767                           ;mcc_generated_files/clc5.c: 75:     CLC5GLS1 = 0x00;
  1768  0025DE  0E00               	movlw	0
  1769  0025E0  6F56               	movwf	86,b	;volatile
  1770                           
  1771                           ;mcc_generated_files/clc5.c: 77:     CLC5GLS2 = 0x00;
  1772  0025E2  0E00               	movlw	0
  1773  0025E4  6F57               	movwf	87,b	;volatile
  1774                           
  1775                           ;mcc_generated_files/clc5.c: 79:     CLC5GLS3 = 0x40;
  1776  0025E6  0E40               	movlw	64
  1777  0025E8  6F58               	movwf	88,b	;volatile
  1778                           
  1779                           ;mcc_generated_files/clc5.c: 81:     CLC5CON = 0x81;
  1780  0025EA  0E81               	movlw	129
  1781  0025EC  6F4F               	movwf	79,b	;volatile
  1782  0025EE                     
  1783                           ; BSR set to: 14
  1784  0025EE  0012               	return		;funcret
  1785  0025F0                     __end_of_CLC5_Initialize:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _CLC2_Initialize *****************
  1789 ;; Defined at:
  1790 ;;		line 58 in file "mcc_generated_files/clc2.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_SYSTEM_Initialize
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text11
  1818  0025F0                     __ptext11:
  1819                           	callstack 0
  1820  0025F0                     _CLC2_Initialize:
  1821                           	callstack 29
  1822  0025F0                     
  1823                           ;mcc_generated_files/clc2.c: 63:     CLC2POL = 0x00;
  1824  0025F0  0E00               	movlw	0
  1825  0025F2  010E               	movlb	14	; () banked
  1826  0025F4  6F32               	movwf	50,b	;volatile
  1827                           
  1828                           ;mcc_generated_files/clc2.c: 65:     CLC2SEL0 = 0x25;
  1829  0025F6  0E25               	movlw	37
  1830  0025F8  6F33               	movwf	51,b	;volatile
  1831                           
  1832                           ;mcc_generated_files/clc2.c: 67:     CLC2SEL1 = 0x0F;
  1833  0025FA  0E0F               	movlw	15
  1834  0025FC  6F34               	movwf	52,b	;volatile
  1835                           
  1836                           ;mcc_generated_files/clc2.c: 69:     CLC2SEL2 = 0x0F;
  1837  0025FE  0E0F               	movlw	15
  1838  002600  6F35               	movwf	53,b	;volatile
  1839                           
  1840                           ;mcc_generated_files/clc2.c: 71:     CLC2SEL3 = 0x01;
  1841  002602  0E01               	movlw	1
  1842  002604  6F36               	movwf	54,b	;volatile
  1843                           
  1844                           ;mcc_generated_files/clc2.c: 73:     CLC2GLS0 = 0x02;
  1845  002606  0E02               	movlw	2
  1846  002608  6F37               	movwf	55,b	;volatile
  1847                           
  1848                           ;mcc_generated_files/clc2.c: 75:     CLC2GLS1 = 0x00;
  1849  00260A  0E00               	movlw	0
  1850  00260C  6F38               	movwf	56,b	;volatile
  1851                           
  1852                           ;mcc_generated_files/clc2.c: 77:     CLC2GLS2 = 0x00;
  1853  00260E  0E00               	movlw	0
  1854  002610  6F39               	movwf	57,b	;volatile
  1855                           
  1856                           ;mcc_generated_files/clc2.c: 79:     CLC2GLS3 = 0x40;
  1857  002612  0E40               	movlw	64
  1858  002614  6F3A               	movwf	58,b	;volatile
  1859                           
  1860                           ;mcc_generated_files/clc2.c: 81:     CLC2CON = 0x81;
  1861  002616  0E81               	movlw	129
  1862  002618  6F31               	movwf	49,b	;volatile
  1863  00261A                     
  1864                           ; BSR set to: 14
  1865  00261A  0012               	return		;funcret
  1866  00261C                     __end_of_CLC2_Initialize:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _CLC1_Initialize *****************
  1870 ;; Defined at:
  1871 ;;		line 58 in file "mcc_generated_files/clc1.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_SYSTEM_Initialize
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text12
  1899  00261C                     __ptext12:
  1900                           	callstack 0
  1901  00261C                     _CLC1_Initialize:
  1902                           	callstack 29
  1903  00261C                     
  1904                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
  1905  00261C  0E00               	movlw	0
  1906  00261E  010E               	movlb	14	; () banked
  1907  002620  6F28               	movwf	40,b	;volatile
  1908                           
  1909                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x22;
  1910  002622  0E22               	movlw	34
  1911  002624  6F29               	movwf	41,b	;volatile
  1912                           
  1913                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x0F;
  1914  002626  0E0F               	movlw	15
  1915  002628  6F2A               	movwf	42,b	;volatile
  1916                           
  1917                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x0F;
  1918  00262A  0E0F               	movlw	15
  1919  00262C  6F2B               	movwf	43,b	;volatile
  1920                           
  1921                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x00;
  1922  00262E  0E00               	movlw	0
  1923  002630  6F2C               	movwf	44,b	;volatile
  1924                           
  1925                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x02;
  1926  002632  0E02               	movlw	2
  1927  002634  6F2D               	movwf	45,b	;volatile
  1928                           
  1929                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
  1930  002636  0E00               	movlw	0
  1931  002638  6F2E               	movwf	46,b	;volatile
  1932                           
  1933                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
  1934  00263A  0E00               	movlw	0
  1935  00263C  6F2F               	movwf	47,b	;volatile
  1936                           
  1937                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x40;
  1938  00263E  0E40               	movlw	64
  1939  002640  6F30               	movwf	48,b	;volatile
  1940                           
  1941                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
  1942  002642  0E81               	movlw	129
  1943  002644  6F27               	movwf	39,b	;volatile
  1944  002646                     
  1945                           ; BSR set to: 14
  1946  002646  0012               	return		;funcret
  1947  002648                     __end_of_CLC1_Initialize:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _GDapplication *****************
  1951 ;; Defined at:
  1952 ;;		line 15 in file "application.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  lcdDataBuffe    8   20[BANK0 ] unsigned char [8]
  1957 ;;  degree          2   28[BANK0 ] unsigned short 
  1958 ;;  clcData         1   30[BANK0 ] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1969 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1971 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;Total ram usage:       12 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    8
  1975 ;; This function calls:
  1976 ;;		_User_lcd_writeString
  1977 ;;		___lwdiv
  1978 ;;		___lwmod
  1979 ;;		___wmul
  1980 ;;		_sprintf
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text13
  1987  001AE2                     __ptext13:
  1988                           	callstack 0
  1989  001AE2                     _GDapplication:
  1990                           	callstack 22
  1991  001AE2                     
  1992                           ;application.c: 17:     uint8_t lcdDataBuffer[8] = {0};
  1993  001AE2  EE20  F0A7         	lfsr	2,GDapplication@lcdDataBuffer
  1994  001AE6  0E07               	movlw	7
  1995  001AE8                     u1741:
  1996  001AE8  6ADE               	clrf	postinc2,c
  1997  001AEA  06E8               	decf	wreg,f,c
  1998  001AEC  E2FD               	bc	u1741
  1999  001AEE                     
  2000                           ;application.c: 22:     clcData = CLCDATA;
  2001  001AEE  CE77 F0B1          	movff	3703,GDapplication@clcData	;volatile
  2002  001AF2                     
  2003                           ;application.c: 24:     clcData = ((clcData & 0x30)>> 2)| (clcData & 0x03) ;
  2004  001AF2  C0B1  F05F         	movff	GDapplication@clcData,??_GDapplication
  2005  001AF6  0E03               	movlw	3
  2006  001AF8  165F               	andwf	??_GDapplication^0,f,c
  2007  001AFA  0100               	movlb	0	; () banked
  2008  001AFC  41B1               	rrncf	GDapplication@clcData& (0+255),w,b
  2009  001AFE  42E8               	rrncf	wreg,f,c
  2010  001B00  0B3F               	andlw	63
  2011  001B02  0B0C               	andlw	12
  2012  001B04  105F               	iorwf	??_GDapplication^0,w,c
  2013  001B06  6FB1               	movwf	GDapplication@clcData& (0+255),b
  2014  001B08                     
  2015                           ; BSR set to: 0
  2016                           ;application.c: 26:     degree = ((2250) * (clcData & 0x0F));
  2017  001B08  C0B1  F05F         	movff	GDapplication@clcData,??_GDapplication
  2018  001B0C  0E0F               	movlw	15
  2019  001B0E  165F               	andwf	??_GDapplication^0,f,c
  2020  001B10  505F               	movf	??_GDapplication^0,w,c
  2021  001B12  6E01               	movwf	___wmul@multiplier^0,c
  2022  001B14  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2023  001B16  0E08               	movlw	8
  2024  001B18  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2025  001B1A  0ECA               	movlw	202
  2026  001B1C  6E03               	movwf	___wmul@multiplicand^0,c
  2027  001B1E  EC4B  F013         	call	___wmul	;wreg free
  2028  001B22  C001  F0AF         	movff	?___wmul,GDapplication@degree
  2029  001B26  C002  F0B0         	movff	?___wmul+1,GDapplication@degree+1
  2030  001B2A                     
  2031                           ;application.c: 27:     sprintf((char*)lcdDataBuffer,"%02d",(clcData & 0x0F));
  2032  001B2A  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2033  001B2C  0100               	movlb	0	; () banked
  2034  001B2E  6F93               	movwf	sprintf@s& (0+255),b
  2035  001B30  0E00               	movlw	high GDapplication@lcdDataBuffer
  2036  001B32  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2037  001B34  0E5D               	movlw	low STR_3
  2038  001B36  6F95               	movwf	sprintf@fmt& (0+255),b
  2039  001B38  0E0F               	movlw	high STR_3
  2040  001B3A  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2041  001B3C  C0B1  F05F         	movff	GDapplication@clcData,??_GDapplication
  2042  001B40  0E0F               	movlw	15
  2043  001B42  165F               	andwf	??_GDapplication^0,f,c
  2044  001B44  505F               	movf	??_GDapplication^0,w,c
  2045  001B46  6F97               	movwf	(?_sprintf+4)& (0+255),b
  2046  001B48  6B98               	clrf	(?_sprintf+5)& (0+255),b
  2047  001B4A  EC79  F011         	call	_sprintf	;wreg free
  2048  001B4E                     
  2049                           ;application.c: 28:     User_lcd_writeString((char*)lcdDataBuffer,1,14);
  2050  001B4E  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2051  001B50  6E17               	movwf	User_lcd_writeString@string^0,c
  2052  001B52  0E00               	movlw	high GDapplication@lcdDataBuffer
  2053  001B54  6E18               	movwf	(User_lcd_writeString@string+1)^0,c
  2054  001B56  0E01               	movlw	1
  2055  001B58  6E19               	movwf	User_lcd_writeString@row^0,c
  2056  001B5A  0E0E               	movlw	14
  2057  001B5C  6E1A               	movwf	User_lcd_writeString@column^0,c
  2058  001B5E  EC4D  F010         	call	_User_lcd_writeString	;wreg free
  2059  001B62                     
  2060                           ;application.c: 29:     if(degree % 100)
  2061  001B62  C0AF  F001         	movff	GDapplication@degree,___lwmod@dividend
  2062  001B66  C0B0  F002         	movff	GDapplication@degree+1,___lwmod@dividend+1
  2063  001B6A  0E00               	movlw	0
  2064  001B6C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2065  001B6E  0E64               	movlw	100
  2066  001B70  6E03               	movwf	___lwmod@divisor^0,c
  2067  001B72  EC47  F011         	call	___lwmod	;wreg free
  2068  001B76  5001               	movf	?___lwmod^0,w,c
  2069  001B78  1002               	iorwf	(?___lwmod+1)^0,w,c
  2070  001B7A  B4D8               	btfsc	status,2,c
  2071  001B7C  EFC2  F00D         	goto	u1751
  2072  001B80  EFC4  F00D         	goto	u1750
  2073  001B84                     u1751:
  2074  001B84  EFF2  F00D         	goto	l2859
  2075  001B88                     u1750:
  2076  001B88                     
  2077                           ;application.c: 30:     {;application.c: 31:        sprintf((char*)lcdDataBuffer,"%3d.%0
      +                          2d%c",(degree/100),(degree%100),0xDF);
  2078  001B88  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2079  001B8A  0100               	movlb	0	; () banked
  2080  001B8C  6F93               	movwf	sprintf@s& (0+255),b
  2081  001B8E  0E00               	movlw	high GDapplication@lcdDataBuffer
  2082  001B90  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2083  001B92  0E49               	movlw	low STR_4
  2084  001B94  6F95               	movwf	sprintf@fmt& (0+255),b
  2085  001B96  0E0F               	movlw	high STR_4
  2086  001B98  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2087  001B9A  C0AF  F001         	movff	GDapplication@degree,___lwdiv@dividend
  2088  001B9E  C0B0  F002         	movff	GDapplication@degree+1,___lwdiv@dividend+1
  2089  001BA2  0E00               	movlw	0
  2090  001BA4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2091  001BA6  0E64               	movlw	100
  2092  001BA8  6E03               	movwf	___lwdiv@divisor^0,c
  2093  001BAA  ECDA  F010         	call	___lwdiv	;wreg free
  2094  001BAE  C001  F097         	movff	?___lwdiv,?_sprintf+4
  2095  001BB2  C002  F098         	movff	?___lwdiv+1,?_sprintf+5
  2096  001BB6  C0AF  F001         	movff	GDapplication@degree,___lwmod@dividend
  2097  001BBA  C0B0  F002         	movff	GDapplication@degree+1,___lwmod@dividend+1
  2098  001BBE  0E00               	movlw	0
  2099  001BC0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2100  001BC2  0E64               	movlw	100
  2101  001BC4  6E03               	movwf	___lwmod@divisor^0,c
  2102  001BC6  EC47  F011         	call	___lwmod	;wreg free
  2103  001BCA  C001  F099         	movff	?___lwmod,?_sprintf+6
  2104  001BCE  C002  F09A         	movff	?___lwmod+1,?_sprintf+7
  2105  001BD2  0E00               	movlw	0
  2106  001BD4  0100               	movlb	0	; () banked
  2107  001BD6  6F9C               	movwf	(?_sprintf+9)& (0+255),b
  2108  001BD8  0EDF               	movlw	223
  2109  001BDA  6F9B               	movwf	(?_sprintf+8)& (0+255),b
  2110  001BDC  EC79  F011         	call	_sprintf	;wreg free
  2111                           
  2112                           ;application.c: 32:     }
  2113  001BE0  EF10  F00E         	goto	l481
  2114  001BE4                     l2859:
  2115                           
  2116                           ;application.c: 34:     {;application.c: 35:        sprintf((char*)lcdDataBuffer,"%3d%c 
      +                            ",(degree/100),0xDF);
  2117  001BE4  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2118  001BE6  0100               	movlb	0	; () banked
  2119  001BE8  6F93               	movwf	sprintf@s& (0+255),b
  2120  001BEA  0E00               	movlw	high GDapplication@lcdDataBuffer
  2121  001BEC  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2122  001BEE  0E54               	movlw	low STR_5
  2123  001BF0  6F95               	movwf	sprintf@fmt& (0+255),b
  2124  001BF2  0E0F               	movlw	high STR_5
  2125  001BF4  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2126  001BF6  C0AF  F001         	movff	GDapplication@degree,___lwdiv@dividend
  2127  001BFA  C0B0  F002         	movff	GDapplication@degree+1,___lwdiv@dividend+1
  2128  001BFE  0E00               	movlw	0
  2129  001C00  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2130  001C02  0E64               	movlw	100
  2131  001C04  6E03               	movwf	___lwdiv@divisor^0,c
  2132  001C06  ECDA  F010         	call	___lwdiv	;wreg free
  2133  001C0A  C001  F097         	movff	?___lwdiv,?_sprintf+4
  2134  001C0E  C002  F098         	movff	?___lwdiv+1,?_sprintf+5
  2135  001C12  0E00               	movlw	0
  2136  001C14  0100               	movlb	0	; () banked
  2137  001C16  6F9A               	movwf	(?_sprintf+7)& (0+255),b
  2138  001C18  0EDF               	movlw	223
  2139  001C1A  6F99               	movwf	(?_sprintf+6)& (0+255),b
  2140  001C1C  EC79  F011         	call	_sprintf	;wreg free
  2141  001C20                     l481:
  2142                           
  2143                           ;application.c: 37:     User_lcd_writeString((char*)lcdDataBuffer,0,9);
  2144  001C20  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2145  001C22  6E17               	movwf	User_lcd_writeString@string^0,c
  2146  001C24  0E00               	movlw	high GDapplication@lcdDataBuffer
  2147  001C26  6E18               	movwf	(User_lcd_writeString@string+1)^0,c
  2148  001C28  0E00               	movlw	0
  2149  001C2A  6E19               	movwf	User_lcd_writeString@row^0,c
  2150  001C2C  0E09               	movlw	9
  2151  001C2E  6E1A               	movwf	User_lcd_writeString@column^0,c
  2152  001C30  EC4D  F010         	call	_User_lcd_writeString	;wreg free
  2153  001C34  0012               	return		;funcret
  2154  001C36                     __end_of_GDapplication:
  2155                           	callstack 0
  2156                           
  2157 ;; *************** function _sprintf *****************
  2158 ;; Defined at:
  2159 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2162 ;;		 -> GDapplication@lcdDataBuffer(8), 
  2163 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2164 ;;		 -> STR_5(9), STR_4(11), STR_3(5), 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  f               6   14[BANK0 ] struct _IO_FILE
  2167 ;;  ap              2   12[BANK0 ] PTR void [1]
  2168 ;;		 -> ?_sprintf(2), 
  2169 ;;  ret             2    0        int 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  2    0[BANK0 ] int 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2179 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2180 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2182 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;Total ram usage:       20 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    7
  2186 ;; This function calls:
  2187 ;;		_vfprintf
  2188 ;; This function is called by:
  2189 ;;		_GDapplication
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text14
  2194  0022F2                     __ptext14:
  2195                           	callstack 0
  2196  0022F2                     _sprintf:
  2197                           	callstack 22
  2198  0022F2  0E97               	movlw	low (?_sprintf+4)
  2199  0022F4  0100               	movlb	0	; () banked
  2200  0022F6  6F9F               	movwf	sprintf@ap& (0+255),b
  2201  0022F8  0E00               	movlw	high (?_sprintf+4)
  2202  0022FA  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
  2203  0022FC  C093  F0A1         	movff	sprintf@s,sprintf@f
  2204  002300  C094  F0A2         	movff	sprintf@s+1,sprintf@f+1
  2205  002304                     
  2206                           ; BSR set to: 0
  2207  002304  0E00               	movlw	0
  2208  002306  6FA4               	movwf	(sprintf@f+3)& (0+255),b
  2209  002308  0E00               	movlw	0
  2210  00230A  6FA3               	movwf	(sprintf@f+2)& (0+255),b
  2211  00230C                     
  2212                           ; BSR set to: 0
  2213  00230C  0E00               	movlw	0
  2214  00230E  6FA6               	movwf	(sprintf@f+5)& (0+255),b
  2215  002310  0E00               	movlw	0
  2216  002312  6FA5               	movwf	(sprintf@f+4)& (0+255),b
  2217  002314                     
  2218                           ; BSR set to: 0
  2219  002314  0EA1               	movlw	low sprintf@f
  2220  002316  6E57               	movwf	vfprintf@fp^0,c
  2221  002318  0E00               	movlw	high sprintf@f
  2222  00231A  6E58               	movwf	(vfprintf@fp+1)^0,c
  2223  00231C  C095  F059         	movff	sprintf@fmt,vfprintf@fmt
  2224  002320  C096  F05A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2225  002324  0E9F               	movlw	low sprintf@ap
  2226  002326  6E5B               	movwf	vfprintf@ap^0,c
  2227  002328  0E00               	movlw	high sprintf@ap
  2228  00232A  6E5C               	movwf	(vfprintf@ap+1)^0,c
  2229  00232C  EC14  F011         	call	_vfprintf	;wreg free
  2230  002330  0100               	movlb	0	; () banked
  2231  002332  51A3               	movf	(sprintf@f+2)& (0+255),w,b
  2232  002334  2593               	addwf	sprintf@s& (0+255),w,b
  2233  002336  6ED9               	movwf	fsr2l,c
  2234  002338  51A4               	movf	(sprintf@f+3)& (0+255),w,b
  2235  00233A  2194               	addwfc	(sprintf@s+1)& (0+255),w,b
  2236  00233C  6EDA               	movwf	fsr2h,c
  2237  00233E  0E00               	movlw	0
  2238  002340  6EDF               	movwf	indf2,c
  2239  002342                     
  2240                           ; BSR set to: 0
  2241  002342  0012               	return		;funcret
  2242  002344                     __end_of_sprintf:
  2243                           	callstack 0
  2244                           
  2245 ;; *************** function _vfprintf *****************
  2246 ;; Defined at:
  2247 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  fp              2   86[COMRAM] PTR struct _IO_FILE
  2250 ;;		 -> sprintf@f(6), 
  2251 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  2252 ;;		 -> STR_5(9), STR_4(11), STR_3(5), 
  2253 ;;  ap              2   90[COMRAM] PTR PTR void 
  2254 ;;		 -> sprintf@ap(2), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  2257 ;;		 -> STR_5(9), STR_4(11), STR_3(5), 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  2   86[COMRAM] int 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2267 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;Total ram usage:        8 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    6
  2274 ;; This function calls:
  2275 ;;		_vfpfcnvrt
  2276 ;; This function is called by:
  2277 ;;		_sprintf
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text15
  2282  002228                     __ptext15:
  2283                           	callstack 0
  2284  002228                     _vfprintf:
  2285                           	callstack 22
  2286  002228                     
  2287                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2288  002228  C059  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  2289  00222C  C05A  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2290  002230                     
  2291                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2292  002230  0E00               	movlw	0
  2293  002232  0100               	movlb	0	; () banked
  2294  002234  6F6C               	movwf	(_nout+1)& (0+255),b
  2295  002236  0E00               	movlw	0
  2296  002238  6F6B               	movwf	_nout& (0+255),b
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2299  00223A  EF32  F011         	goto	l2729
  2300  00223E                     l2727:
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2304  00223E  C057  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2305  002242  C058  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2306  002246  0E5D               	movlw	low vfprintf@cfmt
  2307  002248  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2308  00224A  0E00               	movlw	high vfprintf@cfmt
  2309  00224C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2310  00224E  C05B  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2311  002252  C05C  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2312  002256  ECB2  F007         	call	_vfpfcnvrt	;wreg free
  2313  00225A  5040               	movf	?_vfpfcnvrt^0,w,c
  2314  00225C  0100               	movlb	0	; () banked
  2315  00225E  276B               	addwf	_nout& (0+255),f,b
  2316  002260  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2317  002262  236C               	addwfc	(_nout+1)& (0+255),f,b
  2318  002264                     l2729:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2322  002264  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2323  002268  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2324  00226C                     	if	0	;tblptru may be non-zero
  2325  00226C                     	endif
  2326  00226C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2327  00226C  0E00               	movlw	low (__mediumconst shr (0+16))
  2328  00226E  6EF8               	movwf	tblptru,c
  2329  002270                     	endif
  2330  002270  0008               	tblrd		*
  2331  002272  50F5               	movf	tablat,w,c
  2332  002274  0900               	iorlw	0
  2333  002276  A4D8               	btfss	status,2,c
  2334  002278  EF40  F011         	goto	u1631
  2335  00227C  EF42  F011         	goto	u1630
  2336  002280                     u1631:
  2337  002280  EF1F  F011         	goto	l2727
  2338  002284                     u1630:
  2339  002284                     
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2342  002284  C06B  F057         	movff	_nout,?_vfprintf
  2343  002288  C06C  F058         	movff	_nout+1,?_vfprintf+1
  2344  00228C                     
  2345                           ; BSR set to: 0
  2346  00228C  0012               	return		;funcret
  2347  00228E                     __end_of_vfprintf:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function _vfpfcnvrt *****************
  2351 ;; Defined at:
  2352 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2355 ;;		 -> sprintf@f(6), 
  2356 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2357 ;;		 -> vfprintf@cfmt(2), 
  2358 ;;  ap              2   67[COMRAM] PTR PTR void 
  2359 ;;		 -> sprintf@ap(2), 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  ll              8   73[COMRAM] long long 
  2362 ;;  llu             8    0        unsigned long long 
  2363 ;;  f               4    0        unsigned long long 
  2364 ;;  vp              3    0        PTR void 
  2365 ;;  ct              3    0        unsigned char [3]
  2366 ;;  cp              3    0        PTR unsigned char 
  2367 ;;  done            2   81[COMRAM] int 
  2368 ;;  i               2    0        int 
  2369 ;;  c               1   85[COMRAM] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  2   63[COMRAM] int 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2379 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2380 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2381 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;Total ram usage:       23 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    5
  2386 ;; This function calls:
  2387 ;;		_atoi
  2388 ;;		_ctoa
  2389 ;;		_dtoa
  2390 ;;		_fputc
  2391 ;;		_isdigit
  2392 ;; This function is called by:
  2393 ;;		_vfprintf
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text16
  2398  000F64                     __ptext16:
  2399                           	callstack 0
  2400  000F64                     _vfpfcnvrt:
  2401                           	callstack 22
  2402  000F64                     
  2403                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2404  000F64  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2405  000F68  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2406  000F6C  CFDE FFF6          	movff	postinc2,tblptrl
  2407  000F70  CFDD FFF7          	movff	postdec2,tblptrh
  2408  000F74                     	if	0	;tblptru may be non-zero
  2409  000F74                     	endif
  2410  000F74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2411  000F74  0E00               	movlw	low (__mediumconst shr (0+16))
  2412  000F76  6EF8               	movwf	tblptru,c
  2413  000F78                     	endif
  2414  000F78  0008               	tblrd		*
  2415  000F7A  50F5               	movf	tablat,w,c
  2416  000F7C  0A25               	xorlw	37
  2417  000F7E  A4D8               	btfss	status,2,c
  2418  000F80  EFC4  F007         	goto	u1511
  2419  000F84  EFC6  F007         	goto	u1510
  2420  000F88                     u1511:
  2421  000F88  EF9A  F009         	goto	l2683
  2422  000F8C                     u1510:
  2423  000F8C                     
  2424                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2425  000F8C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2426  000F90  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2427  000F94  2ADE               	incf	postinc2,f,c
  2428  000F96  0E00               	movlw	0
  2429  000F98  22DD               	addwfc	postdec2,f,c
  2430  000F9A                     
  2431                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2432  000F9A  0E00               	movlw	0
  2433  000F9C  0100               	movlb	0	; () banked
  2434  000F9E  6F6E               	movwf	(_width+1)& (0+255),b
  2435  000FA0  0E00               	movlw	0
  2436  000FA2  6F6D               	movwf	_width& (0+255),b
  2437  000FA4  C06D  F071         	movff	_width,_flags
  2438  000FA8  C06E  F072         	movff	_width+1,_flags+1
  2439  000FAC                     
  2440                           ; BSR set to: 0
  2441                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2442  000FAC  696F               	setf	_prec& (0+255),b
  2443  000FAE  6970               	setf	(_prec+1)& (0+255),b
  2444  000FB0                     
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2447  000FB0  0E00               	movlw	0
  2448  000FB2  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  2449  000FB4  0E00               	movlw	0
  2450  000FB6  6E52               	movwf	vfpfcnvrt@done^0,c
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2453  000FB8  EF2B  F008         	goto	l2627
  2454  000FBC                     l2601:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2457  000FBC  0100               	movlb	0	; () banked
  2458  000FBE  8171               	bsf	_flags& (0+255),0,b
  2459  000FC0                     l2603:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2463  000FC0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464  000FC4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465  000FC8  2ADE               	incf	postinc2,f,c
  2466  000FCA  0E00               	movlw	0
  2467  000FCC  22DD               	addwfc	postdec2,f,c
  2468                           
  2469                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2470  000FCE  EF2B  F008         	goto	l2627
  2471  000FD2                     l2605:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2474  000FD2  0100               	movlb	0	; () banked
  2475  000FD4  8371               	bsf	_flags& (0+255),1,b
  2476  000FD6  EFE0  F007         	goto	l2603
  2477  000FDA                     l2609:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2480  000FDA  0100               	movlb	0	; () banked
  2481  000FDC  8571               	bsf	_flags& (0+255),2,b
  2482  000FDE  EFE0  F007         	goto	l2603
  2483  000FE2                     l2613:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2486  000FE2  0100               	movlb	0	; () banked
  2487  000FE4  8771               	bsf	_flags& (0+255),3,b
  2488  000FE6  EFE0  F007         	goto	l2603
  2489  000FEA                     l2617:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2492  000FEA  0100               	movlb	0	; () banked
  2493  000FEC  8971               	bsf	_flags& (0+255),4,b
  2494  000FEE  EFE0  F007         	goto	l2603
  2495  000FF2                     l2621:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2498  000FF2  0E00               	movlw	0
  2499  000FF4  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  2500  000FF6  0E01               	movlw	1
  2501  000FF8  6E52               	movwf	vfpfcnvrt@done^0,c
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2504  000FFA  EF2B  F008         	goto	l2627
  2505  000FFE                     l2625:
  2506  000FFE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2507  001002  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2508  001006  CFDE FFF6          	movff	postinc2,tblptrl
  2509  00100A  CFDD FFF7          	movff	postdec2,tblptrh
  2510  00100E                     	if	0	;tblptru may be non-zero
  2511  00100E                     	endif
  2512  00100E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2513  00100E  0E00               	movlw	low (__mediumconst shr (0+16))
  2514  001010  6EF8               	movwf	tblptru,c
  2515  001012                     	endif
  2516  001012  0008               	tblrd		*
  2517  001014  50F5               	movf	tablat,w,c
  2518  001016  6E46               	movwf	??_vfpfcnvrt^0,c
  2519  001018  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  2520                           
  2521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2522                           ; Switch size 1, requested type "simple"
  2523                           ; Number of cases is 1, Range of values is 0 to 0
  2524                           ; switch strategies available:
  2525                           ; Name         Instructions Cycles
  2526                           ; simple_byte            4     3 (average)
  2527                           ;	Chosen strategy is simple_byte
  2528  00101A  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2529  00101C  0A00               	xorlw	0	; case 0
  2530  00101E  B4D8               	btfsc	status,2,c
  2531  001020  EF14  F008         	goto	l2981
  2532  001024  EFF9  F007         	goto	l2621
  2533  001028                     l2981:
  2534                           
  2535                           ; Switch size 1, requested type "simple"
  2536                           ; Number of cases is 5, Range of values is 32 to 48
  2537                           ; switch strategies available:
  2538                           ; Name         Instructions Cycles
  2539                           ; simple_byte           16     9 (average)
  2540                           ;	Chosen strategy is simple_byte
  2541  001028  5046               	movf	??_vfpfcnvrt^0,w,c
  2542  00102A  0A20               	xorlw	32	; case 32
  2543  00102C  B4D8               	btfsc	status,2,c
  2544  00102E  EFF1  F007         	goto	l2613
  2545  001032  0A03               	xorlw	3	; case 35
  2546  001034  B4D8               	btfsc	status,2,c
  2547  001036  EFF5  F007         	goto	l2617
  2548  00103A  0A08               	xorlw	8	; case 43
  2549  00103C  B4D8               	btfsc	status,2,c
  2550  00103E  EFED  F007         	goto	l2609
  2551  001042  0A06               	xorlw	6	; case 45
  2552  001044  B4D8               	btfsc	status,2,c
  2553  001046  EFDE  F007         	goto	l2601
  2554  00104A  0A1D               	xorlw	29	; case 48
  2555  00104C  B4D8               	btfsc	status,2,c
  2556  00104E  EFE9  F007         	goto	l2605
  2557  001052  EFF9  F007         	goto	l2621
  2558  001056                     l2627:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2561  001056  5052               	movf	vfpfcnvrt@done^0,w,c
  2562  001058  1053               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2563  00105A  B4D8               	btfsc	status,2,c
  2564  00105C  EF32  F008         	goto	u1521
  2565  001060  EF34  F008         	goto	u1520
  2566  001064                     u1521:
  2567  001064  EFFF  F007         	goto	l2625
  2568  001068                     u1520:
  2569  001068                     
  2570                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2571  001068  0100               	movlb	0	; () banked
  2572  00106A  A171               	btfss	_flags& (0+255),0,b
  2573  00106C  EF3A  F008         	goto	u1531
  2574  001070  EF3C  F008         	goto	u1530
  2575  001074                     u1531:
  2576  001074  EF3D  F008         	goto	l2631
  2577  001078                     u1530:
  2578  001078                     
  2579                           ; BSR set to: 0
  2580                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2581  001078  9371               	bcf	_flags& (0+255),1,b
  2582  00107A                     l2631:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2586  00107A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2587  00107E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2588  001082  CFDE FFF6          	movff	postinc2,tblptrl
  2589  001086  CFDD FFF7          	movff	postdec2,tblptrh
  2590  00108A                     	if	0	;tblptru may be non-zero
  2591  00108A                     	endif
  2592  00108A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2593  00108A  0E00               	movlw	low (__mediumconst shr (0+16))
  2594  00108C  6EF8               	movwf	tblptru,c
  2595  00108E                     	endif
  2596  00108E  0008               	tblrd		*
  2597  001090  50F5               	movf	tablat,w,c
  2598  001092  0A2A               	xorlw	42
  2599  001094  A4D8               	btfss	status,2,c
  2600  001096  EF4F  F008         	goto	u1541
  2601  00109A  EF51  F008         	goto	u1540
  2602  00109E                     u1541:
  2603  00109E  EF7A  F008         	goto	l2639
  2604  0010A2                     u1540:
  2605  0010A2                     
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2608  0010A2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2609  0010A6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2610  0010AA  2ADE               	incf	postinc2,f,c
  2611  0010AC  0E00               	movlw	0
  2612  0010AE  22DD               	addwfc	postdec2,f,c
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2615  0010B0  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2616  0010B4  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2617  0010B8  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2618  0010BC  0E02               	movlw	2
  2619  0010BE  26DE               	addwf	postinc2,f,c
  2620  0010C0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2621  0010C4  0E00               	movlw	0
  2622  0010C6  22DD               	addwfc	postdec2,f,c
  2623  0010C8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2624  0010CC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2625  0010D0  CFDE F06D          	movff	postinc2,_width
  2626  0010D4  CFDD F06E          	movff	postdec2,_width+1
  2627  0010D8                     
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2630  0010D8  BF6E               	btfsc	(_width+1)& (0+255),7,b
  2631  0010DA  EF73  F008         	goto	u1550
  2632  0010DE  EF71  F008         	goto	u1551
  2633  0010E2                     u1551:
  2634  0010E2  EFBF  F008         	goto	l2649
  2635  0010E6                     u1550:
  2636  0010E6                     
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2639  0010E6  8171               	bsf	_flags& (0+255),0,b
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2642  0010E8  6D6D               	negf	_width& (0+255),b
  2643  0010EA  1F6E               	comf	(_width+1)& (0+255),f,b
  2644  0010EC  B0D8               	btfsc	status,0,c
  2645  0010EE  2B6E               	incf	(_width+1)& (0+255),f,b
  2646  0010F0  EFBF  F008         	goto	l2649
  2647  0010F4                     l2639:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2651  0010F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2652  0010F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2653  0010FC  CFDE F008          	movff	postinc2,atoi@s
  2654  001100  CFDD F009          	movff	postdec2,atoi@s+1
  2655  001104  EC29  F00B         	call	_atoi	;wreg free
  2656  001108  C008  F06D         	movff	?_atoi,_width
  2657  00110C  C009  F06E         	movff	?_atoi+1,_width+1
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2660  001110  EF91  F008         	goto	l2643
  2661  001114                     l2641:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2664  001114  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2665  001118  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2666  00111C  2ADE               	incf	postinc2,f,c
  2667  00111E  0E00               	movlw	0
  2668  001120  22DD               	addwfc	postdec2,f,c
  2669  001122                     l2643:
  2670  001122  0ED0               	movlw	208
  2671  001124  6E46               	movwf	??_vfpfcnvrt^0,c
  2672  001126  0EFF               	movlw	255
  2673  001128  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2674  00112A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2675  00112E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2676  001132  CFDE FFF6          	movff	postinc2,tblptrl
  2677  001136  CFDD FFF7          	movff	postdec2,tblptrh
  2678  00113A                     	if	0	;tblptru may be non-zero
  2679  00113A                     	endif
  2680  00113A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2681  00113A  0E00               	movlw	low (__mediumconst shr (0+16))
  2682  00113C  6EF8               	movwf	tblptru,c
  2683  00113E                     	endif
  2684  00113E  0008               	tblrd		*
  2685  001140  50F5               	movf	tablat,w,c
  2686  001142  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2687  001144  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2688  001146  5046               	movf	??_vfpfcnvrt^0,w,c
  2689  001148  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2690  00114A  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2691  00114C  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2692  00114E  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2693  001150  E10A               	bnz	u1560
  2694  001152  0E0A               	movlw	10
  2695  001154  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2696  001156  A0D8               	btfss	status,0,c
  2697  001158  EFB0  F008         	goto	u1561
  2698  00115C  EFB3  F008         	goto	u1560
  2699  001160                     u1561:
  2700  001160  0E01               	movlw	1
  2701  001162  EFB4  F008         	goto	u1570
  2702  001166                     u1560:
  2703  001166  0E00               	movlw	0
  2704  001168                     u1570:
  2705  001168  6E54               	movwf	_vfpfcnvrt$1397^0,c
  2706  00116A  6A55               	clrf	(_vfpfcnvrt$1397+1)^0,c
  2707  00116C  5054               	movf	_vfpfcnvrt$1397^0,w,c
  2708  00116E  1055               	iorwf	(_vfpfcnvrt$1397+1)^0,w,c
  2709  001170  A4D8               	btfss	status,2,c
  2710  001172  EFBD  F008         	goto	u1581
  2711  001176  EFBF  F008         	goto	u1580
  2712  00117A                     u1581:
  2713  00117A  EF8A  F008         	goto	l2641
  2714  00117E                     u1580:
  2715  00117E                     l2649:
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2718  00117E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2719  001182  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2720  001186  CFDE FFF6          	movff	postinc2,tblptrl
  2721  00118A  CFDD FFF7          	movff	postdec2,tblptrh
  2722  00118E                     	if	0	;tblptru may be non-zero
  2723  00118E                     	endif
  2724  00118E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2725  00118E  0E00               	movlw	low (__mediumconst shr (0+16))
  2726  001190  6EF8               	movwf	tblptru,c
  2727  001192                     	endif
  2728  001192  0008               	tblrd		*
  2729  001194  50F5               	movf	tablat,w,c
  2730  001196  0A63               	xorlw	99
  2731  001198  A4D8               	btfss	status,2,c
  2732  00119A  EFD1  F008         	goto	u1591
  2733  00119E  EFD3  F008         	goto	u1590
  2734  0011A2                     u1591:
  2735  0011A2  EFFA  F008         	goto	l2657
  2736  0011A6                     u1590:
  2737  0011A6                     
  2738                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2739  0011A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2740  0011AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2741  0011AE  2ADE               	incf	postinc2,f,c
  2742  0011B0  0E00               	movlw	0
  2743  0011B2  22DD               	addwfc	postdec2,f,c
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2746  0011B4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2747  0011B8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2748  0011BC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2749  0011C0  0E02               	movlw	2
  2750  0011C2  26DE               	addwf	postinc2,f,c
  2751  0011C4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2752  0011C8  0E00               	movlw	0
  2753  0011CA  22DD               	addwfc	postdec2,f,c
  2754  0011CC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2755  0011D0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2756  0011D4  50DF               	movf	indf2,w,c
  2757  0011D6  6E56               	movwf	vfpfcnvrt@c^0,c
  2758  0011D8                     
  2759                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2760  0011D8  C040  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2761  0011DC  C041  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2762  0011E0  C056  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2763  0011E4  EC1B  F00E         	call	_ctoa	;wreg free
  2764  0011E8  C00A  F040         	movff	?_ctoa,?_vfpfcnvrt
  2765  0011EC  C00B  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2766  0011F0  EFB7  F009         	goto	l1274
  2767  0011F4                     l2657:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2770  0011F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2771  0011F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2772  0011FC  CFDE FFF6          	movff	postinc2,tblptrl
  2773  001200  CFDD FFF7          	movff	postdec2,tblptrh
  2774  001204                     	if	0	;tblptru may be non-zero
  2775  001204                     	endif
  2776  001204                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2777  001204  0E00               	movlw	low (__mediumconst shr (0+16))
  2778  001206  6EF8               	movwf	tblptru,c
  2779  001208                     	endif
  2780  001208  0008               	tblrd		*
  2781  00120A  50F5               	movf	tablat,w,c
  2782  00120C  0A64               	xorlw	100
  2783  00120E  B4D8               	btfsc	status,2,c
  2784  001210  EF0C  F009         	goto	u1601
  2785  001214  EF0E  F009         	goto	u1600
  2786  001218                     u1601:
  2787  001218  EF22  F009         	goto	l2661
  2788  00121C                     u1600:
  2789  00121C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2790  001220  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2791  001224  CFDE FFF6          	movff	postinc2,tblptrl
  2792  001228  CFDD FFF7          	movff	postdec2,tblptrh
  2793  00122C                     	if	0	;tblptru may be non-zero
  2794  00122C                     	endif
  2795  00122C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2796  00122C  0E00               	movlw	low (__mediumconst shr (0+16))
  2797  00122E  6EF8               	movwf	tblptru,c
  2798  001230                     	endif
  2799  001230  0008               	tblrd		*
  2800  001232  50F5               	movf	tablat,w,c
  2801  001234  0A69               	xorlw	105
  2802  001236  A4D8               	btfss	status,2,c
  2803  001238  EF20  F009         	goto	u1611
  2804  00123C  EF22  F009         	goto	u1610
  2805  001240                     u1611:
  2806  001240  EF62  F009         	goto	l2667
  2807  001244                     u1610:
  2808  001244                     l2661:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2811  001244  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2812  001248  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2813  00124C  2ADE               	incf	postinc2,f,c
  2814  00124E  0E00               	movlw	0
  2815  001250  22DD               	addwfc	postdec2,f,c
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2818  001252  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2819  001256  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2820  00125A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2821  00125E  0E02               	movlw	2
  2822  001260  26DE               	addwf	postinc2,f,c
  2823  001262  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2824  001266  0E00               	movlw	0
  2825  001268  22DD               	addwfc	postdec2,f,c
  2826  00126A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2827  00126E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2828  001272  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  2829  001276  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  2830  00127A  0E00               	movlw	0
  2831  00127C  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2832  00127E  0EFF               	movlw	-1
  2833  001280  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  2834  001282  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  2835  001284  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  2836  001286  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  2837  001288  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  2838  00128A  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  2839  00128C                     
  2840                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2841  00128C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2842  001290  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2843  001294  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2844  001298  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2845  00129C  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2846  0012A0  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2847  0012A4  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2848  0012A8  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2849  0012AC  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2850  0012B0  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2851  0012B4  ECB8  F009         	call	_dtoa	;wreg free
  2852  0012B8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2853  0012BC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2854  0012C0  EFB7  F009         	goto	l1274
  2855  0012C4                     l2667:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2858  0012C4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2859  0012C8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2860  0012CC  CFDE FFF6          	movff	postinc2,tblptrl
  2861  0012D0  CFDD FFF7          	movff	postdec2,tblptrh
  2862  0012D4                     	if	0	;tblptru may be non-zero
  2863  0012D4                     	endif
  2864  0012D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2865  0012D4  0E00               	movlw	low (__mediumconst shr (0+16))
  2866  0012D6  6EF8               	movwf	tblptru,c
  2867  0012D8                     	endif
  2868  0012D8  0008               	tblrd		*
  2869  0012DA  50F5               	movf	tablat,w,c
  2870  0012DC  0A25               	xorlw	37
  2871  0012DE  A4D8               	btfss	status,2,c
  2872  0012E0  EF74  F009         	goto	u1621
  2873  0012E4  EF76  F009         	goto	u1620
  2874  0012E8                     u1621:
  2875  0012E8  EF8D  F009         	goto	l2677
  2876  0012EC                     u1620:
  2877  0012EC                     
  2878                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2879  0012EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2880  0012F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2881  0012F4  2ADE               	incf	postinc2,f,c
  2882  0012F6  0E00               	movlw	0
  2883  0012F8  22DD               	addwfc	postdec2,f,c
  2884  0012FA                     
  2885                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2886  0012FA  0E00               	movlw	0
  2887  0012FC  6E02               	movwf	(fputc@c+1)^0,c
  2888  0012FE  0E25               	movlw	37
  2889  001300  6E01               	movwf	fputc@c^0,c
  2890  001302  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2891  001306  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2892  00130A  EC87  F00E         	call	_fputc	;wreg free
  2893  00130E                     l2673:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2896  00130E  0E00               	movlw	0
  2897  001310  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2898  001312  0E01               	movlw	1
  2899  001314  6E40               	movwf	?_vfpfcnvrt^0,c
  2900  001316  EFB7  F009         	goto	l1274
  2901  00131A                     l2677:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2904  00131A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2905  00131E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2906  001322  2ADE               	incf	postinc2,f,c
  2907  001324  0E00               	movlw	0
  2908  001326  22DD               	addwfc	postdec2,f,c
  2909  001328                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2911  001328  0E00               	movlw	0
  2912  00132A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2913  00132C  0E00               	movlw	0
  2914  00132E  6E40               	movwf	?_vfpfcnvrt^0,c
  2915  001330  EFB7  F009         	goto	l1274
  2916  001334                     l2683:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2919  001334  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2920  001338  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2921  00133C  CFDE FFF6          	movff	postinc2,tblptrl
  2922  001340  CFDD FFF7          	movff	postdec2,tblptrh
  2923  001344                     	if	0	;tblptru may be non-zero
  2924  001344                     	endif
  2925  001344                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2926  001344  0E00               	movlw	low (__mediumconst shr (0+16))
  2927  001346  6EF8               	movwf	tblptru,c
  2928  001348                     	endif
  2929  001348  0008               	tblrd		*
  2930  00134A  50F5               	movf	tablat,w,c
  2931  00134C  6E01               	movwf	fputc@c^0,c
  2932  00134E  6A02               	clrf	(fputc@c+1)^0,c
  2933  001350  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2934  001354  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2935  001358  EC87  F00E         	call	_fputc	;wreg free
  2936  00135C                     
  2937                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2938  00135C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2939  001360  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2940  001364  2ADE               	incf	postinc2,f,c
  2941  001366  0E00               	movlw	0
  2942  001368  22DD               	addwfc	postdec2,f,c
  2943  00136A  EF87  F009         	goto	l2673
  2944  00136E                     l1274:
  2945  00136E  0012               	return		;funcret
  2946  001370                     __end_of_vfpfcnvrt:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _dtoa *****************
  2950 ;; Defined at:
  2951 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2954 ;;		 -> sprintf@f(6), 
  2955 ;;  d               8   29[COMRAM] long long 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  n               8   53[COMRAM] long long 
  2958 ;;  i               2   61[COMRAM] int 
  2959 ;;  s               2   51[COMRAM] int 
  2960 ;;  w               2   49[COMRAM] int 
  2961 ;;  p               2   47[COMRAM] int 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  2   27[COMRAM] int 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2971 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;Total ram usage:       36 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    4
  2978 ;; This function calls:
  2979 ;;		___aodiv
  2980 ;;		___aomod
  2981 ;;		_abs
  2982 ;;		_pad
  2983 ;; This function is called by:
  2984 ;;		_vfpfcnvrt
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text17
  2989  001370                     __ptext17:
  2990                           	callstack 0
  2991  001370                     _dtoa:
  2992                           	callstack 22
  2993  001370                     
  2994                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2995  001370  C01E  F036         	movff	dtoa@d,dtoa@n
  2996  001374  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2997  001378  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2998  00137C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2999  001380  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3000  001384  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3001  001388  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3002  00138C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3003  001390                     
  3004                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3005  001390  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3006  001392  EFCD  F009         	goto	u1291
  3007  001396  EFD0  F009         	goto	u1290
  3008  00139A                     u1291:
  3009  00139A  0E01               	movlw	1
  3010  00139C  EFD1  F009         	goto	u1300
  3011  0013A0                     u1290:
  3012  0013A0  0E00               	movlw	0
  3013  0013A2                     u1300:
  3014  0013A2  6E34               	movwf	dtoa@s^0,c
  3015  0013A4  6A35               	clrf	(dtoa@s+1)^0,c
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3018  0013A6  5034               	movf	dtoa@s^0,w,c
  3019  0013A8  1035               	iorwf	(dtoa@s+1)^0,w,c
  3020  0013AA  B4D8               	btfsc	status,2,c
  3021  0013AC  EFDA  F009         	goto	u1311
  3022  0013B0  EFDC  F009         	goto	u1310
  3023  0013B4                     u1311:
  3024  0013B4  EFEC  F009         	goto	l2475
  3025  0013B8                     u1310:
  3026  0013B8                     
  3027                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3028  0013B8  1E3D               	comf	(dtoa@n+7)^0,f,c
  3029  0013BA  1E3C               	comf	(dtoa@n+6)^0,f,c
  3030  0013BC  1E3B               	comf	(dtoa@n+5)^0,f,c
  3031  0013BE  1E3A               	comf	(dtoa@n+4)^0,f,c
  3032  0013C0  1E39               	comf	(dtoa@n+3)^0,f,c
  3033  0013C2  1E38               	comf	(dtoa@n+2)^0,f,c
  3034  0013C4  1E37               	comf	(dtoa@n+1)^0,f,c
  3035  0013C6  6C36               	negf	dtoa@n^0,c
  3036  0013C8  0E00               	movlw	0
  3037  0013CA  2237               	addwfc	(dtoa@n+1)^0,f,c
  3038  0013CC  2238               	addwfc	(dtoa@n+2)^0,f,c
  3039  0013CE  2239               	addwfc	(dtoa@n+3)^0,f,c
  3040  0013D0  223A               	addwfc	(dtoa@n+4)^0,f,c
  3041  0013D2  223B               	addwfc	(dtoa@n+5)^0,f,c
  3042  0013D4  223C               	addwfc	(dtoa@n+6)^0,f,c
  3043  0013D6  223D               	addwfc	(dtoa@n+7)^0,f,c
  3044  0013D8                     l2475:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3047  0013D8  0100               	movlb	0	; () banked
  3048  0013DA  BF70               	btfsc	(_prec+1)& (0+255),7,b
  3049  0013DC  EFF2  F009         	goto	u1321
  3050  0013E0  EFF4  F009         	goto	u1320
  3051  0013E4                     u1321:
  3052  0013E4  EFF5  F009         	goto	l2479
  3053  0013E8                     u1320:
  3054  0013E8                     
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3057  0013E8  9371               	bcf	_flags& (0+255),1,b
  3058  0013EA                     l2479:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3062  0013EA  BF70               	btfsc	(_prec+1)& (0+255),7,b
  3063  0013EC  EF02  F00A         	goto	u1330
  3064  0013F0  5170               	movf	(_prec+1)& (0+255),w,b
  3065  0013F2  E106               	bnz	u1331
  3066  0013F4  056F               	decf	_prec& (0+255),w,b
  3067  0013F6  B0D8               	btfsc	status,0,c
  3068  0013F8  EF00  F00A         	goto	u1331
  3069  0013FC  EF02  F00A         	goto	u1330
  3070  001400                     u1331:
  3071  001400  EF08  F00A         	goto	l1227
  3072  001404                     u1330:
  3073  001404                     
  3074                           ; BSR set to: 0
  3075  001404  0E00               	movlw	0
  3076  001406  6E31               	movwf	(dtoa@p+1)^0,c
  3077  001408  0E01               	movlw	1
  3078  00140A  6E30               	movwf	dtoa@p^0,c
  3079  00140C  EF0C  F00A         	goto	l1229
  3080  001410                     l1227:
  3081                           
  3082                           ; BSR set to: 0
  3083  001410  C06F  F030         	movff	_prec,dtoa@p
  3084  001414  C070  F031         	movff	_prec+1,dtoa@p+1
  3085  001418                     l1229:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3089  001418  C06D  F032         	movff	_width,dtoa@w
  3090  00141C  C06E  F033         	movff	_width+1,dtoa@w+1
  3091  001420                     
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3094  001420  5034               	movf	dtoa@s^0,w,c
  3095  001422  1035               	iorwf	(dtoa@s+1)^0,w,c
  3096  001424  A4D8               	btfss	status,2,c
  3097  001426  EF17  F00A         	goto	u1341
  3098  00142A  EF19  F00A         	goto	u1340
  3099  00142E                     u1341:
  3100  00142E  EF20  F00A         	goto	l2487
  3101  001432                     u1340:
  3102  001432                     
  3103                           ; BSR set to: 0
  3104  001432  A571               	btfss	_flags& (0+255),2,b
  3105  001434  EF1E  F00A         	goto	u1351
  3106  001438  EF20  F00A         	goto	u1350
  3107  00143C                     u1351:
  3108  00143C  EF23  F00A         	goto	l2489
  3109  001440                     u1350:
  3110  001440                     l2487:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  3114  001440  0632               	decf	dtoa@w^0,f,c
  3115  001442  A0D8               	btfss	status,0,c
  3116  001444  0633               	decf	(dtoa@w+1)^0,f,c
  3117  001446                     l2489:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3121  001446  0E00               	movlw	0
  3122  001448  6E3F               	movwf	(dtoa@i+1)^0,c
  3123  00144A  0E1F               	movlw	31
  3124  00144C  6E3E               	movwf	dtoa@i^0,c
  3125  00144E                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3128  00144E  0E00               	movlw	0
  3129  001450  6F92               	movwf	(_dbuf+31)& (0+255),b
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3132  001452  EFA7  F00A         	goto	l2503
  3133  001456                     l2493:
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  3136  001456  063E               	decf	dtoa@i^0,f,c
  3137  001458  A0D8               	btfss	status,0,c
  3138  00145A  063F               	decf	(dtoa@i+1)^0,f,c
  3139  00145C                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3141  00145C  0E73               	movlw	low _dbuf
  3142  00145E  243E               	addwf	dtoa@i^0,w,c
  3143  001460  6ED9               	movwf	fsr2l,c
  3144  001462  0E00               	movlw	high _dbuf
  3145  001464  203F               	addwfc	(dtoa@i+1)^0,w,c
  3146  001466  6EDA               	movwf	fsr2h,c
  3147  001468  C036  F001         	movff	dtoa@n,___aomod@dividend
  3148  00146C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3149  001470  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3150  001474  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3151  001478  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3152  00147C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3153  001480  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3154  001484  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3155  001488  0E0A               	movlw	10
  3156  00148A  6E09               	movwf	___aomod@divisor^0,c
  3157  00148C  0E00               	movlw	0
  3158  00148E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3159  001490  0E00               	movlw	0
  3160  001492  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3161  001494  0E00               	movlw	0
  3162  001496  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3163  001498  0E00               	movlw	0
  3164  00149A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3165  00149C  0E00               	movlw	0
  3166  00149E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3167  0014A0  0E00               	movlw	0
  3168  0014A2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3169  0014A4  0E00               	movlw	0
  3170  0014A6  6E10               	movwf	(___aomod@divisor+7)^0,c
  3171  0014A8  ECBF  F00C         	call	___aomod	;wreg free
  3172  0014AC  C001  F026         	movff	?___aomod,??_dtoa
  3173  0014B0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3174  0014B4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3175  0014B8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3176  0014BC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3177  0014C0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3178  0014C4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3179  0014C8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3180  0014CC  C026  F013         	movff	??_dtoa,abs@a
  3181  0014D0  C028  F014         	movff	??_dtoa+2,abs@a+1
  3182  0014D4  EC0F  F012         	call	_abs	;wreg free
  3183  0014D8  5013               	movf	?_abs^0,w,c
  3184  0014DA  0F30               	addlw	48
  3185  0014DC  6EDF               	movwf	indf2,c
  3186  0014DE                     
  3187                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  3188  0014DE  0630               	decf	dtoa@p^0,f,c
  3189  0014E0  A0D8               	btfss	status,0,c
  3190  0014E2  0631               	decf	(dtoa@p+1)^0,f,c
  3191  0014E4                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  3193  0014E4  0632               	decf	dtoa@w^0,f,c
  3194  0014E6  A0D8               	btfss	status,0,c
  3195  0014E8  0633               	decf	(dtoa@w+1)^0,f,c
  3196  0014EA                     
  3197                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3198  0014EA  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3199  0014EE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3200  0014F2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3201  0014F6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3202  0014FA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3203  0014FE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3204  001502  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3205  001506  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3206  00150A  0E0A               	movlw	10
  3207  00150C  6E09               	movwf	___aodiv@divisor^0,c
  3208  00150E  0E00               	movlw	0
  3209  001510  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3210  001512  0E00               	movlw	0
  3211  001514  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3212  001516  0E00               	movlw	0
  3213  001518  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3214  00151A  0E00               	movlw	0
  3215  00151C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3216  00151E  0E00               	movlw	0
  3217  001520  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3218  001522  0E00               	movlw	0
  3219  001524  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3220  001526  0E00               	movlw	0
  3221  001528  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3222  00152A  ECFB  F00B         	call	___aodiv	;wreg free
  3223  00152E  C001  F036         	movff	?___aodiv,dtoa@n
  3224  001532  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3225  001536  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3226  00153A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3227  00153E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3228  001542  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3229  001546  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3230  00154A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3231  00154E                     l2503:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3234  00154E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3235  001550  EFB2  F00A         	goto	u1361
  3236  001554  503F               	movf	(dtoa@i+1)^0,w,c
  3237  001556  E108               	bnz	u1360
  3238  001558  043E               	decf	dtoa@i^0,w,c
  3239  00155A  A0D8               	btfss	status,0,c
  3240  00155C  EFB2  F00A         	goto	u1361
  3241  001560  EFB4  F00A         	goto	u1360
  3242  001564                     u1361:
  3243  001564  EFE5  F00A         	goto	l2513
  3244  001568                     u1360:
  3245  001568  5036               	movf	dtoa@n^0,w,c
  3246  00156A  1037               	iorwf	(dtoa@n+1)^0,w,c
  3247  00156C  1038               	iorwf	(dtoa@n+2)^0,w,c
  3248  00156E  1039               	iorwf	(dtoa@n+3)^0,w,c
  3249  001570  103A               	iorwf	(dtoa@n+4)^0,w,c
  3250  001572  103B               	iorwf	(dtoa@n+5)^0,w,c
  3251  001574  103C               	iorwf	(dtoa@n+6)^0,w,c
  3252  001576  103D               	iorwf	(dtoa@n+7)^0,w,c
  3253  001578  A4D8               	btfss	status,2,c
  3254  00157A  EFC1  F00A         	goto	u1371
  3255  00157E  EFC3  F00A         	goto	u1370
  3256  001582                     u1371:
  3257  001582  EF2B  F00A         	goto	l2493
  3258  001586                     u1370:
  3259  001586  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3260  001588  EFD0  F00A         	goto	u1380
  3261  00158C  5031               	movf	(dtoa@p+1)^0,w,c
  3262  00158E  E106               	bnz	u1381
  3263  001590  0430               	decf	dtoa@p^0,w,c
  3264  001592  B0D8               	btfsc	status,0,c
  3265  001594  EFCE  F00A         	goto	u1381
  3266  001598  EFD0  F00A         	goto	u1380
  3267  00159C                     u1381:
  3268  00159C  EF2B  F00A         	goto	l2493
  3269  0015A0                     u1380:
  3270  0015A0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3271  0015A2  EFDB  F00A         	goto	u1391
  3272  0015A6  5033               	movf	(dtoa@w+1)^0,w,c
  3273  0015A8  E108               	bnz	u1390
  3274  0015AA  0432               	decf	dtoa@w^0,w,c
  3275  0015AC  A0D8               	btfss	status,0,c
  3276  0015AE  EFDB  F00A         	goto	u1391
  3277  0015B2  EFDD  F00A         	goto	u1390
  3278  0015B6                     u1391:
  3279  0015B6  EFE5  F00A         	goto	l2513
  3280  0015BA                     u1390:
  3281  0015BA  0100               	movlb	0	; () banked
  3282  0015BC  B371               	btfsc	_flags& (0+255),1,b
  3283  0015BE  EFE3  F00A         	goto	u1401
  3284  0015C2  EFE5  F00A         	goto	u1400
  3285  0015C6                     u1401:
  3286  0015C6  EF2B  F00A         	goto	l2493
  3287  0015CA                     u1400:
  3288  0015CA                     l2513:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3291  0015CA  5034               	movf	dtoa@s^0,w,c
  3292  0015CC  1035               	iorwf	(dtoa@s+1)^0,w,c
  3293  0015CE  A4D8               	btfss	status,2,c
  3294  0015D0  EFEC  F00A         	goto	u1411
  3295  0015D4  EFEE  F00A         	goto	u1410
  3296  0015D8                     u1411:
  3297  0015D8  EFF6  F00A         	goto	l2517
  3298  0015DC                     u1410:
  3299  0015DC  0100               	movlb	0	; () banked
  3300  0015DE  A571               	btfss	_flags& (0+255),2,b
  3301  0015E0  EFF4  F00A         	goto	u1421
  3302  0015E4  EFF6  F00A         	goto	u1420
  3303  0015E8                     u1421:
  3304  0015E8  EF14  F00B         	goto	l2527
  3305  0015EC                     u1420:
  3306  0015EC                     l2517:
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  3309  0015EC  063E               	decf	dtoa@i^0,f,c
  3310  0015EE  A0D8               	btfss	status,0,c
  3311  0015F0  063F               	decf	(dtoa@i+1)^0,f,c
  3312  0015F2                     
  3313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3314  0015F2  5034               	movf	dtoa@s^0,w,c
  3315  0015F4  1035               	iorwf	(dtoa@s+1)^0,w,c
  3316  0015F6  A4D8               	btfss	status,2,c
  3317  0015F8  EF00  F00B         	goto	u1431
  3318  0015FC  EF02  F00B         	goto	u1430
  3319  001600                     u1431:
  3320  001600  EF08  F00B         	goto	l2523
  3321  001604                     u1430:
  3322  001604  0E00               	movlw	0
  3323  001606  6E2F               	movwf	(_dtoa$1382+1)^0,c
  3324  001608  0E2B               	movlw	43
  3325  00160A  6E2E               	movwf	_dtoa$1382^0,c
  3326  00160C  EF0C  F00B         	goto	l2525
  3327  001610                     l2523:
  3328  001610  0E00               	movlw	0
  3329  001612  6E2F               	movwf	(_dtoa$1382+1)^0,c
  3330  001614  0E2D               	movlw	45
  3331  001616  6E2E               	movwf	_dtoa$1382^0,c
  3332  001618                     l2525:
  3333  001618  0E73               	movlw	low _dbuf
  3334  00161A  243E               	addwf	dtoa@i^0,w,c
  3335  00161C  6ED9               	movwf	fsr2l,c
  3336  00161E  0E00               	movlw	high _dbuf
  3337  001620  203F               	addwfc	(dtoa@i+1)^0,w,c
  3338  001622  6EDA               	movwf	fsr2h,c
  3339  001624  C02E  FFDF         	movff	_dtoa$1382,indf2
  3340  001628                     l2527:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3343  001628  C01C  F011         	movff	dtoa@fp,pad@fp
  3344  00162C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3345  001630  0E73               	movlw	low _dbuf
  3346  001632  243E               	addwf	dtoa@i^0,w,c
  3347  001634  6E13               	movwf	pad@buf^0,c
  3348  001636  0E00               	movlw	high _dbuf
  3349  001638  203F               	addwfc	(dtoa@i+1)^0,w,c
  3350  00163A  6E14               	movwf	(pad@buf+1)^0,c
  3351  00163C  C032  F015         	movff	dtoa@w,pad@p
  3352  001640  C033  F016         	movff	dtoa@w+1,pad@p+1
  3353  001644  ECEC  F00E         	call	_pad	;wreg free
  3354  001648  C011  F01C         	movff	?_pad,?_dtoa
  3355  00164C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3356  001650  0012               	return		;funcret
  3357  001652                     __end_of_dtoa:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function _pad *****************
  3361 ;; Defined at:
  3362 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3365 ;;		 -> sprintf@f(6), 
  3366 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3367 ;;		 -> dbuf(32), 
  3368 ;;  p               2   20[COMRAM] int 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  w               2   25[COMRAM] int 
  3371 ;;  i               2   23[COMRAM] int 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  2   16[COMRAM] int 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3381 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;Total ram usage:       11 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    3
  3388 ;; This function calls:
  3389 ;;		_fputc
  3390 ;;		_fputs
  3391 ;;		_strlen
  3392 ;; This function is called by:
  3393 ;;		_dtoa
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text18
  3398  001DD8                     __ptext18:
  3399                           	callstack 0
  3400  001DD8                     _pad:
  3401                           	callstack 22
  3402  001DD8                     
  3403                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3404  001DD8  0100               	movlb	0	; () banked
  3405  001DDA  A171               	btfss	_flags& (0+255),0,b
  3406  001DDC  EFF2  F00E         	goto	u1141
  3407  001DE0  EFF4  F00E         	goto	u1140
  3408  001DE4                     u1141:
  3409  001DE4  EFFE  F00E         	goto	l2395
  3410  001DE8                     u1140:
  3411  001DE8                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3414  001DE8  C013  F00A         	movff	pad@buf,fputs@s
  3415  001DEC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3416  001DF0  C011  F00C         	movff	pad@fp,fputs@fp
  3417  001DF4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3418  001DF8  ECED  F011         	call	_fputs	;wreg free
  3419  001DFC                     l2395:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3422  001DFC  BE16               	btfsc	(pad@p+1)^0,7,c
  3423  001DFE  EF03  F00F         	goto	u1151
  3424  001E02  EF05  F00F         	goto	u1150
  3425  001E06                     u1151:
  3426  001E06  EF0B  F00F         	goto	l2399
  3427  001E0A                     u1150:
  3428  001E0A  C015  F01A         	movff	pad@p,pad@w
  3429  001E0E  C016  F01B         	movff	pad@p+1,pad@w+1
  3430  001E12  EF0F  F00F         	goto	l1200
  3431  001E16                     l2399:
  3432  001E16  0E00               	movlw	0
  3433  001E18  6E1B               	movwf	(pad@w+1)^0,c
  3434  001E1A  0E00               	movlw	0
  3435  001E1C  6E1A               	movwf	pad@w^0,c
  3436  001E1E                     l1200:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3439  001E1E  0E00               	movlw	0
  3440  001E20  6E19               	movwf	(pad@i+1)^0,c
  3441  001E22  0E00               	movlw	0
  3442  001E24  6E18               	movwf	pad@i^0,c
  3443                           
  3444                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3445  001E26  EF21  F00F         	goto	l2405
  3446  001E2A                     l2401:
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3449  001E2A  0E00               	movlw	0
  3450  001E2C  6E02               	movwf	(fputc@c+1)^0,c
  3451  001E2E  0E20               	movlw	32
  3452  001E30  6E01               	movwf	fputc@c^0,c
  3453  001E32  C011  F003         	movff	pad@fp,fputc@fp
  3454  001E36  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3455  001E3A  EC87  F00E         	call	_fputc	;wreg free
  3456  001E3E                     
  3457                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3458  001E3E  4A18               	infsnz	pad@i^0,f,c
  3459  001E40  2A19               	incf	(pad@i+1)^0,f,c
  3460  001E42                     l2405:
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3463  001E42  501A               	movf	pad@w^0,w,c
  3464  001E44  5C18               	subwf	pad@i^0,w,c
  3465  001E46  5019               	movf	(pad@i+1)^0,w,c
  3466  001E48  0A80               	xorlw	128
  3467  001E4A  6E17               	movwf	??_pad^0,c
  3468  001E4C  501B               	movf	(pad@w+1)^0,w,c
  3469  001E4E  0A80               	xorlw	128
  3470  001E50  5817               	subwfb	??_pad^0,w,c
  3471  001E52  A0D8               	btfss	status,0,c
  3472  001E54  EF2E  F00F         	goto	u1161
  3473  001E58  EF30  F00F         	goto	u1160
  3474  001E5C                     u1161:
  3475  001E5C  EF15  F00F         	goto	l2401
  3476  001E60                     u1160:
  3477  001E60                     
  3478                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3479  001E60  0100               	movlb	0	; () banked
  3480  001E62  B171               	btfsc	_flags& (0+255),0,b
  3481  001E64  EF36  F00F         	goto	u1171
  3482  001E68  EF38  F00F         	goto	u1170
  3483  001E6C                     u1171:
  3484  001E6C  EF42  F00F         	goto	l2409
  3485  001E70                     u1170:
  3486  001E70                     
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3489  001E70  C013  F00A         	movff	pad@buf,fputs@s
  3490  001E74  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3491  001E78  C011  F00C         	movff	pad@fp,fputs@fp
  3492  001E7C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3493  001E80  ECED  F011         	call	_fputs	;wreg free
  3494  001E84                     l2409:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3497  001E84  C013  F001         	movff	pad@buf,strlen@s
  3498  001E88  C014  F002         	movff	pad@buf+1,strlen@s+1
  3499  001E8C  EC68  F012         	call	_strlen	;wreg free
  3500  001E90  501A               	movf	pad@w^0,w,c
  3501  001E92  2401               	addwf	?_strlen^0,w,c
  3502  001E94  6E11               	movwf	?_pad^0,c
  3503  001E96  501B               	movf	(pad@w+1)^0,w,c
  3504  001E98  2002               	addwfc	(?_strlen+1)^0,w,c
  3505  001E9A  6E12               	movwf	(?_pad+1)^0,c
  3506  001E9C  0012               	return		;funcret
  3507  001E9E                     __end_of_pad:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _strlen *****************
  3511 ;; Defined at:
  3512 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3515 ;;		 -> dbuf(32), 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3518 ;;		 -> dbuf(32), 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  2    0[COMRAM] unsigned int 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3532 ;;Total ram usage:        4 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_pad
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text19
  3542  0024D0                     __ptext19:
  3543                           	callstack 0
  3544  0024D0                     _strlen:
  3545                           	callstack 24
  3546  0024D0  C001  F003         	movff	strlen@s,strlen@a
  3547  0024D4  C002  F004         	movff	strlen@s+1,strlen@a+1
  3548  0024D8  EF70  F012         	goto	l2283
  3549  0024DC                     l2281:
  3550  0024DC  4A01               	infsnz	strlen@s^0,f,c
  3551  0024DE  2A02               	incf	(strlen@s+1)^0,f,c
  3552  0024E0                     l2283:
  3553  0024E0  C001  FFD9         	movff	strlen@s,fsr2l
  3554  0024E4  C002  FFDA         	movff	strlen@s+1,fsr2h
  3555  0024E8  50DF               	movf	indf2,w,c
  3556  0024EA  A4D8               	btfss	status,2,c
  3557  0024EC  EF7A  F012         	goto	u1001
  3558  0024F0  EF7C  F012         	goto	u1000
  3559  0024F4                     u1001:
  3560  0024F4  EF6E  F012         	goto	l2281
  3561  0024F8                     u1000:
  3562  0024F8  5003               	movf	strlen@a^0,w,c
  3563  0024FA  5C01               	subwf	strlen@s^0,w,c
  3564  0024FC  6E01               	movwf	?_strlen^0,c
  3565  0024FE  5004               	movf	(strlen@a+1)^0,w,c
  3566  002500  5802               	subwfb	(strlen@s+1)^0,w,c
  3567  002502  6E02               	movwf	(?_strlen+1)^0,c
  3568  002504  0012               	return		;funcret
  3569  002506                     __end_of_strlen:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _fputs *****************
  3573 ;; Defined at:
  3574 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3577 ;;		 -> dbuf(32), 
  3578 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3579 ;;		 -> sprintf@f(6), 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  i               2   14[COMRAM] int 
  3582 ;;  c               1   13[COMRAM] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  2    9[COMRAM] int 
  3585 ;; Registers used:
  3586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3593 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;Total ram usage:        7 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    2
  3599 ;; This function calls:
  3600 ;;		_fputc
  3601 ;; This function is called by:
  3602 ;;		_pad
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text20
  3607  0023DA                     __ptext20:
  3608                           	callstack 0
  3609  0023DA                     _fputs:
  3610                           	callstack 22
  3611  0023DA  0E00               	movlw	0
  3612  0023DC  6E10               	movwf	(fputs@i+1)^0,c
  3613  0023DE  0E00               	movlw	0
  3614  0023E0  6E0F               	movwf	fputs@i^0,c
  3615  0023E2  EFFE  F011         	goto	l2277
  3616  0023E6                     l2273:
  3617  0023E6  C00E  F001         	movff	fputs@c,fputc@c
  3618  0023EA  6A02               	clrf	(fputc@c+1)^0,c
  3619  0023EC  C00C  F003         	movff	fputs@fp,fputc@fp
  3620  0023F0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3621  0023F4  EC87  F00E         	call	_fputc	;wreg free
  3622  0023F8  4A0F               	infsnz	fputs@i^0,f,c
  3623  0023FA  2A10               	incf	(fputs@i+1)^0,f,c
  3624  0023FC                     l2277:
  3625  0023FC  500F               	movf	fputs@i^0,w,c
  3626  0023FE  240A               	addwf	fputs@s^0,w,c
  3627  002400  6ED9               	movwf	fsr2l,c
  3628  002402  5010               	movf	(fputs@i+1)^0,w,c
  3629  002404  200B               	addwfc	(fputs@s+1)^0,w,c
  3630  002406  6EDA               	movwf	fsr2h,c
  3631  002408  50DF               	movf	indf2,w,c
  3632  00240A  6E0E               	movwf	fputs@c^0,c
  3633  00240C  500E               	movf	fputs@c^0,w,c
  3634  00240E  A4D8               	btfss	status,2,c
  3635  002410  EF0C  F012         	goto	u991
  3636  002414  EF0E  F012         	goto	u990
  3637  002418                     u991:
  3638  002418  EFF3  F011         	goto	l2273
  3639  00241C                     u990:
  3640  00241C  0012               	return		;funcret
  3641  00241E                     __end_of_fputs:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _abs *****************
  3645 ;; Defined at:
  3646 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  a               2   18[COMRAM] int 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  2   18[COMRAM] int 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;Total ram usage:        4 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_dtoa
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text21
  3674  00241E                     __ptext21:
  3675                           	callstack 0
  3676  00241E                     _abs:
  3677                           	callstack 25
  3678  00241E  BE14               	btfsc	(abs@a+1)^0,7,c
  3679  002420  EF1C  F012         	goto	u1180
  3680  002424  5014               	movf	(abs@a+1)^0,w,c
  3681  002426  E106               	bnz	u1181
  3682  002428  0413               	decf	abs@a^0,w,c
  3683  00242A  B0D8               	btfsc	status,0,c
  3684  00242C  EF1A  F012         	goto	u1181
  3685  002430  EF1C  F012         	goto	u1180
  3686  002434                     u1181:
  3687  002434  EF2A  F012         	goto	l1288
  3688  002438                     u1180:
  3689  002438  C013  F015         	movff	abs@a,??_abs
  3690  00243C  C014  F016         	movff	abs@a+1,??_abs+1
  3691  002440  1E15               	comf	??_abs^0,f,c
  3692  002442  1E16               	comf	(??_abs+1)^0,f,c
  3693  002444  4A15               	infsnz	??_abs^0,f,c
  3694  002446  2A16               	incf	(??_abs+1)^0,f,c
  3695  002448  C015  F013         	movff	??_abs,?_abs
  3696  00244C  C016  F014         	movff	??_abs+1,?_abs+1
  3697  002450  EF2E  F012         	goto	l1291
  3698  002454                     l1288:
  3699  002454  C013  F013         	movff	abs@a,?_abs
  3700  002458  C014  F014         	movff	abs@a+1,?_abs+1
  3701  00245C                     l1291:
  3702  00245C  0012               	return		;funcret
  3703  00245E                     __end_of_abs:
  3704                           	callstack 0
  3705                           
  3706 ;; *************** function ___aomod *****************
  3707 ;; Defined at:
  3708 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  dividend        8    0[COMRAM] long long 
  3711 ;;  divisor         8    8[COMRAM] long long 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  sign            1   17[COMRAM] unsigned char 
  3714 ;;  counter         1   16[COMRAM] unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  8    0[COMRAM] long long 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3724 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3727 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;Total ram usage:       18 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_dtoa
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text22
  3738  00197E                     __ptext22:
  3739                           	callstack 0
  3740  00197E                     ___aomod:
  3741                           	callstack 25
  3742  00197E  0E00               	movlw	0
  3743  001980  6E12               	movwf	___aomod@sign^0,c
  3744  001982  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3745  001984  EFC8  F00C         	goto	u1080
  3746  001988  EFC6  F00C         	goto	u1081
  3747  00198C                     u1081:
  3748  00198C  EFDA  F00C         	goto	l2363
  3749  001990                     u1080:
  3750  001990  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3751  001992  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3752  001994  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3753  001996  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3754  001998  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3755  00199A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3756  00199C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3757  00199E  6C01               	negf	___aomod@dividend^0,c
  3758  0019A0  0E00               	movlw	0
  3759  0019A2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3760  0019A4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3761  0019A6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3762  0019A8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3763  0019AA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3764  0019AC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3765  0019AE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3766  0019B0  0E01               	movlw	1
  3767  0019B2  6E12               	movwf	___aomod@sign^0,c
  3768  0019B4                     l2363:
  3769  0019B4  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3770  0019B6  EFE1  F00C         	goto	u1090
  3771  0019BA  EFDF  F00C         	goto	u1091
  3772  0019BE                     u1091:
  3773  0019BE  EFF1  F00C         	goto	l2367
  3774  0019C2                     u1090:
  3775  0019C2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3776  0019C4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3777  0019C6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3778  0019C8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3779  0019CA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3780  0019CC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3781  0019CE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3782  0019D0  6C09               	negf	___aomod@divisor^0,c
  3783  0019D2  0E00               	movlw	0
  3784  0019D4  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3785  0019D6  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3786  0019D8  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3787  0019DA  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3788  0019DC  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3789  0019DE  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3790  0019E0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3791  0019E2                     l2367:
  3792  0019E2  5009               	movf	___aomod@divisor^0,w,c
  3793  0019E4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3794  0019E6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3795  0019E8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3796  0019EA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3797  0019EC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3798  0019EE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3799  0019F0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3800  0019F2  B4D8               	btfsc	status,2,c
  3801  0019F4  EFFE  F00C         	goto	u1101
  3802  0019F8  EF00  F00D         	goto	u1100
  3803  0019FC                     u1101:
  3804  0019FC  EF48  F00D         	goto	l2383
  3805  001A00                     u1100:
  3806  001A00  0E01               	movlw	1
  3807  001A02  6E11               	movwf	___aomod@counter^0,c
  3808  001A04  EF0E  F00D         	goto	l2373
  3809  001A08                     l2371:
  3810  001A08  90D8               	bcf	status,0,c
  3811  001A0A  3609               	rlcf	___aomod@divisor^0,f,c
  3812  001A0C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3813  001A0E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3814  001A10  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3815  001A12  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3816  001A14  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3817  001A16  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3818  001A18  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3819  001A1A  2A11               	incf	___aomod@counter^0,f,c
  3820  001A1C                     l2373:
  3821  001A1C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3822  001A1E  EF13  F00D         	goto	u1111
  3823  001A22  EF15  F00D         	goto	u1110
  3824  001A26                     u1111:
  3825  001A26  EF04  F00D         	goto	l2371
  3826  001A2A                     u1110:
  3827  001A2A                     l2375:
  3828  001A2A  5009               	movf	___aomod@divisor^0,w,c
  3829  001A2C  5C01               	subwf	___aomod@dividend^0,w,c
  3830  001A2E  500A               	movf	(___aomod@divisor+1)^0,w,c
  3831  001A30  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3832  001A32  500B               	movf	(___aomod@divisor+2)^0,w,c
  3833  001A34  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3834  001A36  500C               	movf	(___aomod@divisor+3)^0,w,c
  3835  001A38  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3836  001A3A  500D               	movf	(___aomod@divisor+4)^0,w,c
  3837  001A3C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3838  001A3E  500E               	movf	(___aomod@divisor+5)^0,w,c
  3839  001A40  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3840  001A42  500F               	movf	(___aomod@divisor+6)^0,w,c
  3841  001A44  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3842  001A46  5010               	movf	(___aomod@divisor+7)^0,w,c
  3843  001A48  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3844  001A4A  A0D8               	btfss	status,0,c
  3845  001A4C  EF2A  F00D         	goto	u1121
  3846  001A50  EF2C  F00D         	goto	u1120
  3847  001A54                     u1121:
  3848  001A54  EF3C  F00D         	goto	l2379
  3849  001A58                     u1120:
  3850  001A58  5009               	movf	___aomod@divisor^0,w,c
  3851  001A5A  5E01               	subwf	___aomod@dividend^0,f,c
  3852  001A5C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3853  001A5E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3854  001A60  500B               	movf	(___aomod@divisor+2)^0,w,c
  3855  001A62  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3856  001A64  500C               	movf	(___aomod@divisor+3)^0,w,c
  3857  001A66  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3858  001A68  500D               	movf	(___aomod@divisor+4)^0,w,c
  3859  001A6A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3860  001A6C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3861  001A6E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3862  001A70  500F               	movf	(___aomod@divisor+6)^0,w,c
  3863  001A72  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3864  001A74  5010               	movf	(___aomod@divisor+7)^0,w,c
  3865  001A76  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3866  001A78                     l2379:
  3867  001A78  90D8               	bcf	status,0,c
  3868  001A7A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3869  001A7C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3870  001A7E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3871  001A80  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3872  001A82  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3873  001A84  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3874  001A86  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3875  001A88  3209               	rrcf	___aomod@divisor^0,f,c
  3876  001A8A  2E11               	decfsz	___aomod@counter^0,f,c
  3877  001A8C  EF15  F00D         	goto	l2375
  3878  001A90                     l2383:
  3879  001A90  5012               	movf	___aomod@sign^0,w,c
  3880  001A92  B4D8               	btfsc	status,2,c
  3881  001A94  EF4E  F00D         	goto	u1131
  3882  001A98  EF50  F00D         	goto	u1130
  3883  001A9C                     u1131:
  3884  001A9C  EF60  F00D         	goto	l2387
  3885  001AA0                     u1130:
  3886  001AA0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3887  001AA2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3888  001AA4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3889  001AA6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3890  001AA8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3891  001AAA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3892  001AAC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3893  001AAE  6C01               	negf	___aomod@dividend^0,c
  3894  001AB0  0E00               	movlw	0
  3895  001AB2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3896  001AB4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3897  001AB6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3898  001AB8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3899  001ABA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3900  001ABC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3901  001ABE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3902  001AC0                     l2387:
  3903  001AC0  C001  F001         	movff	___aomod@dividend,?___aomod
  3904  001AC4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3905  001AC8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3906  001ACC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3907  001AD0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3908  001AD4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3909  001AD8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3910  001ADC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3911  001AE0  0012               	return		;funcret
  3912  001AE2                     __end_of___aomod:
  3913                           	callstack 0
  3914                           
  3915 ;; *************** function ___aodiv *****************
  3916 ;; Defined at:
  3917 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  dividend        8    0[COMRAM] long long 
  3920 ;;  divisor         8    8[COMRAM] long long 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  quotient        8   18[COMRAM] long long 
  3923 ;;  sign            1   17[COMRAM] unsigned char 
  3924 ;;  counter         1   16[COMRAM] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  8    0[COMRAM] long long 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3934 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;Total ram usage:       26 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_dtoa
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text23
  3948  0017F6                     __ptext23:
  3949                           	callstack 0
  3950  0017F6                     ___aodiv:
  3951                           	callstack 25
  3952  0017F6  0E00               	movlw	0
  3953  0017F8  6E12               	movwf	___aodiv@sign^0,c
  3954  0017FA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3955  0017FC  EF04  F00C         	goto	u1010
  3956  001800  EF02  F00C         	goto	u1011
  3957  001804                     u1011:
  3958  001804  EF16  F00C         	goto	l2319
  3959  001808                     u1010:
  3960  001808  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3961  00180A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3962  00180C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3963  00180E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3964  001810  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3965  001812  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3966  001814  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3967  001816  6C09               	negf	___aodiv@divisor^0,c
  3968  001818  0E00               	movlw	0
  3969  00181A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3970  00181C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3971  00181E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3972  001820  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3973  001822  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3974  001824  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3975  001826  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3976  001828  0E01               	movlw	1
  3977  00182A  6E12               	movwf	___aodiv@sign^0,c
  3978  00182C                     l2319:
  3979  00182C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3980  00182E  EF1D  F00C         	goto	u1020
  3981  001832  EF1B  F00C         	goto	u1021
  3982  001836                     u1021:
  3983  001836  EF2F  F00C         	goto	l2325
  3984  00183A                     u1020:
  3985  00183A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3986  00183C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3987  00183E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3988  001840  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3989  001842  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3990  001844  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3991  001846  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3992  001848  6C01               	negf	___aodiv@dividend^0,c
  3993  00184A  0E00               	movlw	0
  3994  00184C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3995  00184E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3996  001850  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3997  001852  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3998  001854  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3999  001856  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4000  001858  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4001  00185A  0E01               	movlw	1
  4002  00185C  1A12               	xorwf	___aodiv@sign^0,f,c
  4003  00185E                     l2325:
  4004  00185E  EE20  F013         	lfsr	2,___aodiv@quotient
  4005  001862  0E07               	movlw	7
  4006  001864                     u1031:
  4007  001864  6ADE               	clrf	postinc2,c
  4008  001866  06E8               	decf	wreg,f,c
  4009  001868  E2FD               	bc	u1031
  4010  00186A  5009               	movf	___aodiv@divisor^0,w,c
  4011  00186C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4012  00186E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4013  001870  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4014  001872  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4015  001874  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4016  001876  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4017  001878  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4018  00187A  B4D8               	btfsc	status,2,c
  4019  00187C  EF42  F00C         	goto	u1041
  4020  001880  EF44  F00C         	goto	u1040
  4021  001884                     u1041:
  4022  001884  EF96  F00C         	goto	l2347
  4023  001888                     u1040:
  4024  001888  0E01               	movlw	1
  4025  00188A  6E11               	movwf	___aodiv@counter^0,c
  4026  00188C  EF52  F00C         	goto	l2333
  4027  001890                     l2331:
  4028  001890  90D8               	bcf	status,0,c
  4029  001892  3609               	rlcf	___aodiv@divisor^0,f,c
  4030  001894  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4031  001896  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4032  001898  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4033  00189A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4034  00189C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4035  00189E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4036  0018A0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4037  0018A2  2A11               	incf	___aodiv@counter^0,f,c
  4038  0018A4                     l2333:
  4039  0018A4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4040  0018A6  EF57  F00C         	goto	u1051
  4041  0018AA  EF59  F00C         	goto	u1050
  4042  0018AE                     u1051:
  4043  0018AE  EF48  F00C         	goto	l2331
  4044  0018B2                     u1050:
  4045  0018B2                     l2335:
  4046  0018B2  90D8               	bcf	status,0,c
  4047  0018B4  3613               	rlcf	___aodiv@quotient^0,f,c
  4048  0018B6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4049  0018B8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4050  0018BA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4051  0018BC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4052  0018BE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4053  0018C0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4054  0018C2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4055  0018C4  5009               	movf	___aodiv@divisor^0,w,c
  4056  0018C6  5C01               	subwf	___aodiv@dividend^0,w,c
  4057  0018C8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4058  0018CA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4059  0018CC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4060  0018CE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4061  0018D0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4062  0018D2  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4063  0018D4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4064  0018D6  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4065  0018D8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4066  0018DA  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4067  0018DC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4068  0018DE  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4069  0018E0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4070  0018E2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4071  0018E4  A0D8               	btfss	status,0,c
  4072  0018E6  EF77  F00C         	goto	u1061
  4073  0018EA  EF79  F00C         	goto	u1060
  4074  0018EE                     u1061:
  4075  0018EE  EF8A  F00C         	goto	l2343
  4076  0018F2                     u1060:
  4077  0018F2  5009               	movf	___aodiv@divisor^0,w,c
  4078  0018F4  5E01               	subwf	___aodiv@dividend^0,f,c
  4079  0018F6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4080  0018F8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4081  0018FA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4082  0018FC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4083  0018FE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4084  001900  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4085  001902  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4086  001904  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4087  001906  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4088  001908  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4089  00190A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4090  00190C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4091  00190E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4092  001910  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4093  001912  8013               	bsf	___aodiv@quotient^0,0,c
  4094  001914                     l2343:
  4095  001914  90D8               	bcf	status,0,c
  4096  001916  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4097  001918  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4098  00191A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4099  00191C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4100  00191E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4101  001920  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4102  001922  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4103  001924  3209               	rrcf	___aodiv@divisor^0,f,c
  4104  001926  2E11               	decfsz	___aodiv@counter^0,f,c
  4105  001928  EF59  F00C         	goto	l2335
  4106  00192C                     l2347:
  4107  00192C  5012               	movf	___aodiv@sign^0,w,c
  4108  00192E  B4D8               	btfsc	status,2,c
  4109  001930  EF9C  F00C         	goto	u1071
  4110  001934  EF9E  F00C         	goto	u1070
  4111  001938                     u1071:
  4112  001938  EFAE  F00C         	goto	l2351
  4113  00193C                     u1070:
  4114  00193C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4115  00193E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4116  001940  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4117  001942  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4118  001944  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4119  001946  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4120  001948  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4121  00194A  6C13               	negf	___aodiv@quotient^0,c
  4122  00194C  0E00               	movlw	0
  4123  00194E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4124  001950  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4125  001952  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4126  001954  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4127  001956  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4128  001958  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4129  00195A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4130  00195C                     l2351:
  4131  00195C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4132  001960  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4133  001964  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4134  001968  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4135  00196C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4136  001970  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4137  001974  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4138  001978  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4139  00197C  0012               	return		;funcret
  4140  00197E                     __end_of___aodiv:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _ctoa *****************
  4144 ;; Defined at:
  4145 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4148 ;;		 -> sprintf@f(6), 
  4149 ;;  c               1   11[COMRAM] unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  w               2   15[COMRAM] int 
  4152 ;;  l               2   13[COMRAM] int 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  2    9[COMRAM] int 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4162 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4163 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4165 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4166 ;;Total ram usage:        8 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    2
  4169 ;; This function calls:
  4170 ;;		_fputc
  4171 ;; This function is called by:
  4172 ;;		_vfpfcnvrt
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text24
  4177  001C36                     __ptext24:
  4178                           	callstack 0
  4179  001C36                     _ctoa:
  4180                           	callstack 24
  4181  001C36                     
  4182                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4183  001C36  0100               	movlb	0	; () banked
  4184  001C38  516D               	movf	_width& (0+255),w,b
  4185  001C3A  116E               	iorwf	(_width+1)& (0+255),w,b
  4186  001C3C  A4D8               	btfss	status,2,c
  4187  001C3E  EF23  F00E         	goto	u1241
  4188  001C42  EF25  F00E         	goto	u1240
  4189  001C46                     u1241:
  4190  001C46  EF2B  F00E         	goto	l2445
  4191  001C4A                     u1240:
  4192  001C4A                     
  4193                           ; BSR set to: 0
  4194  001C4A  C06D  F010         	movff	_width,ctoa@w
  4195  001C4E  C06E  F011         	movff	_width+1,ctoa@w+1
  4196  001C52  EF31  F00E         	goto	l2447
  4197  001C56                     l2445:
  4198                           
  4199                           ; BSR set to: 0
  4200  001C56  0EFF               	movlw	255
  4201  001C58  256D               	addwf	_width& (0+255),w,b
  4202  001C5A  6E10               	movwf	ctoa@w^0,c
  4203  001C5C  0EFF               	movlw	255
  4204  001C5E  216E               	addwfc	(_width+1)& (0+255),w,b
  4205  001C60  6E11               	movwf	(ctoa@w+1)^0,c
  4206  001C62                     l2447:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  4210  001C62  A171               	btfss	_flags& (0+255),0,b
  4211  001C64  EF36  F00E         	goto	u1251
  4212  001C68  EF38  F00E         	goto	u1250
  4213  001C6C                     u1251:
  4214  001C6C  EF41  F00E         	goto	l2451
  4215  001C70                     u1250:
  4216  001C70                     
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  4219  001C70  C00C  F001         	movff	ctoa@c,fputc@c
  4220  001C74  6A02               	clrf	(fputc@c+1)^0,c
  4221  001C76  C00A  F003         	movff	ctoa@fp,fputc@fp
  4222  001C7A  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4223  001C7E  EC87  F00E         	call	_fputc	;wreg free
  4224  001C82                     l2451:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  4227  001C82  BE11               	btfsc	(ctoa@w+1)^0,7,c
  4228  001C84  EF46  F00E         	goto	u1261
  4229  001C88  EF48  F00E         	goto	u1260
  4230  001C8C                     u1261:
  4231  001C8C  EF4A  F00E         	goto	l2455
  4232  001C90                     u1260:
  4233  001C90  EF4E  F00E         	goto	l1216
  4234  001C94                     l2455:
  4235  001C94  0E00               	movlw	0
  4236  001C96  6E11               	movwf	(ctoa@w+1)^0,c
  4237  001C98  0E00               	movlw	0
  4238  001C9A  6E10               	movwf	ctoa@w^0,c
  4239  001C9C                     l1216:
  4240                           
  4241                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  4242  001C9C  0E00               	movlw	0
  4243  001C9E  6E0F               	movwf	(ctoa@l+1)^0,c
  4244  001CA0  0E00               	movlw	0
  4245  001CA2  6E0E               	movwf	ctoa@l^0,c
  4246                           
  4247                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4248  001CA4  EF60  F00E         	goto	l2461
  4249  001CA8                     l2457:
  4250                           
  4251                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  4252  001CA8  0E00               	movlw	0
  4253  001CAA  6E02               	movwf	(fputc@c+1)^0,c
  4254  001CAC  0E20               	movlw	32
  4255  001CAE  6E01               	movwf	fputc@c^0,c
  4256  001CB0  C00A  F003         	movff	ctoa@fp,fputc@fp
  4257  001CB4  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4258  001CB8  EC87  F00E         	call	_fputc	;wreg free
  4259  001CBC                     
  4260                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  4261  001CBC  4A0E               	infsnz	ctoa@l^0,f,c
  4262  001CBE  2A0F               	incf	(ctoa@l+1)^0,f,c
  4263  001CC0                     l2461:
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4266  001CC0  5010               	movf	ctoa@w^0,w,c
  4267  001CC2  5C0E               	subwf	ctoa@l^0,w,c
  4268  001CC4  500F               	movf	(ctoa@l+1)^0,w,c
  4269  001CC6  0A80               	xorlw	128
  4270  001CC8  6E0D               	movwf	??_ctoa^0,c
  4271  001CCA  5011               	movf	(ctoa@w+1)^0,w,c
  4272  001CCC  0A80               	xorlw	128
  4273  001CCE  580D               	subwfb	??_ctoa^0,w,c
  4274  001CD0  A0D8               	btfss	status,0,c
  4275  001CD2  EF6D  F00E         	goto	u1271
  4276  001CD6  EF6F  F00E         	goto	u1270
  4277  001CDA                     u1271:
  4278  001CDA  EF54  F00E         	goto	l2457
  4279  001CDE                     u1270:
  4280  001CDE                     
  4281                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4282  001CDE  0100               	movlb	0	; () banked
  4283  001CE0  B171               	btfsc	_flags& (0+255),0,b
  4284  001CE2  EF75  F00E         	goto	u1281
  4285  001CE6  EF77  F00E         	goto	u1280
  4286  001CEA                     u1281:
  4287  001CEA  EF80  F00E         	goto	l2465
  4288  001CEE                     u1280:
  4289  001CEE                     
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4292  001CEE  C00C  F001         	movff	ctoa@c,fputc@c
  4293  001CF2  6A02               	clrf	(fputc@c+1)^0,c
  4294  001CF4  C00A  F003         	movff	ctoa@fp,fputc@fp
  4295  001CF8  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4296  001CFC  EC87  F00E         	call	_fputc	;wreg free
  4297  001D00                     l2465:
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4300  001D00  0E01               	movlw	1
  4301  001D02  240E               	addwf	ctoa@l^0,w,c
  4302  001D04  6E0A               	movwf	?_ctoa^0,c
  4303  001D06  0E00               	movlw	0
  4304  001D08  200F               	addwfc	(ctoa@l+1)^0,w,c
  4305  001D0A  6E0B               	movwf	(?_ctoa+1)^0,c
  4306  001D0C  0012               	return		;funcret
  4307  001D0E                     __end_of_ctoa:
  4308                           	callstack 0
  4309                           
  4310 ;; *************** function _fputc *****************
  4311 ;; Defined at:
  4312 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  c               2    0[COMRAM] int 
  4315 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4316 ;;		 -> sprintf@f(6), 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  2    0[COMRAM] int 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4330 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4331 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;Total ram usage:        9 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    1
  4335 ;; This function calls:
  4336 ;;		_putch
  4337 ;; This function is called by:
  4338 ;;		_pad
  4339 ;;		_ctoa
  4340 ;;		_vfpfcnvrt
  4341 ;;		_fputs
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text25
  4346  001D0E                     __ptext25:
  4347                           	callstack 0
  4348  001D0E                     _fputc:
  4349                           	callstack 25
  4350  001D0E  5003               	movf	fputc@fp^0,w,c
  4351  001D10  1004               	iorwf	(fputc@fp+1)^0,w,c
  4352  001D12  B4D8               	btfsc	status,2,c
  4353  001D14  EF8E  F00E         	goto	u941
  4354  001D18  EF90  F00E         	goto	u940
  4355  001D1C                     u941:
  4356  001D1C  EF99  F00E         	goto	l2237
  4357  001D20                     u940:
  4358  001D20  5003               	movf	fputc@fp^0,w,c
  4359  001D22  1004               	iorwf	(fputc@fp+1)^0,w,c
  4360  001D24  A4D8               	btfss	status,2,c
  4361  001D26  EF97  F00E         	goto	u951
  4362  001D2A  EF99  F00E         	goto	u950
  4363  001D2E                     u951:
  4364  001D2E  EF9E  F00E         	goto	l2239
  4365  001D32                     u950:
  4366  001D32                     l2237:
  4367  001D32  5001               	movf	fputc@c^0,w,c
  4368  001D34  ECE8  F013         	call	_putch
  4369  001D38  EFEB  F00E         	goto	l1348
  4370  001D3C                     l2239:
  4371  001D3C  EE20 F004          	lfsr	2,4
  4372  001D40  5003               	movf	fputc@fp^0,w,c
  4373  001D42  26D9               	addwf	fsr2l,f,c
  4374  001D44  5004               	movf	(fputc@fp+1)^0,w,c
  4375  001D46  22DA               	addwfc	fsr2h,f,c
  4376  001D48  50DE               	movf	postinc2,w,c
  4377  001D4A  10DE               	iorwf	postinc2,w,c
  4378  001D4C  B4D8               	btfsc	status,2,c
  4379  001D4E  EFAB  F00E         	goto	u961
  4380  001D52  EFAD  F00E         	goto	u960
  4381  001D56                     u961:
  4382  001D56  EFC8  F00E         	goto	l2243
  4383  001D5A                     u960:
  4384  001D5A  EE20 F004          	lfsr	2,4
  4385  001D5E  5003               	movf	fputc@fp^0,w,c
  4386  001D60  26D9               	addwf	fsr2l,f,c
  4387  001D62  5004               	movf	(fputc@fp+1)^0,w,c
  4388  001D64  22DA               	addwfc	fsr2h,f,c
  4389  001D66  EE10 F002          	lfsr	1,2
  4390  001D6A  5003               	movf	fputc@fp^0,w,c
  4391  001D6C  26E1               	addwf	fsr1l,f,c
  4392  001D6E  5004               	movf	(fputc@fp+1)^0,w,c
  4393  001D70  22E2               	addwfc	fsr1h,f,c
  4394  001D72  50DE               	movf	postinc2,w,c
  4395  001D74  5CE6               	subwf	postinc1,w,c
  4396  001D76  50E6               	movf	postinc1,w,c
  4397  001D78  0A80               	xorlw	128
  4398  001D7A  6E09               	movwf	(??_fputc+4)^0,c
  4399  001D7C  50DE               	movf	postinc2,w,c
  4400  001D7E  0A80               	xorlw	128
  4401  001D80  5809               	subwfb	(??_fputc+4)^0,w,c
  4402  001D82  B0D8               	btfsc	status,0,c
  4403  001D84  EFC6  F00E         	goto	u971
  4404  001D88  EFC8  F00E         	goto	u970
  4405  001D8C                     u971:
  4406  001D8C  EFEB  F00E         	goto	l1348
  4407  001D90                     u970:
  4408  001D90                     l2243:
  4409  001D90  EE20 F002          	lfsr	2,2
  4410  001D94  5003               	movf	fputc@fp^0,w,c
  4411  001D96  26D9               	addwf	fsr2l,f,c
  4412  001D98  5004               	movf	(fputc@fp+1)^0,w,c
  4413  001D9A  22DA               	addwfc	fsr2h,f,c
  4414  001D9C  CFDE F005          	movff	postinc2,??_fputc
  4415  001DA0  CFDD F006          	movff	postdec2,??_fputc+1
  4416  001DA4  C003  FFD9         	movff	fputc@fp,fsr2l
  4417  001DA8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4418  001DAC  CFDE F007          	movff	postinc2,??_fputc+2
  4419  001DB0  CFDD F008          	movff	postdec2,??_fputc+3
  4420  001DB4  5005               	movf	??_fputc^0,w,c
  4421  001DB6  2407               	addwf	(??_fputc+2)^0,w,c
  4422  001DB8  6ED9               	movwf	fsr2l,c
  4423  001DBA  5006               	movf	(??_fputc+1)^0,w,c
  4424  001DBC  2008               	addwfc	(??_fputc+3)^0,w,c
  4425  001DBE  6EDA               	movwf	fsr2h,c
  4426  001DC0  C001  FFDF         	movff	fputc@c,indf2
  4427  001DC4  EE20 F002          	lfsr	2,2
  4428  001DC8  5003               	movf	fputc@fp^0,w,c
  4429  001DCA  26D9               	addwf	fsr2l,f,c
  4430  001DCC  5004               	movf	(fputc@fp+1)^0,w,c
  4431  001DCE  22DA               	addwfc	fsr2h,f,c
  4432  001DD0  2ADE               	incf	postinc2,f,c
  4433  001DD2  0E00               	movlw	0
  4434  001DD4  22DD               	addwfc	postdec2,f,c
  4435  001DD6                     l1348:
  4436  001DD6  0012               	return		;funcret
  4437  001DD8                     __end_of_fputc:
  4438                           	callstack 0
  4439                           
  4440 ;; *************** function _putch *****************
  4441 ;; Defined at:
  4442 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  c               1    wreg     unsigned char 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  c               1    0[COMRAM] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4460 ;;Total ram usage:        0 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_fputc
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text26
  4470  0027D0                     __ptext26:
  4471                           	callstack 0
  4472  0027D0                     _putch:
  4473                           	callstack 25
  4474  0027D0  0012               	return		;funcret
  4475  0027D2                     __end_of_putch:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _atoi *****************
  4479 ;; Defined at:
  4480 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  s               2    7[COMRAM] PTR const unsigned char 
  4483 ;;		 -> STR_5(9), STR_4(11), STR_3(5), 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  n               2   20[COMRAM] int 
  4486 ;;  neg             2   13[COMRAM] int 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  2    7[COMRAM] int 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4497 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4499 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4500 ;;Total ram usage:       15 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    1
  4503 ;; This function calls:
  4504 ;;		___wmul
  4505 ;;		_isdigit
  4506 ;;		_isspace
  4507 ;; This function is called by:
  4508 ;;		_vfpfcnvrt
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text27
  4513  001652                     __ptext27:
  4514                           	callstack 0
  4515  001652                     _atoi:
  4516                           	callstack 25
  4517  001652  0E00               	movlw	0
  4518  001654  6E16               	movwf	(atoi@n+1)^0,c
  4519  001656  0E00               	movlw	0
  4520  001658  6E15               	movwf	atoi@n^0,c
  4521  00165A  0E00               	movlw	0
  4522  00165C  6E0F               	movwf	(atoi@neg+1)^0,c
  4523  00165E  0E00               	movlw	0
  4524  001660  6E0E               	movwf	atoi@neg^0,c
  4525  001662  EF35  F00B         	goto	l2535
  4526  001666                     l2533:
  4527  001666  4A08               	infsnz	atoi@s^0,f,c
  4528  001668  2A09               	incf	(atoi@s+1)^0,f,c
  4529  00166A                     l2535:
  4530  00166A  0E01               	movlw	1
  4531  00166C  6E14               	movwf	_atoi$1419^0,c
  4532  00166E  C008  FFF6         	movff	atoi@s,tblptrl
  4533  001672  C009  FFF7         	movff	atoi@s+1,tblptrh
  4534  001676                     	if	0	;tblptru may be non-zero
  4535  001676                     	endif
  4536  001676                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4537  001676  0E00               	movlw	low (__mediumconst shr (0+16))
  4538  001678  6EF8               	movwf	tblptru,c
  4539  00167A                     	endif
  4540  00167A  0008               	tblrd		*
  4541  00167C  50F5               	movf	tablat,w,c
  4542  00167E  0A20               	xorlw	32
  4543  001680  B4D8               	btfsc	status,2,c
  4544  001682  EF45  F00B         	goto	u1441
  4545  001686  EF47  F00B         	goto	u1440
  4546  00168A                     u1441:
  4547  00168A  EF66  F00B         	goto	l2543
  4548  00168E                     u1440:
  4549  00168E  0EF7               	movlw	247
  4550  001690  6E0A               	movwf	??_atoi^0,c
  4551  001692  0EFF               	movlw	255
  4552  001694  6E0B               	movwf	(??_atoi+1)^0,c
  4553  001696  C008  FFF6         	movff	atoi@s,tblptrl
  4554  00169A  C009  FFF7         	movff	atoi@s+1,tblptrh
  4555  00169E                     	if	0	;tblptru may be non-zero
  4556  00169E                     	endif
  4557  00169E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4558  00169E  0E00               	movlw	low (__mediumconst shr (0+16))
  4559  0016A0  6EF8               	movwf	tblptru,c
  4560  0016A2                     	endif
  4561  0016A2  0008               	tblrd		*
  4562  0016A4  50F5               	movf	tablat,w,c
  4563  0016A6  6E0C               	movwf	(??_atoi+2)^0,c
  4564  0016A8  6A0D               	clrf	(??_atoi+3)^0,c
  4565  0016AA  500A               	movf	??_atoi^0,w,c
  4566  0016AC  260C               	addwf	(??_atoi+2)^0,f,c
  4567  0016AE  500B               	movf	(??_atoi+1)^0,w,c
  4568  0016B0  220D               	addwfc	(??_atoi+3)^0,f,c
  4569  0016B2  500D               	movf	(??_atoi+3)^0,w,c
  4570  0016B4  E109               	bnz	u1450
  4571  0016B6  0E05               	movlw	5
  4572  0016B8  5C0C               	subwf	(??_atoi+2)^0,w,c
  4573  0016BA  A0D8               	btfss	status,0,c
  4574  0016BC  EF62  F00B         	goto	u1451
  4575  0016C0  EF64  F00B         	goto	u1450
  4576  0016C4                     u1451:
  4577  0016C4  EF66  F00B         	goto	l2543
  4578  0016C8                     u1450:
  4579  0016C8  0E00               	movlw	0
  4580  0016CA  6E14               	movwf	_atoi$1419^0,c
  4581  0016CC                     l2543:
  4582  0016CC  C014  F010         	movff	_atoi$1419,_atoi$1418
  4583  0016D0  6A11               	clrf	(_atoi$1418+1)^0,c
  4584  0016D2  5010               	movf	_atoi$1418^0,w,c
  4585  0016D4  1011               	iorwf	(_atoi$1418+1)^0,w,c
  4586  0016D6  A4D8               	btfss	status,2,c
  4587  0016D8  EF70  F00B         	goto	u1461
  4588  0016DC  EF72  F00B         	goto	u1460
  4589  0016E0                     u1461:
  4590  0016E0  EF33  F00B         	goto	l2533
  4591  0016E4                     u1460:
  4592  0016E4  EF7C  F00B         	goto	l2553
  4593  0016E8                     l2549:
  4594  0016E8  0E00               	movlw	0
  4595  0016EA  6E0F               	movwf	(atoi@neg+1)^0,c
  4596  0016EC  0E01               	movlw	1
  4597  0016EE  6E0E               	movwf	atoi@neg^0,c
  4598  0016F0                     l2551:
  4599  0016F0  4A08               	infsnz	atoi@s^0,f,c
  4600  0016F2  2A09               	incf	(atoi@s+1)^0,f,c
  4601  0016F4  EFB5  F00B         	goto	l2559
  4602  0016F8                     l2553:
  4603  0016F8  C008  FFF6         	movff	atoi@s,tblptrl
  4604  0016FC  C009  FFF7         	movff	atoi@s+1,tblptrh
  4605  001700                     	if	0	;tblptru may be non-zero
  4606  001700                     	endif
  4607  001700                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4608  001700  0E00               	movlw	low (__mediumconst shr (0+16))
  4609  001702  6EF8               	movwf	tblptru,c
  4610  001704                     	endif
  4611  001704  0008               	tblrd		*
  4612  001706  50F5               	movf	tablat,w,c
  4613  001708  6E0A               	movwf	??_atoi^0,c
  4614  00170A  6A0B               	clrf	(??_atoi+1)^0,c
  4615                           
  4616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4617                           ; Switch size 1, requested type "simple"
  4618                           ; Number of cases is 1, Range of values is 0 to 0
  4619                           ; switch strategies available:
  4620                           ; Name         Instructions Cycles
  4621                           ; simple_byte            4     3 (average)
  4622                           ;	Chosen strategy is simple_byte
  4623  00170C  500B               	movf	(??_atoi+1)^0,w,c
  4624  00170E  0A00               	xorlw	0	; case 0
  4625  001710  B4D8               	btfsc	status,2,c
  4626  001712  EF8D  F00B         	goto	l2983
  4627  001716  EFB5  F00B         	goto	l2559
  4628  00171A                     l2983:
  4629                           
  4630                           ; Switch size 1, requested type "simple"
  4631                           ; Number of cases is 2, Range of values is 43 to 45
  4632                           ; switch strategies available:
  4633                           ; Name         Instructions Cycles
  4634                           ; simple_byte            7     4 (average)
  4635                           ;	Chosen strategy is simple_byte
  4636  00171A  500A               	movf	??_atoi^0,w,c
  4637  00171C  0A2B               	xorlw	43	; case 43
  4638  00171E  B4D8               	btfsc	status,2,c
  4639  001720  EF78  F00B         	goto	l2551
  4640  001724  0A06               	xorlw	6	; case 45
  4641  001726  B4D8               	btfsc	status,2,c
  4642  001728  EF74  F00B         	goto	l2549
  4643  00172C  EFB5  F00B         	goto	l2559
  4644  001730                     l2555:
  4645  001730  C015  F001         	movff	atoi@n,___wmul@multiplier
  4646  001734  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  4647  001738  0E00               	movlw	0
  4648  00173A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4649  00173C  0E0A               	movlw	10
  4650  00173E  6E03               	movwf	___wmul@multiplicand^0,c
  4651  001740  EC4B  F013         	call	___wmul	;wreg free
  4652  001744  C008  FFF6         	movff	atoi@s,tblptrl
  4653  001748  C009  FFF7         	movff	atoi@s+1,tblptrh
  4654  00174C                     	if	0	;tblptru may be non-zero
  4655  00174C                     	endif
  4656  00174C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4657  00174C  0E00               	movlw	low (__mediumconst shr (0+16))
  4658  00174E  6EF8               	movwf	tblptru,c
  4659  001750                     	endif
  4660  001750  0008               	tblrd		*
  4661  001752  50F5               	movf	tablat,w,c
  4662  001754  5E01               	subwf	?___wmul^0,f,c
  4663  001756  0E00               	movlw	0
  4664  001758  5A02               	subwfb	(?___wmul+1)^0,f,c
  4665  00175A  0E30               	movlw	48
  4666  00175C  2401               	addwf	?___wmul^0,w,c
  4667  00175E  6E15               	movwf	atoi@n^0,c
  4668  001760  0E00               	movlw	0
  4669  001762  2002               	addwfc	(?___wmul+1)^0,w,c
  4670  001764  6E16               	movwf	(atoi@n+1)^0,c
  4671  001766  EF78  F00B         	goto	l2551
  4672  00176A                     l2559:
  4673  00176A  0ED0               	movlw	208
  4674  00176C  6E0A               	movwf	??_atoi^0,c
  4675  00176E  0EFF               	movlw	255
  4676  001770  6E0B               	movwf	(??_atoi+1)^0,c
  4677  001772  C008  FFF6         	movff	atoi@s,tblptrl
  4678  001776  C009  FFF7         	movff	atoi@s+1,tblptrh
  4679  00177A                     	if	0	;tblptru may be non-zero
  4680  00177A                     	endif
  4681  00177A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4682  00177A  0E00               	movlw	low (__mediumconst shr (0+16))
  4683  00177C  6EF8               	movwf	tblptru,c
  4684  00177E                     	endif
  4685  00177E  0008               	tblrd		*
  4686  001780  50F5               	movf	tablat,w,c
  4687  001782  6E0C               	movwf	(??_atoi+2)^0,c
  4688  001784  6A0D               	clrf	(??_atoi+3)^0,c
  4689  001786  500A               	movf	??_atoi^0,w,c
  4690  001788  260C               	addwf	(??_atoi+2)^0,f,c
  4691  00178A  500B               	movf	(??_atoi+1)^0,w,c
  4692  00178C  220D               	addwfc	(??_atoi+3)^0,f,c
  4693  00178E  500D               	movf	(??_atoi+3)^0,w,c
  4694  001790  E10A               	bnz	u1470
  4695  001792  0E0A               	movlw	10
  4696  001794  5C0C               	subwf	(??_atoi+2)^0,w,c
  4697  001796  A0D8               	btfss	status,0,c
  4698  001798  EFD0  F00B         	goto	u1471
  4699  00179C  EFD3  F00B         	goto	u1470
  4700  0017A0                     u1471:
  4701  0017A0  0E01               	movlw	1
  4702  0017A2  EFD4  F00B         	goto	u1480
  4703  0017A6                     u1470:
  4704  0017A6  0E00               	movlw	0
  4705  0017A8                     u1480:
  4706  0017A8  6E12               	movwf	_atoi$1420^0,c
  4707  0017AA  6A13               	clrf	(_atoi$1420+1)^0,c
  4708  0017AC  5012               	movf	_atoi$1420^0,w,c
  4709  0017AE  1013               	iorwf	(_atoi$1420+1)^0,w,c
  4710  0017B0  A4D8               	btfss	status,2,c
  4711  0017B2  EFDD  F00B         	goto	u1491
  4712  0017B6  EFDF  F00B         	goto	u1490
  4713  0017BA                     u1491:
  4714  0017BA  EF98  F00B         	goto	l2555
  4715  0017BE                     u1490:
  4716  0017BE  500E               	movf	atoi@neg^0,w,c
  4717  0017C0  100F               	iorwf	(atoi@neg+1)^0,w,c
  4718  0017C2  A4D8               	btfss	status,2,c
  4719  0017C4  EFE6  F00B         	goto	u1501
  4720  0017C8  EFE8  F00B         	goto	u1500
  4721  0017CC                     u1501:
  4722  0017CC  EFF6  F00B         	goto	l1319
  4723  0017D0                     u1500:
  4724  0017D0  C015  F00A         	movff	atoi@n,??_atoi
  4725  0017D4  C016  F00B         	movff	atoi@n+1,??_atoi+1
  4726  0017D8  1E0A               	comf	??_atoi^0,f,c
  4727  0017DA  1E0B               	comf	(??_atoi+1)^0,f,c
  4728  0017DC  4A0A               	infsnz	??_atoi^0,f,c
  4729  0017DE  2A0B               	incf	(??_atoi+1)^0,f,c
  4730  0017E0  C00A  F008         	movff	??_atoi,?_atoi
  4731  0017E4  C00B  F009         	movff	??_atoi+1,?_atoi+1
  4732  0017E8  EFFA  F00B         	goto	l1322
  4733  0017EC                     l1319:
  4734  0017EC  C015  F008         	movff	atoi@n,?_atoi
  4735  0017F0  C016  F009         	movff	atoi@n+1,?_atoi+1
  4736  0017F4                     l1322:
  4737  0017F4  0012               	return		;funcret
  4738  0017F6                     __end_of_atoi:
  4739                           	callstack 0
  4740                           
  4741 ;; *************** function _isspace *****************
  4742 ;; Defined at:
  4743 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  c               2    0[COMRAM] int 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2    0[COMRAM] int 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;Total ram usage:        7 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_atoi
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text28
  4771  002344                     __ptext28:
  4772                           	callstack 0
  4773  002344                     _isspace:
  4774                           	callstack 25
  4775  002344  0E01               	movlw	1
  4776  002346  6E07               	movwf	_isspace$1436^0,c
  4777  002348  0E20               	movlw	32
  4778  00234A  1801               	xorwf	isspace@c^0,w,c
  4779  00234C  1002               	iorwf	(isspace@c+1)^0,w,c
  4780  00234E  B4D8               	btfsc	status,2,c
  4781  002350  EFAC  F011         	goto	u1211
  4782  002354  EFAE  F011         	goto	u1210
  4783  002358                     u1211:
  4784  002358  EFC7  F011         	goto	l2429
  4785  00235C                     u1210:
  4786  00235C  0EF7               	movlw	247
  4787  00235E  6E03               	movwf	??_isspace^0,c
  4788  002360  0EFF               	movlw	255
  4789  002362  6E04               	movwf	(??_isspace+1)^0,c
  4790  002364  C001  F005         	movff	isspace@c,??_isspace+2
  4791  002368  C002  F006         	movff	isspace@c+1,??_isspace+3
  4792  00236C  5003               	movf	??_isspace^0,w,c
  4793  00236E  2605               	addwf	(??_isspace+2)^0,f,c
  4794  002370  5004               	movf	(??_isspace+1)^0,w,c
  4795  002372  2206               	addwfc	(??_isspace+3)^0,f,c
  4796  002374  5006               	movf	(??_isspace+3)^0,w,c
  4797  002376  E109               	bnz	u1220
  4798  002378  0E05               	movlw	5
  4799  00237A  5C05               	subwf	(??_isspace+2)^0,w,c
  4800  00237C  A0D8               	btfss	status,0,c
  4801  00237E  EFC3  F011         	goto	u1221
  4802  002382  EFC5  F011         	goto	u1220
  4803  002386                     u1221:
  4804  002386  EFC7  F011         	goto	l2429
  4805  00238A                     u1220:
  4806  00238A  0E00               	movlw	0
  4807  00238C  6E07               	movwf	_isspace$1436^0,c
  4808  00238E                     l2429:
  4809  00238E  C007  F001         	movff	_isspace$1436,?_isspace
  4810  002392  6A02               	clrf	(?_isspace+1)^0,c
  4811  002394  0012               	return		;funcret
  4812  002396                     __end_of_isspace:
  4813                           	callstack 0
  4814                           
  4815 ;; *************** function _isdigit *****************
  4816 ;; Defined at:
  4817 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  c               2    0[COMRAM] int 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  2    0[COMRAM] int 
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4834 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4835 ;;Total ram usage:        6 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_vfpfcnvrt
  4841 ;;		_atoi
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text29
  4846  002498                     __ptext29:
  4847                           	callstack 0
  4848  002498                     _isdigit:
  4849                           	callstack 26
  4850  002498  0ED0               	movlw	208
  4851  00249A  6E03               	movwf	??_isdigit^0,c
  4852  00249C  0EFF               	movlw	255
  4853  00249E  6E04               	movwf	(??_isdigit+1)^0,c
  4854  0024A0  C001  F005         	movff	isdigit@c,??_isdigit+2
  4855  0024A4  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  4856  0024A8  5003               	movf	??_isdigit^0,w,c
  4857  0024AA  2605               	addwf	(??_isdigit+2)^0,f,c
  4858  0024AC  5004               	movf	(??_isdigit+1)^0,w,c
  4859  0024AE  2206               	addwfc	(??_isdigit+3)^0,f,c
  4860  0024B0  5006               	movf	(??_isdigit+3)^0,w,c
  4861  0024B2  E10A               	bnz	u1190
  4862  0024B4  0E0A               	movlw	10
  4863  0024B6  5C05               	subwf	(??_isdigit+2)^0,w,c
  4864  0024B8  A0D8               	btfss	status,0,c
  4865  0024BA  EF61  F012         	goto	u1191
  4866  0024BE  EF64  F012         	goto	u1190
  4867  0024C2                     u1191:
  4868  0024C2  0E01               	movlw	1
  4869  0024C4  EF65  F012         	goto	u1200
  4870  0024C8                     u1190:
  4871  0024C8  0E00               	movlw	0
  4872  0024CA                     u1200:
  4873  0024CA  6E01               	movwf	?_isdigit^0,c
  4874  0024CC  6A02               	clrf	(?_isdigit+1)^0,c
  4875  0024CE  0012               	return		;funcret
  4876  0024D0                     __end_of_isdigit:
  4877                           	callstack 0
  4878                           
  4879 ;; *************** function ___wmul *****************
  4880 ;; Defined at:
  4881 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  multiplier      2    0[COMRAM] unsigned int 
  4884 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  product         2    4[COMRAM] unsigned int 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  2    0[COMRAM] unsigned int 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, prodl, prodh
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4900 ;;Total ram usage:        6 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_GDapplication
  4906 ;;		_atoi
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text30
  4911  002696                     __ptext30:
  4912                           	callstack 0
  4913  002696                     ___wmul:
  4914                           	callstack 25
  4915  002696  5001               	movf	___wmul@multiplier^0,w,c
  4916  002698  0203               	mulwf	___wmul@multiplicand^0,c
  4917  00269A  CFF3 F005          	movff	prodl,___wmul@product
  4918  00269E  CFF4 F006          	movff	prodh,___wmul@product+1
  4919  0026A2  5001               	movf	___wmul@multiplier^0,w,c
  4920  0026A4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4921  0026A6  50F3               	movf	243,w,c
  4922  0026A8  2606               	addwf	(___wmul@product+1)^0,f,c
  4923  0026AA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4924  0026AC  0203               	mulwf	___wmul@multiplicand^0,c
  4925  0026AE  50F3               	movf	243,w,c
  4926  0026B0  2606               	addwf	(___wmul@product+1)^0,f,c
  4927  0026B2  C005  F001         	movff	___wmul@product,?___wmul
  4928  0026B6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4929  0026BA  0012               	return		;funcret
  4930  0026BC                     __end_of___wmul:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function ___lwmod *****************
  4934 ;; Defined at:
  4935 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  dividend        2    0[COMRAM] unsigned int 
  4938 ;;  divisor         2    2[COMRAM] unsigned int 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  counter         1    4[COMRAM] unsigned char 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  2    0[COMRAM] unsigned int 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;Total ram usage:        5 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_GDapplication
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text31
  4964  00228E                     __ptext31:
  4965                           	callstack 0
  4966  00228E                     ___lwmod:
  4967                           	callstack 29
  4968  00228E  5003               	movf	___lwmod@divisor^0,w,c
  4969  002290  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4970  002292  B4D8               	btfsc	status,2,c
  4971  002294  EF4E  F011         	goto	u1711
  4972  002298  EF50  F011         	goto	u1710
  4973  00229C                     u1711:
  4974  00229C  EF74  F011         	goto	l992
  4975  0022A0                     u1710:
  4976  0022A0  0E01               	movlw	1
  4977  0022A2  6E05               	movwf	___lwmod@counter^0,c
  4978  0022A4  EF58  F011         	goto	l2819
  4979  0022A8                     l2817:
  4980  0022A8  90D8               	bcf	status,0,c
  4981  0022AA  3603               	rlcf	___lwmod@divisor^0,f,c
  4982  0022AC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4983  0022AE  2A05               	incf	___lwmod@counter^0,f,c
  4984  0022B0                     l2819:
  4985  0022B0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4986  0022B2  EF5D  F011         	goto	u1721
  4987  0022B6  EF5F  F011         	goto	u1720
  4988  0022BA                     u1721:
  4989  0022BA  EF54  F011         	goto	l2817
  4990  0022BE                     u1720:
  4991  0022BE                     l2821:
  4992  0022BE  5003               	movf	___lwmod@divisor^0,w,c
  4993  0022C0  5C01               	subwf	___lwmod@dividend^0,w,c
  4994  0022C2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4995  0022C4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4996  0022C6  A0D8               	btfss	status,0,c
  4997  0022C8  EF68  F011         	goto	u1731
  4998  0022CC  EF6A  F011         	goto	u1730
  4999  0022D0                     u1731:
  5000  0022D0  EF6E  F011         	goto	l2825
  5001  0022D4                     u1730:
  5002  0022D4  5003               	movf	___lwmod@divisor^0,w,c
  5003  0022D6  5E01               	subwf	___lwmod@dividend^0,f,c
  5004  0022D8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  5005  0022DA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  5006  0022DC                     l2825:
  5007  0022DC  90D8               	bcf	status,0,c
  5008  0022DE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  5009  0022E0  3203               	rrcf	___lwmod@divisor^0,f,c
  5010  0022E2  2E05               	decfsz	___lwmod@counter^0,f,c
  5011  0022E4  EF5F  F011         	goto	l2821
  5012  0022E8                     l992:
  5013  0022E8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5014  0022EC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5015  0022F0  0012               	return		;funcret
  5016  0022F2                     __end_of___lwmod:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function ___lwdiv *****************
  5020 ;; Defined at:
  5021 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  dividend        2    0[COMRAM] unsigned int 
  5024 ;;  divisor         2    2[COMRAM] unsigned int 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  quotient        2    4[COMRAM] unsigned int 
  5027 ;;  counter         1    6[COMRAM] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  2    0[COMRAM] unsigned int 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5038 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5040 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5041 ;;Total ram usage:        7 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_GDapplication
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text32
  5051  0021B4                     __ptext32:
  5052                           	callstack 0
  5053  0021B4                     ___lwdiv:
  5054                           	callstack 29
  5055  0021B4  0E00               	movlw	0
  5056  0021B6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  5057  0021B8  0E00               	movlw	0
  5058  0021BA  6E05               	movwf	___lwdiv@quotient^0,c
  5059  0021BC  5003               	movf	___lwdiv@divisor^0,w,c
  5060  0021BE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5061  0021C0  B4D8               	btfsc	status,2,c
  5062  0021C2  EFE5  F010         	goto	u1681
  5063  0021C6  EFE7  F010         	goto	u1680
  5064  0021CA                     u1681:
  5065  0021CA  EF0F  F011         	goto	l982
  5066  0021CE                     u1680:
  5067  0021CE  0E01               	movlw	1
  5068  0021D0  6E07               	movwf	___lwdiv@counter^0,c
  5069  0021D2  EFEF  F010         	goto	l2799
  5070  0021D6                     l2797:
  5071  0021D6  90D8               	bcf	status,0,c
  5072  0021D8  3603               	rlcf	___lwdiv@divisor^0,f,c
  5073  0021DA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5074  0021DC  2A07               	incf	___lwdiv@counter^0,f,c
  5075  0021DE                     l2799:
  5076  0021DE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  5077  0021E0  EFF4  F010         	goto	u1691
  5078  0021E4  EFF6  F010         	goto	u1690
  5079  0021E8                     u1691:
  5080  0021E8  EFEB  F010         	goto	l2797
  5081  0021EC                     u1690:
  5082  0021EC                     l2801:
  5083  0021EC  90D8               	bcf	status,0,c
  5084  0021EE  3605               	rlcf	___lwdiv@quotient^0,f,c
  5085  0021F0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5086  0021F2  5003               	movf	___lwdiv@divisor^0,w,c
  5087  0021F4  5C01               	subwf	___lwdiv@dividend^0,w,c
  5088  0021F6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5089  0021F8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5090  0021FA  A0D8               	btfss	status,0,c
  5091  0021FC  EF02  F011         	goto	u1701
  5092  002200  EF04  F011         	goto	u1700
  5093  002204                     u1701:
  5094  002204  EF09  F011         	goto	l2809
  5095  002208                     u1700:
  5096  002208  5003               	movf	___lwdiv@divisor^0,w,c
  5097  00220A  5E01               	subwf	___lwdiv@dividend^0,f,c
  5098  00220C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5099  00220E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5100  002210  8005               	bsf	___lwdiv@quotient^0,0,c
  5101  002212                     l2809:
  5102  002212  90D8               	bcf	status,0,c
  5103  002214  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5104  002216  3203               	rrcf	___lwdiv@divisor^0,f,c
  5105  002218  2E07               	decfsz	___lwdiv@counter^0,f,c
  5106  00221A  EFF6  F010         	goto	l2801
  5107  00221E                     l982:
  5108  00221E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5109  002222  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5110  002226  0012               	return		;funcret
  5111  002228                     __end_of___lwdiv:
  5112                           	callstack 0
  5113                           
  5114 ;; *************** function _ApplicationInit *****************
  5115 ;; Defined at:
  5116 ;;		line 6 in file "application.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    8
  5137 ;; This function calls:
  5138 ;;		_User_lcd_writeString
  5139 ;;		_lcd_clearDisplay
  5140 ;; This function is called by:
  5141 ;;		_main
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text33
  5146  00256A                     __ptext33:
  5147                           	callstack 0
  5148  00256A                     _ApplicationInit:
  5149                           	callstack 22
  5150  00256A                     
  5151                           ;application.c: 9:     lcd_clearDisplay();
  5152  00256A  EC98  F013         	call	_lcd_clearDisplay	;wreg free
  5153  00256E                     
  5154                           ;application.c: 10:     User_lcd_writeString((char*)"Angle:          ",0,0);
  5155  00256E  0E27               	movlw	low STR_1
  5156  002570  6E17               	movwf	User_lcd_writeString@string^0,c
  5157  002572  0E0F               	movlw	high STR_1
  5158  002574  6E18               	movwf	(User_lcd_writeString@string+1)^0,c
  5159  002576  0E00               	movlw	0
  5160  002578  6E19               	movwf	User_lcd_writeString@row^0,c
  5161  00257A  0E00               	movlw	0
  5162  00257C  6E1A               	movwf	User_lcd_writeString@column^0,c
  5163  00257E  EC4D  F010         	call	_User_lcd_writeString	;wreg free
  5164  002582                     
  5165                           ;application.c: 11:     User_lcd_writeString((char*)"Decoded value:  ",1,0);
  5166  002582  0E38               	movlw	low STR_2
  5167  002584  6E17               	movwf	User_lcd_writeString@string^0,c
  5168  002586  0E0F               	movlw	high STR_2
  5169  002588  6E18               	movwf	(User_lcd_writeString@string+1)^0,c
  5170  00258A  0E01               	movlw	1
  5171  00258C  6E19               	movwf	User_lcd_writeString@row^0,c
  5172  00258E  0E00               	movlw	0
  5173  002590  6E1A               	movwf	User_lcd_writeString@column^0,c
  5174  002592  EC4D  F010         	call	_User_lcd_writeString	;wreg free
  5175  002596  0012               	return		;funcret
  5176  002598                     __end_of_ApplicationInit:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _lcd_clearDisplay *****************
  5180 ;; Defined at:
  5181 ;;		line 59 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;Total ram usage:        0 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    6
  5202 ;; This function calls:
  5203 ;;		_DELAY_milliseconds
  5204 ;;		_lcd_sendByte
  5205 ;; This function is called by:
  5206 ;;		_lcd_setup
  5207 ;;		_ApplicationInit
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text34
  5212  002730                     __ptext34:
  5213                           	callstack 0
  5214  002730                     _lcd_clearDisplay:
  5215                           	callstack 22
  5216  002730                     
  5217                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 60:     lcd_sendByte(0b1, 0);
  5218  002730  0E00               	movlw	0
  5219  002732  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  5220  002734  0E01               	movlw	1
  5221  002736  EC98  F010         	call	_lcd_sendByte
  5222  00273A                     
  5223                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 61:     DELAY_milliseconds(2);
  5224  00273A  0E00               	movlw	0
  5225  00273C  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5226  00273E  0E02               	movlw	2
  5227  002740  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5228  002742  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  5229  002746  0012               	return		;funcret
  5230  002748                     __end_of_lcd_clearDisplay:
  5231                           	callstack 0
  5232                           
  5233 ;; *************** function _User_lcd_writeString *****************
  5234 ;; Defined at:
  5235 ;;		line 40 in file "application.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  string          2   22[COMRAM] PTR unsigned char 
  5238 ;;		 -> GDapplication@lcdDataBuffer(8), STR_2(17), STR_1(17), 
  5239 ;;  row             1   24[COMRAM] unsigned char 
  5240 ;;  column          1   25[COMRAM] unsigned char 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  i               1   28[COMRAM] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5255 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5256 ;;Total ram usage:        7 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    7
  5259 ;; This function calls:
  5260 ;;		_lcd_returnHome
  5261 ;;		_lcd_setAddr
  5262 ;;		_lcd_writeChar
  5263 ;; This function is called by:
  5264 ;;		_ApplicationInit
  5265 ;;		_GDapplication
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text35
  5270  00209A                     __ptext35:
  5271                           	callstack 0
  5272  00209A                     _User_lcd_writeString:
  5273                           	callstack 22
  5274  00209A                     
  5275                           ;application.c: 41:     lcd_setAddr(row, column);
  5276  00209A  C01A  F015         	movff	User_lcd_writeString@column,lcd_setAddr@character
  5277  00209E  5019               	movf	User_lcd_writeString@row^0,w,c
  5278  0020A0  ECB0  F013         	call	_lcd_setAddr
  5279  0020A4                     
  5280                           ;application.c: 43:     for (i = 0; i < 16; i++) {
  5281  0020A4  0E00               	movlw	0
  5282  0020A6  6E1D               	movwf	User_lcd_writeString@i^0,c
  5283  0020A8                     l2769:
  5284                           
  5285                           ;application.c: 44:         if (string[i]) {
  5286  0020A8  501D               	movf	User_lcd_writeString@i^0,w,c
  5287  0020AA  2417               	addwf	User_lcd_writeString@string^0,w,c
  5288  0020AC  6E1B               	movwf	??_User_lcd_writeString^0,c
  5289  0020AE  0E00               	movlw	0
  5290  0020B0  2018               	addwfc	(User_lcd_writeString@string+1)^0,w,c
  5291  0020B2  6E1C               	movwf	(??_User_lcd_writeString+1)^0,c
  5292  0020B4  C01B  FFF6         	movff	??_User_lcd_writeString,tblptrl
  5293  0020B8  C01C  FFF7         	movff	??_User_lcd_writeString+1,tblptrh
  5294  0020BC  0E00               	movlw	low (__smallconst shr (0+16))
  5295  0020BE  6EF8               	movwf	tblptru,c
  5296  0020C0  0E0E               	movlw	(high __ramtop+-1)
  5297  0020C2  64F7               	cpfsgt	tblptrh,c
  5298  0020C4  D003               	bra	u1647
  5299  0020C6  0008               	tblrd		*
  5300  0020C8  50F5               	movf	tablat,w,c
  5301  0020CA  D005               	bra	u1640
  5302  0020CC                     u1647:
  5303  0020CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5304  0020D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5305  0020D4  50E7               	movf	indf1,w,c
  5306  0020D6                     u1640:
  5307  0020D6  0900               	iorlw	0
  5308  0020D8  B4D8               	btfsc	status,2,c
  5309  0020DA  EF71  F010         	goto	u1651
  5310  0020DE  EF73  F010         	goto	u1650
  5311  0020E2                     u1651:
  5312  0020E2  EF8C  F010         	goto	l2773
  5313  0020E6                     u1650:
  5314  0020E6                     
  5315                           ;application.c: 45:             lcd_writeChar(string[i]);
  5316  0020E6  501D               	movf	User_lcd_writeString@i^0,w,c
  5317  0020E8  2417               	addwf	User_lcd_writeString@string^0,w,c
  5318  0020EA  6E1B               	movwf	??_User_lcd_writeString^0,c
  5319  0020EC  0E00               	movlw	0
  5320  0020EE  2018               	addwfc	(User_lcd_writeString@string+1)^0,w,c
  5321  0020F0  6E1C               	movwf	(??_User_lcd_writeString+1)^0,c
  5322  0020F2  C01B  FFF6         	movff	??_User_lcd_writeString,tblptrl
  5323  0020F6  C01C  FFF7         	movff	??_User_lcd_writeString+1,tblptrh
  5324  0020FA  0E00               	movlw	low (__smallconst shr (0+16))
  5325  0020FC  6EF8               	movwf	tblptru,c
  5326  0020FE  0E0E               	movlw	(high __ramtop+-1)
  5327  002100  64F7               	cpfsgt	tblptrh,c
  5328  002102  D003               	bra	u1667
  5329  002104  0008               	tblrd		*
  5330  002106  50F5               	movf	tablat,w,c
  5331  002108  D005               	bra	u1660
  5332  00210A                     u1667:
  5333  00210A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5334  00210E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5335  002112  50E7               	movf	indf1,w,c
  5336  002114                     u1660:
  5337  002114  ECCE  F013         	call	_lcd_writeChar
  5338  002118                     l2773:
  5339                           
  5340                           ;application.c: 47:     }
  5341  002118  2A1D               	incf	User_lcd_writeString@i^0,f,c
  5342  00211A  0E0F               	movlw	15
  5343  00211C  641D               	cpfsgt	User_lcd_writeString@i^0,c
  5344  00211E  EF93  F010         	goto	u1671
  5345  002122  EF95  F010         	goto	u1670
  5346  002126                     u1671:
  5347  002126  EF54  F010         	goto	l2769
  5348  00212A                     u1670:
  5349  00212A                     
  5350                           ;application.c: 48:     lcd_returnHome();
  5351  00212A  ECA4  F013         	call	_lcd_returnHome	;wreg free
  5352  00212E  0012               	return		;funcret
  5353  002130                     __end_of_User_lcd_writeString:
  5354                           	callstack 0
  5355                           
  5356 ;; *************** function _lcd_writeChar *****************
  5357 ;; Defined at:
  5358 ;;		line 68 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  character       1    wreg     unsigned char 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  character       1   20[COMRAM] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      void 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;Total ram usage:        1 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    6
  5379 ;; This function calls:
  5380 ;;		_lcd_sendByte
  5381 ;; This function is called by:
  5382 ;;		_User_lcd_writeString
  5383 ;;		_lcd_writeString
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text36
  5388  00279C                     __ptext36:
  5389                           	callstack 0
  5390  00279C                     _lcd_writeChar:
  5391                           	callstack 22
  5392                           
  5393                           ;incstack = 0
  5394                           ;lcd_writeChar@character stored from wreg
  5395  00279C  6E15               	movwf	lcd_writeChar@character^0,c
  5396  00279E                     
  5397                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 69:     lcd_sendByte(character, 1);
  5398  00279E  0E01               	movlw	1
  5399  0027A0  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  5400  0027A2  5015               	movf	lcd_writeChar@character^0,w,c
  5401  0027A4  EC98  F010         	call	_lcd_sendByte
  5402  0027A8  0012               	return		;funcret
  5403  0027AA                     __end_of_lcd_writeChar:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _lcd_setAddr *****************
  5407 ;; Defined at:
  5408 ;;		line 64 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  row             1    wreg     unsigned char 
  5411 ;;  character       1   20[COMRAM] unsigned char 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  row             1   21[COMRAM] unsigned char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5423 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5427 ;;Total ram usage:        2 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; Hardware stack levels required when called:    6
  5430 ;; This function calls:
  5431 ;;		_lcd_sendByte
  5432 ;; This function is called by:
  5433 ;;		_User_lcd_writeString
  5434 ;;		_lcd_writeString
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text37
  5439  002760                     __ptext37:
  5440                           	callstack 0
  5441  002760                     _lcd_setAddr:
  5442                           	callstack 22
  5443                           
  5444                           ;incstack = 0
  5445                           ;lcd_setAddr@row stored from wreg
  5446  002760  6E16               	movwf	lcd_setAddr@row^0,c
  5447  002762                     
  5448                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 65:     lcd_sendByte(0x80 | (character + (row
      +                          *40)), 0);
  5449  002762  0E00               	movlw	0
  5450  002764  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  5451  002766  5016               	movf	lcd_setAddr@row^0,w,c
  5452  002768  0D28               	mullw	40
  5453  00276A  50F3               	movf	243,w,c
  5454  00276C  2415               	addwf	lcd_setAddr@character^0,w,c
  5455  00276E  0980               	iorlw	128
  5456  002770  EC98  F010         	call	_lcd_sendByte
  5457  002774  0012               	return		;funcret
  5458  002776                     __end_of_lcd_setAddr:
  5459                           	callstack 0
  5460                           
  5461 ;; *************** function _lcd_returnHome *****************
  5462 ;; Defined at:
  5463 ;;		line 54 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5481 ;;Total ram usage:        0 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    6
  5484 ;; This function calls:
  5485 ;;		_DELAY_milliseconds
  5486 ;;		_lcd_sendByte
  5487 ;; This function is called by:
  5488 ;;		_lcd_setup
  5489 ;;		_User_lcd_writeString
  5490 ;;		_lcd_writeString
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text38
  5495  002748                     __ptext38:
  5496                           	callstack 0
  5497  002748                     _lcd_returnHome:
  5498                           	callstack 22
  5499  002748                     
  5500                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 55:     lcd_sendByte(0b10, 0);
  5501  002748  0E00               	movlw	0
  5502  00274A  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  5503  00274C  0E02               	movlw	2
  5504  00274E  EC98  F010         	call	_lcd_sendByte
  5505  002752                     
  5506                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 56:     DELAY_milliseconds(2);
  5507  002752  0E00               	movlw	0
  5508  002754  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5509  002756  0E02               	movlw	2
  5510  002758  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5511  00275A  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  5512  00275E  0012               	return		;funcret
  5513  002760                     __end_of_lcd_returnHome:
  5514                           	callstack 0
  5515                           
  5516 ;; *************** function _lcd_sendByte *****************
  5517 ;; Defined at:
  5518 ;;		line 38 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  byte            1    wreg     unsigned char 
  5521 ;;  RSbit           1   13[COMRAM] _Bool 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  byte            1   17[COMRAM] unsigned char 
  5524 ;;  packetLow       1   19[COMRAM] unsigned char 
  5525 ;;  packetHigh      1   18[COMRAM] unsigned char 
  5526 ;;  nibbleLow       1   16[COMRAM] unsigned char 
  5527 ;;  nibbleHigh      1   15[COMRAM] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;Total ram usage:        7 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    5
  5544 ;; This function calls:
  5545 ;;		_DELAY_milliseconds
  5546 ;;		_expander_setOutput
  5547 ;; This function is called by:
  5548 ;;		_lcd_returnHome
  5549 ;;		_lcd_clearDisplay
  5550 ;;		_lcd_setAddr
  5551 ;;		_lcd_writeChar
  5552 ;;		_lcd_setup
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text39
  5557  002130                     __ptext39:
  5558                           	callstack 0
  5559  002130                     _lcd_sendByte:
  5560                           	callstack 23
  5561                           
  5562                           ;incstack = 0
  5563                           ;lcd_sendByte@byte stored from wreg
  5564  002130  6E12               	movwf	lcd_sendByte@byte^0,c
  5565  002132                     
  5566                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 39:     uint8_t nibbleHigh = byte >> 4;
  5567  002132  3812               	swapf	lcd_sendByte@byte^0,w,c
  5568  002134  0B0F               	andlw	15
  5569  002136  6E10               	movwf	lcd_sendByte@nibbleHigh^0,c
  5570                           
  5571                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 40:     uint8_t nibbleLow = byte & 0xF;
  5572  002138  5012               	movf	lcd_sendByte@byte^0,w,c
  5573  00213A  0B0F               	andlw	15
  5574  00213C  6E11               	movwf	lcd_sendByte@nibbleLow^0,c
  5575                           
  5576                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 41:     uint8_t packetHigh = (nibbleHigh << 4
      +                          ) | (RSbit << 2);
  5577  00213E  C00E  F00F         	movff	lcd_sendByte@RSbit,??_lcd_sendByte
  5578  002142  90D8               	bcf	status,0,c
  5579  002144  360F               	rlcf	??_lcd_sendByte^0,f,c
  5580  002146  90D8               	bcf	status,0,c
  5581  002148  360F               	rlcf	??_lcd_sendByte^0,f,c
  5582  00214A  3810               	swapf	lcd_sendByte@nibbleHigh^0,w,c
  5583  00214C  0BF0               	andlw	240
  5584  00214E  100F               	iorwf	??_lcd_sendByte^0,w,c
  5585  002150  6E13               	movwf	lcd_sendByte@packetHigh^0,c
  5586                           
  5587                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 42:     uint8_t packetLow = (nibbleLow << 4) 
      +                          | (RSbit << 2);
  5588  002152  C00E  F00F         	movff	lcd_sendByte@RSbit,??_lcd_sendByte
  5589  002156  90D8               	bcf	status,0,c
  5590  002158  360F               	rlcf	??_lcd_sendByte^0,f,c
  5591  00215A  90D8               	bcf	status,0,c
  5592  00215C  360F               	rlcf	??_lcd_sendByte^0,f,c
  5593  00215E  3811               	swapf	lcd_sendByte@nibbleLow^0,w,c
  5594  002160  0BF0               	andlw	240
  5595  002162  100F               	iorwf	??_lcd_sendByte^0,w,c
  5596  002164  6E14               	movwf	lcd_sendByte@packetLow^0,c
  5597  002166                     
  5598                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 44:     expander_setOutput(packetHigh);
  5599  002166  5013               	movf	lcd_sendByte@packetHigh^0,w,c
  5600  002168  ECD5  F013         	call	_expander_setOutput
  5601  00216C                     
  5602                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 45:     DELAY_milliseconds(2);
  5603  00216C  0E00               	movlw	0
  5604  00216E  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5605  002170  0E02               	movlw	2
  5606  002172  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5607  002174  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  5608  002178                     
  5609                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 46:     expander_setOutput(packetHigh | (1<<3
      +                          ));
  5610  002178  5013               	movf	lcd_sendByte@packetHigh^0,w,c
  5611  00217A  0908               	iorlw	8
  5612  00217C  ECD5  F013         	call	_expander_setOutput
  5613  002180                     
  5614                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 47:     DELAY_milliseconds(2);
  5615  002180  0E00               	movlw	0
  5616  002182  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5617  002184  0E02               	movlw	2
  5618  002186  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5619  002188  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  5620  00218C                     
  5621                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 48:     expander_setOutput(packetLow);
  5622  00218C  5014               	movf	lcd_sendByte@packetLow^0,w,c
  5623  00218E  ECD5  F013         	call	_expander_setOutput
  5624  002192                     
  5625                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 49:     DELAY_milliseconds(2);
  5626  002192  0E00               	movlw	0
  5627  002194  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5628  002196  0E02               	movlw	2
  5629  002198  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5630  00219A  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  5631  00219E                     
  5632                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 50:     expander_setOutput(packetLow | (1<<3)
      +                          );
  5633  00219E  5014               	movf	lcd_sendByte@packetLow^0,w,c
  5634  0021A0  0908               	iorlw	8
  5635  0021A2  ECD5  F013         	call	_expander_setOutput
  5636  0021A6                     
  5637                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 51:     DELAY_milliseconds(40);
  5638  0021A6  0E00               	movlw	0
  5639  0021A8  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5640  0021AA  0E28               	movlw	40
  5641  0021AC  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5642  0021AE  EC24  F013         	call	_DELAY_milliseconds	;wreg free
  5643  0021B2  0012               	return		;funcret
  5644  0021B4                     __end_of_lcd_sendByte:
  5645                           	callstack 0
  5646                           
  5647 ;; *************** function _expander_setOutput *****************
  5648 ;; Defined at:
  5649 ;;		line 48 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  output          1    wreg     unsigned char 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  output          1   12[COMRAM] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5667 ;;Total ram usage:        1 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    4
  5670 ;; This function calls:
  5671 ;;		_expander_sendByte
  5672 ;; This function is called by:
  5673 ;;		_lcd_sendNibble
  5674 ;;		_lcd_sendByte
  5675 ;;		_lcd_setup
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text40
  5680  0027AA                     __ptext40:
  5681                           	callstack 0
  5682  0027AA                     _expander_setOutput:
  5683                           	callstack 23
  5684                           
  5685                           ;incstack = 0
  5686                           ;expander_setOutput@output stored from wreg
  5687  0027AA  6E0D               	movwf	expander_setOutput@output^0,c
  5688  0027AC                     
  5689                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 49:     expander_sendByte(0x15, output);
  5690  0027AC  C00D  F008         	movff	expander_setOutput@output,expander_sendByte@byte
  5691  0027B0  0E15               	movlw	21
  5692  0027B2  EC83  F012         	call	_expander_sendByte
  5693  0027B6  0012               	return		;funcret
  5694  0027B8                     __end_of_expander_setOutput:
  5695                           	callstack 0
  5696                           
  5697 ;; *************** function _expander_sendByte *****************
  5698 ;; Defined at:
  5699 ;;		line 32 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  addr            1    wreg     unsigned char 
  5702 ;;  byte            1    7[COMRAM] unsigned char 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  addr            1    8[COMRAM] unsigned char 
  5705 ;;  cmd             3    9[COMRAM] unsigned char [3]
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5716 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;Total ram usage:        5 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    3
  5722 ;; This function calls:
  5723 ;;		_SPI1_Close
  5724 ;;		_SPI1_WriteBlock
  5725 ;;		_spi_master_open
  5726 ;; This function is called by:
  5727 ;;		_expander_setup
  5728 ;;		_expander_setOutput
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text41
  5733  002506                     __ptext41:
  5734                           	callstack 0
  5735  002506                     _expander_sendByte:
  5736                           	callstack 23
  5737                           
  5738                           ;incstack = 0
  5739                           ;expander_sendByte@addr stored from wreg
  5740  002506  6E09               	movwf	expander_sendByte@addr^0,c
  5741  002508                     
  5742                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 33:     spi_master_open(LCD);
  5743  002508  0E00               	movlw	0
  5744  00250A  EC9C  F012         	call	_spi_master_open
  5745  00250E                     
  5746                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 34:     LATDbits.LATD4 = 0;
  5747  00250E  9885               	bcf	133,4,c	;volatile
  5748  002510                     
  5749                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 35:     uint8_t cmd[3];;mcc_generated_fi
      +                          les/LCDMiniDrivers/expander.c: 36:     cmd[0] = 0b01000000;
  5750  002510  0E40               	movlw	64
  5751  002512  6E0A               	movwf	expander_sendByte@cmd^0,c
  5752  002514                     
  5753                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 37:     cmd[1] = addr;
  5754  002514  C009  F00B         	movff	expander_sendByte@addr,expander_sendByte@cmd+1
  5755  002518                     
  5756                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 38:     cmd[2] = byte;
  5757  002518  C008  F00C         	movff	expander_sendByte@byte,expander_sendByte@cmd+2
  5758  00251C                     
  5759                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 39:     SPI1_WriteBlock(cmd, 3);
  5760  00251C  0E0A               	movlw	low expander_sendByte@cmd
  5761  00251E  6E02               	movwf	SPI1_WriteBlock@block^0,c
  5762  002520  0E00               	movlw	high expander_sendByte@cmd
  5763  002522  6E03               	movwf	(SPI1_WriteBlock@block+1)^0,c
  5764  002524  0E00               	movlw	0
  5765  002526  6E05               	movwf	(SPI1_WriteBlock@blockSize+1)^0,c
  5766  002528  0E03               	movlw	3
  5767  00252A  6E04               	movwf	SPI1_WriteBlock@blockSize^0,c
  5768  00252C  EC2F  F012         	call	_SPI1_WriteBlock	;wreg free
  5769  002530                     
  5770                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 40:     LATDbits.LATD4 = 1;
  5771  002530  8885               	bsf	133,4,c	;volatile
  5772  002532                     
  5773                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 41:     SPI1_Close();
  5774  002532  ECE6  F013         	call	_SPI1_Close	;wreg free
  5775  002536  0012               	return		;funcret
  5776  002538                     __end_of_expander_sendByte:
  5777                           	callstack 0
  5778                           
  5779 ;; *************** function _spi_master_open *****************
  5780 ;; Defined at:
  5781 ;;		line 53 in file "mcc_generated_files/drivers/spi_master.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  config          1    wreg     enum E377
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  config          1    4[COMRAM] enum E377
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      _Bool 
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;Total ram usage:        3 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; Hardware stack levels required when called:    2
  5802 ;; This function calls:
  5803 ;;		_LCD_open
  5804 ;; This function is called by:
  5805 ;;		_expander_sendByte
  5806 ;;		_digipot_setWiper
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text42
  5811  002538                     __ptext42:
  5812                           	callstack 0
  5813  002538                     _spi_master_open:
  5814                           	callstack 23
  5815                           
  5816                           ;incstack = 0
  5817                           ;spi_master_open@config stored from wreg
  5818  002538  6E05               	movwf	spi_master_open@config^0,c
  5819  00253A                     
  5820                           ;mcc_generated_files/drivers/spi_master.c: 54:     switch(config){
  5821  00253A  EFA3  F012         	goto	l2265
  5822  00253E                     l2259:
  5823                           
  5824                           ;mcc_generated_files/drivers/spi_master.c: 56:             return LCD_open();;	Return va
      +                          lue of _spi_master_open is never used
  5825  00253E  ECE2  F013         	call	_LCD_open	;wreg free
  5826  002542  EFB4  F012         	goto	l456
  5827  002546                     l2265:
  5828  002546  5005               	movf	spi_master_open@config^0,w,c
  5829  002548  6E03               	movwf	??_spi_master_open^0,c
  5830  00254A  6A04               	clrf	(??_spi_master_open+1)^0,c
  5831                           
  5832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5833                           ; Switch size 1, requested type "simple"
  5834                           ; Number of cases is 1, Range of values is 0 to 0
  5835                           ; switch strategies available:
  5836                           ; Name         Instructions Cycles
  5837                           ; simple_byte            4     3 (average)
  5838                           ;	Chosen strategy is simple_byte
  5839  00254C  5004               	movf	(??_spi_master_open+1)^0,w,c
  5840  00254E  0A00               	xorlw	0	; case 0
  5841  002550  B4D8               	btfsc	status,2,c
  5842  002552  EFAD  F012         	goto	l2985
  5843  002556  EFB4  F012         	goto	l456
  5844  00255A                     l2985:
  5845                           
  5846                           ; Switch size 1, requested type "simple"
  5847                           ; Number of cases is 1, Range of values is 0 to 0
  5848                           ; switch strategies available:
  5849                           ; Name         Instructions Cycles
  5850                           ; simple_byte            4     3 (average)
  5851                           ;	Chosen strategy is simple_byte
  5852  00255A  5003               	movf	??_spi_master_open^0,w,c
  5853  00255C  0A00               	xorlw	0	; case 0
  5854  00255E  B4D8               	btfsc	status,2,c
  5855  002560  EF9F  F012         	goto	l2259
  5856  002564  EFB4  F012         	goto	l456
  5857  002568                     l456:
  5858  002568  0012               	return		;funcret
  5859  00256A                     __end_of_spi_master_open:
  5860                           	callstack 0
  5861                           
  5862 ;; *************** function _LCD_open *****************
  5863 ;; Defined at:
  5864 ;;		line 40 in file "mcc_generated_files/drivers/spi_master.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      _Bool 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    1
  5885 ;; This function calls:
  5886 ;;		_SPI1_Open
  5887 ;; This function is called by:
  5888 ;;		_spi_master_open
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text43
  5893  0027C4                     __ptext43:
  5894                           	callstack 0
  5895  0027C4                     _LCD_open:
  5896                           	callstack 23
  5897  0027C4                     
  5898                           ;mcc_generated_files/drivers/spi_master.c: 41:     return SPI1_Open(LCD_CONFIG);
  5899  0027C4  0E00               	movlw	0
  5900  0027C6  EC4F  F00F         	call	_SPI1_Open
  5901  0027CA  0012               	return		;funcret
  5902  0027CC                     __end_of_LCD_open:
  5903                           	callstack 0
  5904                           
  5905 ;; *************** function _SPI1_Open *****************
  5906 ;; Defined at:
  5907 ;;		line 85 in file "mcc_generated_files/spi1.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  spi1UniqueCo    1    wreg     enum E355
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;  spi1UniqueCo    1    1[COMRAM] enum E355
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      _Bool 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;Total ram usage:        2 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_LCD_open
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text44
  5935  001E9E                     __ptext44:
  5936                           	callstack 0
  5937  001E9E                     _SPI1_Open:
  5938                           	callstack 23
  5939                           
  5940                           ;incstack = 0
  5941                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  5942  001E9E  6E02               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
  5943  001EA0                     
  5944                           ;mcc_generated_files/spi1.c: 85:         *data++ = SPI1_ExchangeByte(0);;mcc_generated_f
      +                          iles/spi1.c: 86:     };mcc_generated_files/spi1.c: 87: }
  5945  001EA0  BA95               	btfsc	149,5,c	;volatile
  5946  001EA2  EF55  F00F         	goto	u921
  5947  001EA6  EF57  F00F         	goto	u920
  5948  001EAA                     u921:
  5949  001EAA  EFA9  F00F         	goto	l2223
  5950  001EAE                     u920:
  5951  001EAE                     
  5952                           ;mcc_generated_files/spi1.c: 88: ;mcc_generated_files/spi1.c: 89: void SPI1_WriteByte(ui
      +                          nt8_t byte)
  5953  001EAE  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  5954  001EB0  0D04               	mullw	4
  5955  001EB2  0E01               	movlw	1
  5956  001EB4  26F3               	addwf	243,f,c
  5957  001EB6  0E00               	movlw	0
  5958  001EB8  22F4               	addwfc	244,f,c
  5959  001EBA  0E1F               	movlw	low _spi1_configuration
  5960  001EBC  24F3               	addwf	243,w,c
  5961  001EBE  6EF6               	movwf	tblptrl,c
  5962  001EC0  0E0F               	movlw	high _spi1_configuration
  5963  001EC2  20F4               	addwfc	244,w,c
  5964  001EC4  6EF7               	movwf	tblptrh,c
  5965  001EC6                     	if	1	;There are 3 active tblptr bytes
  5966  001EC6  6AF8               	clrf	tblptru,c
  5967  001EC8  0E00               	movlw	low (__mediumconst shr (0+16))
  5968  001ECA  22F8               	addwfc	tblptru,f,c
  5969  001ECC                     	endif
  5970  001ECC  0008               	tblrd		*
  5971  001ECE  CFF5 FF94          	movff	tablat,3988	;volatile
  5972                           
  5973                           ;mcc_generated_files/spi1.c: 90: {
  5974  001ED2  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  5975  001ED4  0D04               	mullw	4
  5976  001ED6  0E1F               	movlw	low _spi1_configuration
  5977  001ED8  24F3               	addwf	243,w,c
  5978  001EDA  6EF6               	movwf	tblptrl,c
  5979  001EDC  0E0F               	movlw	high _spi1_configuration
  5980  001EDE  20F4               	addwfc	244,w,c
  5981  001EE0  6EF7               	movwf	tblptrh,c
  5982  001EE2                     	if	1	;There are 3 active tblptr bytes
  5983  001EE2  6AF8               	clrf	tblptru,c
  5984  001EE4  0E00               	movlw	low (__mediumconst shr (0+16))
  5985  001EE6  22F8               	addwfc	tblptru,f,c
  5986  001EE8                     	endif
  5987  001EE8  0008               	tblrd		*
  5988  001EEA  CFF5 FF95          	movff	tablat,3989	;volatile
  5989  001EEE                     
  5990                           ;mcc_generated_files/spi1.c: 91:     SSP1BUF = byte;
  5991  001EEE  0E00               	movlw	0
  5992  001EF0  6E96               	movwf	150,c	;volatile
  5993  001EF2                     
  5994                           ;mcc_generated_files/spi1.c: 92: }
  5995  001EF2  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  5996  001EF4  0D04               	mullw	4
  5997  001EF6  0E02               	movlw	2
  5998  001EF8  26F3               	addwf	243,f,c
  5999  001EFA  0E00               	movlw	0
  6000  001EFC  22F4               	addwfc	244,f,c
  6001  001EFE  0E1F               	movlw	low _spi1_configuration
  6002  001F00  24F3               	addwf	243,w,c
  6003  001F02  6EF6               	movwf	tblptrl,c
  6004  001F04  0E0F               	movlw	high _spi1_configuration
  6005  001F06  20F4               	addwfc	244,w,c
  6006  001F08  6EF7               	movwf	tblptrh,c
  6007  001F0A                     	if	1	;There are 3 active tblptr bytes
  6008  001F0A  6AF8               	clrf	tblptru,c
  6009  001F0C  0E00               	movlw	low (__mediumconst shr (0+16))
  6010  001F0E  22F8               	addwfc	tblptru,f,c
  6011  001F10                     	endif
  6012  001F10  0008               	tblrd		*
  6013  001F12  CFF5 FF92          	movff	tablat,3986	;volatile
  6014  001F16                     
  6015                           ;mcc_generated_files/spi1.c: 93: 
  6016  001F16  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  6017  001F18  0D04               	mullw	4
  6018  001F1A  0E03               	movlw	3
  6019  001F1C  26F3               	addwf	243,f,c
  6020  001F1E  0E00               	movlw	0
  6021  001F20  22F4               	addwfc	244,f,c
  6022  001F22  0E1F               	movlw	low _spi1_configuration
  6023  001F24  24F3               	addwf	243,w,c
  6024  001F26  6EF6               	movwf	tblptrl,c
  6025  001F28  0E0F               	movlw	high _spi1_configuration
  6026  001F2A  20F4               	addwfc	244,w,c
  6027  001F2C  6EF7               	movwf	tblptrh,c
  6028  001F2E                     	if	1	;There are 3 active tblptr bytes
  6029  001F2E  6AF8               	clrf	tblptru,c
  6030  001F30  0E00               	movlw	low (__mediumconst shr (0+16))
  6031  001F32  22F8               	addwfc	tblptru,f,c
  6032  001F34                     	endif
  6033  001F34  0008               	tblrd		*
  6034  001F36  CFF5 F001          	movff	tablat,??_SPI1_Open
  6035  001F3A  3A01               	swapf	??_SPI1_Open^0,f,c
  6036  001F3C  4601               	rlncf	??_SPI1_Open^0,f,c
  6037  001F3E  4601               	rlncf	??_SPI1_Open^0,f,c
  6038  001F40  5089               	movf	137,w,c	;volatile
  6039  001F42  1801               	xorwf	??_SPI1_Open^0,w,c
  6040  001F44  0BBF               	andlw	-65
  6041  001F46  1801               	xorwf	??_SPI1_Open^0,w,c
  6042  001F48  6E89               	movwf	137,c	;volatile
  6043  001F4A                     
  6044                           ;mcc_generated_files/spi1.c: 94: uint8_t SPI1_ReadByte(void)
  6045  001F4A  8A95               	bsf	149,5,c	;volatile
  6046  001F4C                     
  6047                           ;mcc_generated_files/spi1.c: 95: {
  6048  001F4C  0E01               	movlw	1
  6049  001F4E  EFAA  F00F         	goto	l302
  6050  001F52                     l2223:
  6051                           
  6052                           ;mcc_generated_files/spi1.c: 97: }
  6053  001F52  0E00               	movlw	0
  6054  001F54                     l302:
  6055  001F54  0012               	return		;funcret
  6056  001F56                     __end_of_SPI1_Open:
  6057                           	callstack 0
  6058                           
  6059 ;; *************** function _SPI1_WriteBlock *****************
  6060 ;; Defined at:
  6061 ;;		line 126 in file "mcc_generated_files/spi1.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  block           2    1[COMRAM] PTR void 
  6064 ;;		 -> expander_sendByte@cmd(3), digipot_setWiper@cmd(2), 
  6065 ;;  blockSize       2    3[COMRAM] unsigned int 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  data            2    5[COMRAM] PTR unsigned char 
  6068 ;;		 -> expander_sendByte@cmd(3), digipot_setWiper@cmd(2), 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6082 ;;Total ram usage:        6 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    1
  6085 ;; This function calls:
  6086 ;;		_SPI1_ExchangeByte
  6087 ;; This function is called by:
  6088 ;;		_expander_sendByte
  6089 ;;		_digipot_setWiper
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text45
  6094  00245E                     __ptext45:
  6095                           	callstack 0
  6096  00245E                     _SPI1_WriteBlock:
  6097                           	callstack 24
  6098  00245E  C002  F006         	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
  6099  002462  C003  F007         	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
  6100  002466  EF3E  F012         	goto	l2255
  6101  00246A                     l2251:
  6102  00246A  C006  FFD9         	movff	SPI1_WriteBlock@data,fsr2l
  6103  00246E  C007  FFDA         	movff	SPI1_WriteBlock@data+1,fsr2h
  6104  002472  50DF               	movf	indf2,w,c
  6105  002474  EC7E  F013         	call	_SPI1_ExchangeByte
  6106  002478  4A06               	infsnz	SPI1_WriteBlock@data^0,f,c
  6107  00247A  2A07               	incf	(SPI1_WriteBlock@data+1)^0,f,c
  6108  00247C                     l2255:
  6109  00247C  0604               	decf	SPI1_WriteBlock@blockSize^0,f,c
  6110  00247E  A0D8               	btfss	status,0,c
  6111  002480  0605               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
  6112  002482  2804               	incf	SPI1_WriteBlock@blockSize^0,w,c
  6113  002484  E106               	bnz	u981
  6114  002486  2805               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
  6115  002488  A4D8               	btfss	status,2,c
  6116  00248A  EF49  F012         	goto	u981
  6117  00248E  EF4B  F012         	goto	u980
  6118  002492                     u981:
  6119  002492  EF35  F012         	goto	l2251
  6120  002496                     u980:
  6121  002496  0012               	return		;funcret
  6122  002498                     __end_of_SPI1_WriteBlock:
  6123                           	callstack 0
  6124                           
  6125 ;; *************** function _SPI1_ExchangeByte *****************
  6126 ;; Defined at:
  6127 ;;		line 105 in file "mcc_generated_files/spi1.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  data            1    wreg     unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  data            1    0[COMRAM] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      unsigned char 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;Total ram usage:        1 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_SPI1_WriteBlock
  6151 ;;		_SPI1_ReadBlock
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text46
  6156  0026FC                     __ptext46:
  6157                           	callstack 0
  6158  0026FC                     _SPI1_ExchangeByte:
  6159                           	callstack 24
  6160                           
  6161                           ;incstack = 0
  6162                           ;SPI1_ExchangeByte@data stored from wreg
  6163  0026FC  6E01               	movwf	SPI1_ExchangeByte@data^0,c
  6164  0026FE  C001  FF91         	movff	SPI1_ExchangeByte@data,3985	;volatile
  6165  002702                     l308:
  6166  002702  010E               	movlb	14	; () banked
  6167  002704  A1C8               	btfss	200,0,b	;volatile
  6168  002706  EF87  F013         	goto	u931
  6169  00270A  EF89  F013         	goto	u930
  6170  00270E                     u931:
  6171  00270E  EF81  F013         	goto	l308
  6172  002712                     u930:
  6173  002712                     
  6174                           ; BSR set to: 14
  6175  002712  91C8               	bcf	200,0,b	;volatile
  6176  002714  5091               	movf	145,w,c	;volatile
  6177  002716                     
  6178                           ; BSR set to: 14
  6179  002716  0012               	return		;funcret
  6180  002718                     __end_of_SPI1_ExchangeByte:
  6181                           	callstack 0
  6182                           
  6183 ;; *************** function _SPI1_Close *****************
  6184 ;; Defined at:
  6185 ;;		line 100 in file "mcc_generated_files/spi1.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		None
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_expander_sendByte
  6209 ;;		_digipot_setWiper
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text47
  6214  0027CC                     __ptext47:
  6215                           	callstack 0
  6216  0027CC                     _SPI1_Close:
  6217                           	callstack 25
  6218  0027CC  9A95               	bcf	149,5,c	;volatile
  6219  0027CE  0012               	return		;funcret
  6220  0027D0                     __end_of_SPI1_Close:
  6221                           	callstack 0
  6222                           
  6223 ;; *************** function _DELAY_milliseconds *****************
  6224 ;; Defined at:
  6225 ;;		line 35 in file "mcc_generated_files/delay.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  milliseconds    2    0[COMRAM] unsigned short 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6243 ;;Total ram usage:        2 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_lcd_sendNibble
  6249 ;;		_lcd_sendByte
  6250 ;;		_lcd_returnHome
  6251 ;;		_lcd_clearDisplay
  6252 ;;		_lcd_setup
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text48
  6257  002648                     __ptext48:
  6258                           	callstack 0
  6259  002648                     _DELAY_milliseconds:
  6260                           	callstack 27
  6261  002648                     
  6262                           ;mcc_generated_files/delay.c: 36:     while(milliseconds--){
  6263  002648  EF2A  F013         	goto	l2439
  6264  00264C                     l2437:
  6265                           
  6266                           ;mcc_generated_files/delay.c: 37:         _delay((unsigned long)((1)*(1000000/4000.0)));
  6267  00264C  0E53               	movlw	83
  6268  00264E                     u1797:
  6269  00264E  2EE8               	decfsz	wreg,f,c
  6270  002650  D7FE               	bra	u1797
  6271  002652  F000               	nop	
  6272  002654                     l2439:
  6273                           
  6274                           ;mcc_generated_files/delay.c: 36:     while(milliseconds--){
  6275  002654  0601               	decf	DELAY_milliseconds@milliseconds^0,f,c
  6276  002656  A0D8               	btfss	status,0,c
  6277  002658  0602               	decf	(DELAY_milliseconds@milliseconds+1)^0,f,c
  6278  00265A  2801               	incf	DELAY_milliseconds@milliseconds^0,w,c
  6279  00265C  E106               	bnz	u1231
  6280  00265E  2802               	incf	(DELAY_milliseconds@milliseconds+1)^0,w,c
  6281  002660  A4D8               	btfss	status,2,c
  6282  002662  EF35  F013         	goto	u1231
  6283  002666  EF37  F013         	goto	u1230
  6284  00266A                     u1231:
  6285  00266A  EF26  F013         	goto	l2437
  6286  00266E                     u1230:
  6287  00266E  0012               	return		;funcret
  6288  002670                     __end_of_DELAY_milliseconds:
  6289                           	callstack 0
  6290                           
  6291                           	psect	text49
  6292  000000                     __ptext49:
  6293                           	callstack 0
  6294  000000                     
  6295                           	psect	rparam
  6296  0000                     
  6297                           	psect	idloc
  6298                           
  6299                           ;Config register IDLOC0 @ 0x200000
  6300                           ;	unspecified, using default values
  6301  200000                     	org	2097152
  6302  200000  FFFF               	dw	65535
  6303                           
  6304                           ;Config register IDLOC1 @ 0x200002
  6305                           ;	unspecified, using default values
  6306  200002                     	org	2097154
  6307  200002  FFFF               	dw	65535
  6308                           
  6309                           ;Config register IDLOC2 @ 0x200004
  6310                           ;	unspecified, using default values
  6311  200004                     	org	2097156
  6312  200004  FFFF               	dw	65535
  6313                           
  6314                           ;Config register IDLOC3 @ 0x200006
  6315                           ;	unspecified, using default values
  6316  200006                     	org	2097158
  6317  200006  FFFF               	dw	65535
  6318                           
  6319                           ;Config register IDLOC4 @ 0x200008
  6320                           ;	unspecified, using default values
  6321  200008                     	org	2097160
  6322  200008  FFFF               	dw	65535
  6323                           
  6324                           ;Config register IDLOC5 @ 0x20000A
  6325                           ;	unspecified, using default values
  6326  20000A                     	org	2097162
  6327  20000A  FFFF               	dw	65535
  6328                           
  6329                           ;Config register IDLOC6 @ 0x20000C
  6330                           ;	unspecified, using default values
  6331  20000C                     	org	2097164
  6332  20000C  FFFF               	dw	65535
  6333                           
  6334                           ;Config register IDLOC7 @ 0x20000E
  6335                           ;	unspecified, using default values
  6336  20000E                     	org	2097166
  6337  20000E  FFFF               	dw	65535
  6338                           
  6339                           ;Config register IDLOC8 @ 0x200010
  6340                           ;	unspecified, using default values
  6341  200010                     	org	2097168
  6342  200010  FFFF               	dw	65535
  6343                           
  6344                           ;Config register IDLOC9 @ 0x200012
  6345                           ;	unspecified, using default values
  6346  200012                     	org	2097170
  6347  200012  FFFF               	dw	65535
  6348                           
  6349                           ;Config register IDLOC10 @ 0x200014
  6350                           ;	unspecified, using default values
  6351  200014                     	org	2097172
  6352  200014  FFFF               	dw	65535
  6353                           
  6354                           ;Config register IDLOC11 @ 0x200016
  6355                           ;	unspecified, using default values
  6356  200016                     	org	2097174
  6357  200016  FFFF               	dw	65535
  6358                           
  6359                           ;Config register IDLOC12 @ 0x200018
  6360                           ;	unspecified, using default values
  6361  200018                     	org	2097176
  6362  200018  FFFF               	dw	65535
  6363                           
  6364                           ;Config register IDLOC13 @ 0x20001A
  6365                           ;	unspecified, using default values
  6366  20001A                     	org	2097178
  6367  20001A  FFFF               	dw	65535
  6368                           
  6369                           ;Config register IDLOC14 @ 0x20001C
  6370                           ;	unspecified, using default values
  6371  20001C                     	org	2097180
  6372  20001C  FFFF               	dw	65535
  6373                           
  6374                           ;Config register IDLOC15 @ 0x20001E
  6375                           ;	unspecified, using default values
  6376  20001E                     	org	2097182
  6377  20001E  FFFF               	dw	65535
  6378                           
  6379                           ;Config register IDLOC16 @ 0x200020
  6380                           ;	unspecified, using default values
  6381  200020                     	org	2097184
  6382  200020  FFFF               	dw	65535
  6383                           
  6384                           ;Config register IDLOC17 @ 0x200022
  6385                           ;	unspecified, using default values
  6386  200022                     	org	2097186
  6387  200022  FFFF               	dw	65535
  6388                           
  6389                           ;Config register IDLOC18 @ 0x200024
  6390                           ;	unspecified, using default values
  6391  200024                     	org	2097188
  6392  200024  FFFF               	dw	65535
  6393                           
  6394                           ;Config register IDLOC19 @ 0x200026
  6395                           ;	unspecified, using default values
  6396  200026                     	org	2097190
  6397  200026  FFFF               	dw	65535
  6398                           
  6399                           ;Config register IDLOC20 @ 0x200028
  6400                           ;	unspecified, using default values
  6401  200028                     	org	2097192
  6402  200028  FFFF               	dw	65535
  6403                           
  6404                           ;Config register IDLOC21 @ 0x20002A
  6405                           ;	unspecified, using default values
  6406  20002A                     	org	2097194
  6407  20002A  FFFF               	dw	65535
  6408                           
  6409                           ;Config register IDLOC22 @ 0x20002C
  6410                           ;	unspecified, using default values
  6411  20002C                     	org	2097196
  6412  20002C  FFFF               	dw	65535
  6413                           
  6414                           ;Config register IDLOC23 @ 0x20002E
  6415                           ;	unspecified, using default values
  6416  20002E                     	org	2097198
  6417  20002E  FFFF               	dw	65535
  6418                           
  6419                           ;Config register IDLOC24 @ 0x200030
  6420                           ;	unspecified, using default values
  6421  200030                     	org	2097200
  6422  200030  FFFF               	dw	65535
  6423                           
  6424                           ;Config register IDLOC25 @ 0x200032
  6425                           ;	unspecified, using default values
  6426  200032                     	org	2097202
  6427  200032  FFFF               	dw	65535
  6428                           
  6429                           ;Config register IDLOC26 @ 0x200034
  6430                           ;	unspecified, using default values
  6431  200034                     	org	2097204
  6432  200034  FFFF               	dw	65535
  6433                           
  6434                           ;Config register IDLOC27 @ 0x200036
  6435                           ;	unspecified, using default values
  6436  200036                     	org	2097206
  6437  200036  FFFF               	dw	65535
  6438                           
  6439                           ;Config register IDLOC28 @ 0x200038
  6440                           ;	unspecified, using default values
  6441  200038                     	org	2097208
  6442  200038  FFFF               	dw	65535
  6443                           
  6444                           ;Config register IDLOC29 @ 0x20003A
  6445                           ;	unspecified, using default values
  6446  20003A                     	org	2097210
  6447  20003A  FFFF               	dw	65535
  6448                           
  6449                           ;Config register IDLOC30 @ 0x20003C
  6450                           ;	unspecified, using default values
  6451  20003C                     	org	2097212
  6452  20003C  FFFF               	dw	65535
  6453                           
  6454                           ;Config register IDLOC31 @ 0x20003E
  6455                           ;	unspecified, using default values
  6456  20003E                     	org	2097214
  6457  20003E  FFFF               	dw	65535
  6458                           
  6459                           ;Config register IDLOC32 @ 0x200040
  6460                           ;	unspecified, using default values
  6461  200040                     	org	2097216
  6462  200040  FFFF               	dw	65535
  6463                           
  6464                           ;Config register IDLOC33 @ 0x200042
  6465                           ;	unspecified, using default values
  6466  200042                     	org	2097218
  6467  200042  FFFF               	dw	65535
  6468                           
  6469                           ;Config register IDLOC34 @ 0x200044
  6470                           ;	unspecified, using default values
  6471  200044                     	org	2097220
  6472  200044  FFFF               	dw	65535
  6473                           
  6474                           ;Config register IDLOC35 @ 0x200046
  6475                           ;	unspecified, using default values
  6476  200046                     	org	2097222
  6477  200046  FFFF               	dw	65535
  6478                           
  6479                           ;Config register IDLOC36 @ 0x200048
  6480                           ;	unspecified, using default values
  6481  200048                     	org	2097224
  6482  200048  FFFF               	dw	65535
  6483                           
  6484                           ;Config register IDLOC37 @ 0x20004A
  6485                           ;	unspecified, using default values
  6486  20004A                     	org	2097226
  6487  20004A  FFFF               	dw	65535
  6488                           
  6489                           ;Config register IDLOC38 @ 0x20004C
  6490                           ;	unspecified, using default values
  6491  20004C                     	org	2097228
  6492  20004C  FFFF               	dw	65535
  6493                           
  6494                           ;Config register IDLOC39 @ 0x20004E
  6495                           ;	unspecified, using default values
  6496  20004E                     	org	2097230
  6497  20004E  FFFF               	dw	65535
  6498                           
  6499                           ;Config register IDLOC40 @ 0x200050
  6500                           ;	unspecified, using default values
  6501  200050                     	org	2097232
  6502  200050  FFFF               	dw	65535
  6503                           
  6504                           ;Config register IDLOC41 @ 0x200052
  6505                           ;	unspecified, using default values
  6506  200052                     	org	2097234
  6507  200052  FFFF               	dw	65535
  6508                           
  6509                           ;Config register IDLOC42 @ 0x200054
  6510                           ;	unspecified, using default values
  6511  200054                     	org	2097236
  6512  200054  FFFF               	dw	65535
  6513                           
  6514                           ;Config register IDLOC43 @ 0x200056
  6515                           ;	unspecified, using default values
  6516  200056                     	org	2097238
  6517  200056  FFFF               	dw	65535
  6518                           
  6519                           ;Config register IDLOC44 @ 0x200058
  6520                           ;	unspecified, using default values
  6521  200058                     	org	2097240
  6522  200058  FFFF               	dw	65535
  6523                           
  6524                           ;Config register IDLOC45 @ 0x20005A
  6525                           ;	unspecified, using default values
  6526  20005A                     	org	2097242
  6527  20005A  FFFF               	dw	65535
  6528                           
  6529                           ;Config register IDLOC46 @ 0x20005C
  6530                           ;	unspecified, using default values
  6531  20005C                     	org	2097244
  6532  20005C  FFFF               	dw	65535
  6533                           
  6534                           ;Config register IDLOC47 @ 0x20005E
  6535                           ;	unspecified, using default values
  6536  20005E                     	org	2097246
  6537  20005E  FFFF               	dw	65535
  6538                           
  6539                           ;Config register IDLOC48 @ 0x200060
  6540                           ;	unspecified, using default values
  6541  200060                     	org	2097248
  6542  200060  FFFF               	dw	65535
  6543                           
  6544                           ;Config register IDLOC49 @ 0x200062
  6545                           ;	unspecified, using default values
  6546  200062                     	org	2097250
  6547  200062  FFFF               	dw	65535
  6548                           
  6549                           ;Config register IDLOC50 @ 0x200064
  6550                           ;	unspecified, using default values
  6551  200064                     	org	2097252
  6552  200064  FFFF               	dw	65535
  6553                           
  6554                           ;Config register IDLOC51 @ 0x200066
  6555                           ;	unspecified, using default values
  6556  200066                     	org	2097254
  6557  200066  FFFF               	dw	65535
  6558                           
  6559                           ;Config register IDLOC52 @ 0x200068
  6560                           ;	unspecified, using default values
  6561  200068                     	org	2097256
  6562  200068  FFFF               	dw	65535
  6563                           
  6564                           ;Config register IDLOC53 @ 0x20006A
  6565                           ;	unspecified, using default values
  6566  20006A                     	org	2097258
  6567  20006A  FFFF               	dw	65535
  6568                           
  6569                           ;Config register IDLOC54 @ 0x20006C
  6570                           ;	unspecified, using default values
  6571  20006C                     	org	2097260
  6572  20006C  FFFF               	dw	65535
  6573                           
  6574                           ;Config register IDLOC55 @ 0x20006E
  6575                           ;	unspecified, using default values
  6576  20006E                     	org	2097262
  6577  20006E  FFFF               	dw	65535
  6578                           
  6579                           ;Config register IDLOC56 @ 0x200070
  6580                           ;	unspecified, using default values
  6581  200070                     	org	2097264
  6582  200070  FFFF               	dw	65535
  6583                           
  6584                           ;Config register IDLOC57 @ 0x200072
  6585                           ;	unspecified, using default values
  6586  200072                     	org	2097266
  6587  200072  FFFF               	dw	65535
  6588                           
  6589                           ;Config register IDLOC58 @ 0x200074
  6590                           ;	unspecified, using default values
  6591  200074                     	org	2097268
  6592  200074  FFFF               	dw	65535
  6593                           
  6594                           ;Config register IDLOC59 @ 0x200076
  6595                           ;	unspecified, using default values
  6596  200076                     	org	2097270
  6597  200076  FFFF               	dw	65535
  6598                           
  6599                           ;Config register IDLOC60 @ 0x200078
  6600                           ;	unspecified, using default values
  6601  200078                     	org	2097272
  6602  200078  FFFF               	dw	65535
  6603                           
  6604                           ;Config register IDLOC61 @ 0x20007A
  6605                           ;	unspecified, using default values
  6606  20007A                     	org	2097274
  6607  20007A  FFFF               	dw	65535
  6608                           
  6609                           ;Config register IDLOC62 @ 0x20007C
  6610                           ;	unspecified, using default values
  6611  20007C                     	org	2097276
  6612  20007C  FFFF               	dw	65535
  6613                           
  6614                           ;Config register IDLOC63 @ 0x20007E
  6615                           ;	unspecified, using default values
  6616  20007E                     	org	2097278
  6617  20007E  FFFF               	dw	65535
  6618                           
  6619                           ;Config register IDLOC64 @ 0x200080
  6620                           ;	unspecified, using default values
  6621  200080                     	org	2097280
  6622  200080  FFFF               	dw	65535
  6623                           
  6624                           ;Config register IDLOC65 @ 0x200082
  6625                           ;	unspecified, using default values
  6626  200082                     	org	2097282
  6627  200082  FFFF               	dw	65535
  6628                           
  6629                           ;Config register IDLOC66 @ 0x200084
  6630                           ;	unspecified, using default values
  6631  200084                     	org	2097284
  6632  200084  FFFF               	dw	65535
  6633                           
  6634                           ;Config register IDLOC67 @ 0x200086
  6635                           ;	unspecified, using default values
  6636  200086                     	org	2097286
  6637  200086  FFFF               	dw	65535
  6638                           
  6639                           ;Config register IDLOC68 @ 0x200088
  6640                           ;	unspecified, using default values
  6641  200088                     	org	2097288
  6642  200088  FFFF               	dw	65535
  6643                           
  6644                           ;Config register IDLOC69 @ 0x20008A
  6645                           ;	unspecified, using default values
  6646  20008A                     	org	2097290
  6647  20008A  FFFF               	dw	65535
  6648                           
  6649                           ;Config register IDLOC70 @ 0x20008C
  6650                           ;	unspecified, using default values
  6651  20008C                     	org	2097292
  6652  20008C  FFFF               	dw	65535
  6653                           
  6654                           ;Config register IDLOC71 @ 0x20008E
  6655                           ;	unspecified, using default values
  6656  20008E                     	org	2097294
  6657  20008E  FFFF               	dw	65535
  6658                           
  6659                           ;Config register IDLOC72 @ 0x200090
  6660                           ;	unspecified, using default values
  6661  200090                     	org	2097296
  6662  200090  FFFF               	dw	65535
  6663                           
  6664                           ;Config register IDLOC73 @ 0x200092
  6665                           ;	unspecified, using default values
  6666  200092                     	org	2097298
  6667  200092  FFFF               	dw	65535
  6668                           
  6669                           ;Config register IDLOC74 @ 0x200094
  6670                           ;	unspecified, using default values
  6671  200094                     	org	2097300
  6672  200094  FFFF               	dw	65535
  6673                           
  6674                           ;Config register IDLOC75 @ 0x200096
  6675                           ;	unspecified, using default values
  6676  200096                     	org	2097302
  6677  200096  FFFF               	dw	65535
  6678                           
  6679                           ;Config register IDLOC76 @ 0x200098
  6680                           ;	unspecified, using default values
  6681  200098                     	org	2097304
  6682  200098  FFFF               	dw	65535
  6683                           
  6684                           ;Config register IDLOC77 @ 0x20009A
  6685                           ;	unspecified, using default values
  6686  20009A                     	org	2097306
  6687  20009A  FFFF               	dw	65535
  6688                           
  6689                           ;Config register IDLOC78 @ 0x20009C
  6690                           ;	unspecified, using default values
  6691  20009C                     	org	2097308
  6692  20009C  FFFF               	dw	65535
  6693                           
  6694                           ;Config register IDLOC79 @ 0x20009E
  6695                           ;	unspecified, using default values
  6696  20009E                     	org	2097310
  6697  20009E  FFFF               	dw	65535
  6698                           
  6699                           ;Config register IDLOC80 @ 0x2000A0
  6700                           ;	unspecified, using default values
  6701  2000A0                     	org	2097312
  6702  2000A0  FFFF               	dw	65535
  6703                           
  6704                           ;Config register IDLOC81 @ 0x2000A2
  6705                           ;	unspecified, using default values
  6706  2000A2                     	org	2097314
  6707  2000A2  FFFF               	dw	65535
  6708                           
  6709                           ;Config register IDLOC82 @ 0x2000A4
  6710                           ;	unspecified, using default values
  6711  2000A4                     	org	2097316
  6712  2000A4  FFFF               	dw	65535
  6713                           
  6714                           ;Config register IDLOC83 @ 0x2000A6
  6715                           ;	unspecified, using default values
  6716  2000A6                     	org	2097318
  6717  2000A6  FFFF               	dw	65535
  6718                           
  6719                           ;Config register IDLOC84 @ 0x2000A8
  6720                           ;	unspecified, using default values
  6721  2000A8                     	org	2097320
  6722  2000A8  FFFF               	dw	65535
  6723                           
  6724                           ;Config register IDLOC85 @ 0x2000AA
  6725                           ;	unspecified, using default values
  6726  2000AA                     	org	2097322
  6727  2000AA  FFFF               	dw	65535
  6728                           
  6729                           ;Config register IDLOC86 @ 0x2000AC
  6730                           ;	unspecified, using default values
  6731  2000AC                     	org	2097324
  6732  2000AC  FFFF               	dw	65535
  6733                           
  6734                           ;Config register IDLOC87 @ 0x2000AE
  6735                           ;	unspecified, using default values
  6736  2000AE                     	org	2097326
  6737  2000AE  FFFF               	dw	65535
  6738                           
  6739                           ;Config register IDLOC88 @ 0x2000B0
  6740                           ;	unspecified, using default values
  6741  2000B0                     	org	2097328
  6742  2000B0  FFFF               	dw	65535
  6743                           
  6744                           ;Config register IDLOC89 @ 0x2000B2
  6745                           ;	unspecified, using default values
  6746  2000B2                     	org	2097330
  6747  2000B2  FFFF               	dw	65535
  6748                           
  6749                           ;Config register IDLOC90 @ 0x2000B4
  6750                           ;	unspecified, using default values
  6751  2000B4                     	org	2097332
  6752  2000B4  FFFF               	dw	65535
  6753                           
  6754                           ;Config register IDLOC91 @ 0x2000B6
  6755                           ;	unspecified, using default values
  6756  2000B6                     	org	2097334
  6757  2000B6  FFFF               	dw	65535
  6758                           
  6759                           ;Config register IDLOC92 @ 0x2000B8
  6760                           ;	unspecified, using default values
  6761  2000B8                     	org	2097336
  6762  2000B8  FFFF               	dw	65535
  6763                           
  6764                           ;Config register IDLOC93 @ 0x2000BA
  6765                           ;	unspecified, using default values
  6766  2000BA                     	org	2097338
  6767  2000BA  FFFF               	dw	65535
  6768                           
  6769                           ;Config register IDLOC94 @ 0x2000BC
  6770                           ;	unspecified, using default values
  6771  2000BC                     	org	2097340
  6772  2000BC  FFFF               	dw	65535
  6773                           
  6774                           ;Config register IDLOC95 @ 0x2000BE
  6775                           ;	unspecified, using default values
  6776  2000BE                     	org	2097342
  6777  2000BE  FFFF               	dw	65535
  6778                           
  6779                           ;Config register IDLOC96 @ 0x2000C0
  6780                           ;	unspecified, using default values
  6781  2000C0                     	org	2097344
  6782  2000C0  FFFF               	dw	65535
  6783                           
  6784                           ;Config register IDLOC97 @ 0x2000C2
  6785                           ;	unspecified, using default values
  6786  2000C2                     	org	2097346
  6787  2000C2  FFFF               	dw	65535
  6788                           
  6789                           ;Config register IDLOC98 @ 0x2000C4
  6790                           ;	unspecified, using default values
  6791  2000C4                     	org	2097348
  6792  2000C4  FFFF               	dw	65535
  6793                           
  6794                           ;Config register IDLOC99 @ 0x2000C6
  6795                           ;	unspecified, using default values
  6796  2000C6                     	org	2097350
  6797  2000C6  FFFF               	dw	65535
  6798                           
  6799                           ;Config register IDLOC100 @ 0x2000C8
  6800                           ;	unspecified, using default values
  6801  2000C8                     	org	2097352
  6802  2000C8  FFFF               	dw	65535
  6803                           
  6804                           ;Config register IDLOC101 @ 0x2000CA
  6805                           ;	unspecified, using default values
  6806  2000CA                     	org	2097354
  6807  2000CA  FFFF               	dw	65535
  6808                           
  6809                           ;Config register IDLOC102 @ 0x2000CC
  6810                           ;	unspecified, using default values
  6811  2000CC                     	org	2097356
  6812  2000CC  FFFF               	dw	65535
  6813                           
  6814                           ;Config register IDLOC103 @ 0x2000CE
  6815                           ;	unspecified, using default values
  6816  2000CE                     	org	2097358
  6817  2000CE  FFFF               	dw	65535
  6818                           
  6819                           ;Config register IDLOC104 @ 0x2000D0
  6820                           ;	unspecified, using default values
  6821  2000D0                     	org	2097360
  6822  2000D0  FFFF               	dw	65535
  6823                           
  6824                           ;Config register IDLOC105 @ 0x2000D2
  6825                           ;	unspecified, using default values
  6826  2000D2                     	org	2097362
  6827  2000D2  FFFF               	dw	65535
  6828                           
  6829                           ;Config register IDLOC106 @ 0x2000D4
  6830                           ;	unspecified, using default values
  6831  2000D4                     	org	2097364
  6832  2000D4  FFFF               	dw	65535
  6833                           
  6834                           ;Config register IDLOC107 @ 0x2000D6
  6835                           ;	unspecified, using default values
  6836  2000D6                     	org	2097366
  6837  2000D6  FFFF               	dw	65535
  6838                           
  6839                           ;Config register IDLOC108 @ 0x2000D8
  6840                           ;	unspecified, using default values
  6841  2000D8                     	org	2097368
  6842  2000D8  FFFF               	dw	65535
  6843                           
  6844                           ;Config register IDLOC109 @ 0x2000DA
  6845                           ;	unspecified, using default values
  6846  2000DA                     	org	2097370
  6847  2000DA  FFFF               	dw	65535
  6848                           
  6849                           ;Config register IDLOC110 @ 0x2000DC
  6850                           ;	unspecified, using default values
  6851  2000DC                     	org	2097372
  6852  2000DC  FFFF               	dw	65535
  6853                           
  6854                           ;Config register IDLOC111 @ 0x2000DE
  6855                           ;	unspecified, using default values
  6856  2000DE                     	org	2097374
  6857  2000DE  FFFF               	dw	65535
  6858                           
  6859                           ;Config register IDLOC112 @ 0x2000E0
  6860                           ;	unspecified, using default values
  6861  2000E0                     	org	2097376
  6862  2000E0  FFFF               	dw	65535
  6863                           
  6864                           ;Config register IDLOC113 @ 0x2000E2
  6865                           ;	unspecified, using default values
  6866  2000E2                     	org	2097378
  6867  2000E2  FFFF               	dw	65535
  6868                           
  6869                           ;Config register IDLOC114 @ 0x2000E4
  6870                           ;	unspecified, using default values
  6871  2000E4                     	org	2097380
  6872  2000E4  FFFF               	dw	65535
  6873                           
  6874                           ;Config register IDLOC115 @ 0x2000E6
  6875                           ;	unspecified, using default values
  6876  2000E6                     	org	2097382
  6877  2000E6  FFFF               	dw	65535
  6878                           
  6879                           ;Config register IDLOC116 @ 0x2000E8
  6880                           ;	unspecified, using default values
  6881  2000E8                     	org	2097384
  6882  2000E8  FFFF               	dw	65535
  6883                           
  6884                           ;Config register IDLOC117 @ 0x2000EA
  6885                           ;	unspecified, using default values
  6886  2000EA                     	org	2097386
  6887  2000EA  FFFF               	dw	65535
  6888                           
  6889                           ;Config register IDLOC118 @ 0x2000EC
  6890                           ;	unspecified, using default values
  6891  2000EC                     	org	2097388
  6892  2000EC  FFFF               	dw	65535
  6893                           
  6894                           ;Config register IDLOC119 @ 0x2000EE
  6895                           ;	unspecified, using default values
  6896  2000EE                     	org	2097390
  6897  2000EE  FFFF               	dw	65535
  6898                           
  6899                           ;Config register IDLOC120 @ 0x2000F0
  6900                           ;	unspecified, using default values
  6901  2000F0                     	org	2097392
  6902  2000F0  FFFF               	dw	65535
  6903                           
  6904                           ;Config register IDLOC121 @ 0x2000F2
  6905                           ;	unspecified, using default values
  6906  2000F2                     	org	2097394
  6907  2000F2  FFFF               	dw	65535
  6908                           
  6909                           ;Config register IDLOC122 @ 0x2000F4
  6910                           ;	unspecified, using default values
  6911  2000F4                     	org	2097396
  6912  2000F4  FFFF               	dw	65535
  6913                           
  6914                           ;Config register IDLOC123 @ 0x2000F6
  6915                           ;	unspecified, using default values
  6916  2000F6                     	org	2097398
  6917  2000F6  FFFF               	dw	65535
  6918                           
  6919                           ;Config register IDLOC124 @ 0x2000F8
  6920                           ;	unspecified, using default values
  6921  2000F8                     	org	2097400
  6922  2000F8  FFFF               	dw	65535
  6923                           
  6924                           ;Config register IDLOC125 @ 0x2000FA
  6925                           ;	unspecified, using default values
  6926  2000FA                     	org	2097402
  6927  2000FA  FFFF               	dw	65535
  6928                           
  6929                           ;Config register IDLOC126 @ 0x2000FC
  6930                           ;	unspecified, using default values
  6931  2000FC                     	org	2097404
  6932  2000FC  FFFF               	dw	65535
  6933                           
  6934                           ;Config register IDLOC127 @ 0x2000FE
  6935                           ;	unspecified, using default values
  6936  2000FE                     	org	2097406
  6937  2000FE  FFFF               	dw	65535
  6938                           
  6939                           	psect	config
  6940                           
  6941                           ;Config register CONFIG1L @ 0x300000
  6942                           ;	External Oscillator mode Selection bits
  6943                           ;	FEXTOSC = OFF, Oscillator not enabled
  6944                           ;	Power-up default value for COSC bits
  6945                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  6946  300000                     	org	3145728
  6947  300000  EC                 	db	236
  6948                           
  6949                           ;Config register CONFIG1H @ 0x300001
  6950                           ;	Clock Out Enable bit
  6951                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  6952                           ;	Clock Switch Enable bit
  6953                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6954                           ;	Fail-Safe Clock Monitor Enable bit
  6955                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  6956  300001                     	org	3145729
  6957  300001  FF                 	db	255
  6958                           
  6959                           ;Config register CONFIG2L @ 0x300002
  6960                           ;	Master Clear Enable bit
  6961                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  6962                           ;	Power-up Timer Enable bit
  6963                           ;	PWRTE = OFF, Power up timer disabled
  6964                           ;	Low-power BOR enable bit
  6965                           ;	LPBOREN = OFF, Low power BOR is disabled
  6966                           ;	Brown-out Reset Enable bits
  6967                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  6968  300002                     	org	3145730
  6969  300002  FF                 	db	255
  6970                           
  6971                           ;Config register CONFIG2H @ 0x300003
  6972                           ;	Brown Out Reset Voltage selection bits
  6973                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  6974                           ;	ZCD Disable bit
  6975                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  6976                           ;	PPSLOCK bit One-Way Set Enable bit
  6977                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  6978                           ;	Stack Full/Underflow Reset Enable bit
  6979                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6980                           ;	Extended Instruction Set Enable bit
  6981                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  6982  300003                     	org	3145731
  6983  300003  FF                 	db	255
  6984                           
  6985                           ;Config register CONFIG3L @ 0x300004
  6986                           ;	WDT Period Select bits
  6987                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6988                           ;	WDT operating mode
  6989                           ;	WDTE = OFF, WDT Disabled
  6990  300004                     	org	3145732
  6991  300004  9F                 	db	159
  6992                           
  6993                           ;Config register CONFIG3H @ 0x300005
  6994                           ;	WDT Window Select bits
  6995                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  6996                           ;	WDT input clock selector
  6997                           ;	WDTCCS = SC, Software Control
  6998  300005                     	org	3145733
  6999  300005  FF                 	db	255
  7000                           
  7001                           ;Config register CONFIG4L @ 0x300006
  7002                           ;	Write Protection Block 0
  7003                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7004                           ;	Write Protection Block 1
  7005                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7006                           ;	Write Protection Block 2
  7007                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7008                           ;	Write Protection Block 3
  7009                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7010                           ;	Write Protection Block 4
  7011                           ;	WRT4 = 0x1, unprogrammed default
  7012                           ;	Write Protection Block 5
  7013                           ;	WRT5 = 0x1, unprogrammed default
  7014                           ;	Write Protection Block 6
  7015                           ;	WRT6 = 0x1, unprogrammed default
  7016                           ;	Write Protection Block 7
  7017                           ;	WRT7 = 0x1, unprogrammed default
  7018  300006                     	org	3145734
  7019  300006  FF                 	db	255
  7020                           
  7021                           ;Config register CONFIG4H @ 0x300007
  7022                           ;	Configuration Register Write Protection bit
  7023                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  7024                           ;	Boot Block Write Protection bit
  7025                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7026                           ;	Data EEPROM Write Protection bit
  7027                           ;	WRTD = OFF, Data EEPROM not write-protected
  7028                           ;	Scanner Enable bit
  7029                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  7030                           ;	Low Voltage Programming Enable bit
  7031                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7032  300007                     	org	3145735
  7033  300007  FF                 	db	255
  7034                           
  7035                           ;Config register CONFIG5L @ 0x300008
  7036                           ;	UserNVM Program Memory Code Protection bit
  7037                           ;	CP = OFF, UserNVM code protection disabled
  7038                           ;	DataNVM Memory Code Protection bit
  7039                           ;	CPD = OFF, DataNVM code protection disabled
  7040  300008                     	org	3145736
  7041  300008  FF                 	db	255
  7042                           
  7043                           ;Config register CONFIG5H @ 0x300009
  7044                           ;	unspecified, using default values
  7045  300009                     	org	3145737
  7046  300009  FF                 	db	255
  7047                           
  7048                           ;Config register CONFIG6L @ 0x30000A
  7049                           ;	Table Read Protection Block 0
  7050                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7051                           ;	Table Read Protection Block 1
  7052                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7053                           ;	Table Read Protection Block 2
  7054                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7055                           ;	Table Read Protection Block 3
  7056                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7057                           ;	Table Read Protection Block 4
  7058                           ;	EBTR4 = 0x1, unprogrammed default
  7059                           ;	Table Read Protection Block 5
  7060                           ;	EBTR5 = 0x1, unprogrammed default
  7061                           ;	Table Read Protection Block 6
  7062                           ;	EBTR6 = 0x1, unprogrammed default
  7063                           ;	Table Read Protection Block 7
  7064                           ;	EBTR7 = 0x1, unprogrammed default
  7065  30000A                     	org	3145738
  7066  30000A  FF                 	db	255
  7067                           
  7068                           ;Config register CONFIG6H @ 0x30000B
  7069                           ;	Boot Block Table Read Protection bit
  7070                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7071  30000B                     	org	3145739
  7072  30000B  FF                 	db	255
  7073                           tosu	equ	0xFFF
  7074                           tosh	equ	0xFFE
  7075                           tosl	equ	0xFFD
  7076                           stkptr	equ	0xFFC
  7077                           pclatu	equ	0xFFB
  7078                           pclath	equ	0xFFA
  7079                           pcl	equ	0xFF9
  7080                           tblptru	equ	0xFF8
  7081                           tblptrh	equ	0xFF7
  7082                           tblptrl	equ	0xFF6
  7083                           tablat	equ	0xFF5
  7084                           prodh	equ	0xFF4
  7085                           prodl	equ	0xFF3
  7086                           indf0	equ	0xFEF
  7087                           postinc0	equ	0xFEE
  7088                           postdec0	equ	0xFED
  7089                           preinc0	equ	0xFEC
  7090                           plusw0	equ	0xFEB
  7091                           fsr0h	equ	0xFEA
  7092                           fsr0l	equ	0xFE9
  7093                           wreg	equ	0xFE8
  7094                           indf1	equ	0xFE7
  7095                           postinc1	equ	0xFE6
  7096                           postdec1	equ	0xFE5
  7097                           preinc1	equ	0xFE4
  7098                           plusw1	equ	0xFE3
  7099                           fsr1h	equ	0xFE2
  7100                           fsr1l	equ	0xFE1
  7101                           bsr	equ	0xFE0
  7102                           indf2	equ	0xFDF
  7103                           postinc2	equ	0xFDE
  7104                           postdec2	equ	0xFDD
  7105                           preinc2	equ	0xFDC
  7106                           plusw2	equ	0xFDB
  7107                           fsr2h	equ	0xFDA
  7108                           fsr2l	equ	0xFD9
  7109                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    38
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     31      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    S742$3$0	PTR void  size(2) Largest target is 0

    S742$4$0	PTR void  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 

    S742$5$0	PTR void  size(2) Largest target is 0

    Absolute function$0	PTR FTN()void  size(3) Largest target is 0

    spi1_interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> GDapplication@lcdDataBuffer(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> GDapplication@lcdDataBuffer(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1294_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> GDapplication@lcdDataBuffer(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> GDapplication@lcdDataBuffer(BANK0[8]), 

    User_lcd_writeString@string	PTR unsigned char  size(2) Largest target is 17
		 -> GDapplication@lcdDataBuffer(BANK0[8]), STR_2(CODE[17]), STR_1(CODE[17]), 

    S742$spiISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    S742$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Absolute function(), 

    S742$readByte	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ReadByte(), 

    S742$writeByte	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_WriteByte(), 

    S742$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S742$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S742$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S742$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S742$spiOpen	PTR FTN()_Bool  size(3) Largest target is 1
		 -> LCD_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(3) Largest target is 1
		 -> LCD_open(), 

    S742$spiClose	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_GDapplication
    _lcd_setup->_lcd_sendByte
    _lcd_sendNibble->_expander_setOutput
    _expander_setup->_expander_sendByte
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _ApplicationInit->_User_lcd_writeString
    _lcd_clearDisplay->_lcd_sendByte
    _User_lcd_writeString->_lcd_setAddr
    _lcd_writeChar->_lcd_sendByte
    _lcd_setAddr->_lcd_sendByte
    _lcd_returnHome->_lcd_sendByte
    _lcd_sendByte->_expander_setOutput
    _expander_setOutput->_expander_sendByte
    _expander_sendByte->_SPI1_WriteBlock
    _LCD_open->_SPI1_Open
    _SPI1_WriteBlock->_SPI1_ExchangeByte

Critical Paths under _main in BANK0

    _main->_GDapplication
    _GDapplication->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   52574
                    _ApplicationInit
                      _GDapplication
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   14723
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _CLC5_Initialize
                    _CLC6_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                          _lcd_setup
 ---------------------------------------------------------------------------------
 (2) _lcd_setup                                            0     0      0   14723
                 _DELAY_milliseconds
                 _expander_setOutput
                     _expander_setup
                   _lcd_clearDisplay
                     _lcd_returnHome
                       _lcd_sendByte
                     _lcd_sendNibble
 ---------------------------------------------------------------------------------
 (3) _lcd_sendNibble                                       4     3      1    2219
                                             13 COMRAM     4     3      1
                 _DELAY_milliseconds
                 _expander_setOutput
 ---------------------------------------------------------------------------------
 (3) _expander_setup                                       0     0      0     772
                  _expander_sendByte
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GDapplication                                       12    12      0   23978
                                             94 COMRAM     1     1      0
                                             20 BANK0     11    11      0
               _User_lcd_writeString
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   11923
                                              0 BANK0     20    10     10
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11264
                                             86 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   10888
                                             63 COMRAM    23    17      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5270
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1442
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     601
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ApplicationInit                                      0     0      0   13873
               _User_lcd_writeString
                   _lcd_clearDisplay
 ---------------------------------------------------------------------------------
 (3) _lcd_clearDisplay                                     0     0      0    3646
                 _DELAY_milliseconds
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (2) _User_lcd_writeString                                 7     3      4   10227
                                             22 COMRAM     7     3      4
                     _lcd_returnHome
                        _lcd_setAddr
                      _lcd_writeChar
 ---------------------------------------------------------------------------------
 (3) _lcd_writeChar                                        1     1      0    2658
                                             20 COMRAM     1     1      0
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_setAddr                                          2     1      1    2832
                                             20 COMRAM     2     1      1
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_returnHome                                       0     0      0    3646
                 _DELAY_milliseconds
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_sendByte                                         7     6      1    2636
                                             13 COMRAM     7     6      1
                 _DELAY_milliseconds
                 _expander_setOutput
 ---------------------------------------------------------------------------------
 (4) _expander_setOutput                                   1     1      0     794
                                             12 COMRAM     1     1      0
                  _expander_sendByte
 ---------------------------------------------------------------------------------
 (5) _expander_sendByte                                    5     4      1     772
                                              7 COMRAM     5     4      1
                         _SPI1_Close
                    _SPI1_WriteBlock
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (6) _spi_master_open                                      3     3      0     110
                                              2 COMRAM     3     3      0
                           _LCD_open
 ---------------------------------------------------------------------------------
 (7) _LCD_open                                             0     0      0      88
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (8) _SPI1_Open                                            2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _SPI1_WriteBlock                                      6     2      4     394
                                              1 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SPI1_ExchangeByte                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DELAY_milliseconds                                   2     0      2    1010
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApplicationInit
     _User_lcd_writeString
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_setAddr
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_writeChar
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
     _lcd_clearDisplay
       _DELAY_milliseconds
       _lcd_sendByte
         _DELAY_milliseconds
         _expander_setOutput
           _expander_sendByte
             _SPI1_Close
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
             _spi_master_open
               _LCD_open
                 _SPI1_Open
   _GDapplication
     _User_lcd_writeString
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_setAddr
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_writeChar
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
     ___lwdiv
     ___lwmod
     ___wmul
     _sprintf
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _CLC5_Initialize
     _CLC6_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _lcd_setup
       _DELAY_milliseconds
       _expander_setOutput
         _expander_sendByte
           _SPI1_Close
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _spi_master_open
             _LCD_open
               _SPI1_Open
       _expander_setup
         _expander_sendByte
           _SPI1_Close
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _spi_master_open
             _LCD_open
               _SPI1_Open
       _lcd_clearDisplay
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_sendByte
         _DELAY_milliseconds
         _expander_setOutput
           _expander_sendByte
             _SPI1_Close
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
             _spi_master_open
               _LCD_open
                 _SPI1_Open
       _lcd_sendNibble
         _DELAY_milliseconds
         _expander_setOutput
           _expander_sendByte
             _SPI1_Close
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
             _spi_master_open
               _LCD_open
                 _SPI1_Open

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      52       5       51.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1       6        0.0%
DATA                 0      0      B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Oct 16 10:40:47 2020

                   ?_lcd_sendByte 000E                 _SPI1_ExchangeByte 26FC  
              _SPI1_ExchangeBlock 000000                                l39 25C2  
                              l67 25EE                                l95 261A  
              ?_SPI1_ExchangeByte 0001                   ?_lcd_sendNibble 000E  
        __size_of_CLC6_Initialize 002C               ___wmul@multiplicand 0003  
           __end_of_GDapplication 1C36                               l123 2646  
                             l310 2712                               l302 1F54  
                             l311 2716                               l305 27CE  
                             l402 2536                               l308 2702  
                             l172 272E                               l405 27C2  
                             l326 2496                               l175 26FA  
                             l408 27B6                               l264 2098  
                             l169 2694                               l370 275E  
                             l419 266E                               l451 27CA  
                             l364 23D8                               l373 2746  
                             l605 197C                               l367 21B2  
                             l391 1FFA                               l456 2568  
                             l376 2774                               l481 1C20  
                             l618 1AE0                               l482 1C34  
                             l298 26DE                               l379 27A8  
                             l475 2596                               l491 26BA  
                             l488 212E                               l982 221E  
                             l992 22E8                               l989 2226  
                             l999 22F0                               u920 1EAE  
                             u921 1EAA                               u930 2712  
                             u931 270E                               u940 1D20  
                             u941 1D1C                               u950 1D32  
                             u951 1D2E                               u960 1D5A  
                             u961 1D56                               u970 1D90  
                             u971 1D8C                               u980 2496  
                             u981 2492                               u990 241C  
                             u991 2418        __end_of_DELAY_milliseconds 2670  
                             _abs 241E               lcd_sendNibble@RSbit 000E  
                             _pad 1DD8           __size_of_PMD_Initialize 001C  
             ??_SPI1_ExchangeByte 0001                 ??_CLC2_Initialize 0001  
                             wreg 000FE8                              l1200 1E1E  
                            l1203 1E60                              ?_abs 0013  
                            l1221 1D0C                              l1205 1E9C  
                            l1216 1C9C                              l1322 17F4  
                            l2211 1EEE                              l1219 1CDE  
                            l1227 1410                              l2213 1EF2  
                            l2301 2530                              l1325 24CE  
                            l1333 2394                              l1229 1418  
                            l1261 1068                              l2215 1F16  
                            l2223 1F52                              l2207 1EA0  
                            l2303 2532                              l1319 17EC  
                            l2311 17F6                              l1247 1650  
                            l2217 1F4A                              l2209 1EAE  
                            l2305 2696                              l2241 1D5A  
                            l2233 1D0E                              l2321 183A  
                            l2313 17FA                              l2401 1E2A  
                            l1169 2342                              l1274 136E  
                            l2227 26FE                              l2251 246A  
                            l2219 1F4C                              l2307 26B2  
                            l2243 1D90                              l2235 1D20  
                            l2331 1890                              l2323 185A  
                            l2315 1808                              l1291 245C  
                            l2403 1E3E                              l1283 2284  
                            l1348 1DD6                              l1356 241C  
                            l1284 228C                              l2253 2478  
                            l2229 27C4                              l2421 2344  
                            l2237 1D32                              l2341 1912  
                            l2333 18A4                              l2325 185E  
                            l2317 1828                              l2413 241E  
                            l1365 2504                              l2405 1E42  
                            l2501 14EA                              l2247 27CC  
                            l2255 247C                              l2423 2348  
                            l1359 27D0                              l2239 1D3C  
                            l2351 195C                              l2343 1914  
                            l2335 18B2                              l2327 186A  
                            l2319 182C                              l2415 2438  
                            l2271 23DA                              l2407 1E70  
                            l2511 15BA                              l2503 154E  
                            l1288 2454                              l2249 245E  
                            l2265 2546                              l2257 253A  
                            l2433 27AC                              l2417 2498  
                            l2425 235C                              l2441 1C36  
                            l2345 1926                              l2337 18C4  
                            l2329 1888                              l2361 19B0  
                            l2273 23E6                              l2281 24DC  
                            l2409 1E84                              l2521 1604  
                            l2505 1568                              l2513 15CA  
                            l2601 0FBC                              l2435 2648  
                            l2259 253E                              l2291 250E  
                            l2427 238A                              l2531 1652  
                            l2451 1C82                              l2443 1C4A  
                            l2339 18F2                              l2347 192C  
                            l2371 1A08                              l2363 19B4  
                            l2355 197E                              l2275 23F8  
                            l2283 24E0                              l2523 1610  
                            l2515 15DC                              l2507 1586  
                            l2603 0FC0                              l2437 264C  
                            l2293 2510                              l2429 238E  
                            l2541 16C8                              l2533 1666  
                            l2461 1CC0                              l2445 1C56  
                            l2349 193C                              l2381 1A8A  
                            l2373 1A1C                              l2365 19C2  
                            l2357 1982                              l2277 23FC  
                            l2285 24F8                              l2525 1618  
                            l2517 15EC                              l2509 15A0  
                            l2621 0FF2                              l2613 0FE2  
                            l2605 0FD2                              l1901 26DA  
                            l2701 23B2                              l2439 2654  
                            l2295 2514                              l2711 2752  
                            l2551 16F0                              l2543 16CC  
                            l2535 166A                              l2463 1CEE  
                            l2455 1C94                              l2447 1C62  
                            l2375 1A2A                              l2383 1A90  
                            l2367 19E2                              l2359 1990  
                            l2279 24D0                              l2391 1DD8  
                            l2519 15F2                              l2527 1628  
                            l2471 1390                              l2631 107A  
                            l1911 205E                              l1903 26DC  
                            l2703 23BA                              l2297 2518  
                            l2289 2508                              l2713 2730  
                            l2801 21EC                              l2553 16F8  
                            l2537 166E                              l2465 1D00  
                            l2457 1CA8                              l2449 1C70  
                            l2385 1AA0                              l2377 1A58  
                            l2369 1A00                              l2393 1DE8  
                            l2481 1404                              l2473 13B8  
                            l2641 1114                              l2633 10A2  
                            l2625 0FFE                              l2617 0FEA  
                            l2609 0FDA                              l1921 206C  
                            l1913 2060                              l1905 1FFC  
                            l2721 27B8                              l2705 23C6  
                            l2299 251C                              l2715 273A  
                            l2811 2218                              l2803 21F2  
                            l2563 17AC                              l2555 1730  
                            l2547 16D2                              l2539 168E  
                            l2459 1CBC                              l2387 1AC0  
                            l2379 1A78                              l2395 1DFC  
                            l2491 144E                              l2483 1420  
                            l2475 13D8                              l2651 11A6  
                            l2643 1122                              l2635 10D8  
                            l2627 1056                              l2723 2228  
                            l1923 206E                              l1915 2062  
                            l1907 2018                              l2707 23CC  
                            l2731 1F56                              l2581 2180  
                            l2573 2132                              l2709 2748  
                            l2717 2762                              l2805 2208  
                            l2821 22BE                              l2813 228E  
                            l2565 17BE                              l2549 16E8  
                            l2397 1E0A                              l2493 1456  
                            l2485 1432                              l2477 13E8  
                            l2469 1370                              l2661 1244  
                            l2653 11D8                              l2637 10E6  
                            l2629 1078                              l2725 2230  
                            l1925 2070                              l1917 2064  
                            l1909 202C                              l2741 1F92  
                            l2733 1F5C                              l2583 218C  
                            l2575 2166                              l2719 279E  
                            l2807 2210                              l2823 22D4  
                            l2815 22A0                              l2567 17D0  
                            l2559 176A                              l2399 1E16  
                            l2495 145C                              l2487 1440  
                            l2479 13EA                              l2671 12FA  
                            l2663 128C                              l2647 116C  
                            l2639 10F4                              l2591 0F64  
                            l2727 223E                              l1927 2718  
                            l1919 206A                              l2751 1FD2  
                            l2743 1FA8                              l2735 1F66  
                            l2831 2690                              l2585 2192  
                            l2577 216C                              l2761 20A4  
                            l2833 256A                              l2809 2212  
                            l2825 22DC                              l2817 22A8  
                            l2497 14DE                              l2489 1446  
                            l2673 130E                              l2657 11F4  
                            l2649 117E                              l2593 0F8C  
                            l2729 2264                              l2841 1AEE  
                            l2753 1FDC                              l2745 1FB4  
                            l2737 1F72                              l2587 219E  
                            l2579 2178                              l2771 20E6  
                            l2763 20A4                              l2835 256E  
                            l2827 22E2                              l2819 22B0  
                            l2499 14E4                              l2667 12C4  
                            l2659 121C                              l2595 0F9A  
                            l2683 1334                              l2851 1B2A  
                            l2843 1AEE                              l1891 25C4  
                            l2755 1FF2                              l2747 1FBE  
                            l2739 1F88                              l2589 21A6  
                            l2773 2118                              l2837 2582  
                            l2685 135C                              l2669 12EC  
                            l2677 131A                              l2597 0FAC  
                            l2781 2304                              l2853 1B4E  
                            l2845 1AEE                              l1893 25F0  
                            l2757 1FF6                              l2749 1FC8  
                            l2829 2670                              ?_pad 0011  
                            l2775 211A                              l2759 209A  
                            l2791 21B4                              l2679 1328  
                            l2599 0FB0                              l2783 230C  
                            l2855 1B62                              l2847 1AF2  
                            l2839 1AE2                              l1895 261C  
                            l2777 212A                              l2769 20A8  
                            l2793 21BC                              l2785 2314  
                            l2857 1B88                              l2849 1B08  
                            l1889 2598                              l1897 26E0  
                            l2697 2398                              l2795 21CE  
                            l2787 2330                              l2779 22F2  
                            l2859 1BE4                              l1899 26BC  
                            l2699 23AC                              l2875 2776  
                            l2797 21D6                              l2981 1028  
                            l2877 277A                              l2799 21DE  
                            l2983 171A                              l2879 277E  
                            l2985 255A                              STR_1 0F27  
                            STR_2 0F38                              STR_3 0F5D  
                            STR_4 0F49                              STR_5 0F54  
                            u1000 24F8                              u1001 24F4  
                            u1010 1808                              u1011 1804  
                            u1020 183A                              u1100 1A00  
                            u1021 1836                              u1101 19FC  
                            u1110 1A2A                              u1031 1864  
                            u1111 1A26                              u1200 24CA  
                            u1040 1888                              u1120 1A58  
                            u1041 1884                              u1121 1A54  
                            u1210 235C                              u1050 18B2  
                            u1130 1AA0                              u1211 2358  
                            u1051 18AE                              u1131 1A9C  
                            u1220 238A                              u1060 18F2  
                            u1140 1DE8                              u1300 13A2  
                            u1221 2386                              u1061 18EE  
                            u1141 1DE4                              u1230 266E  
                            u1070 193C                              u1150 1E0A  
                            u1310 13B8                              u1231 266A  
                            u1071 1938                              u1151 1E06  
                            u1311 13B4                              u1240 1C4A  
                            u1080 1990                              u1160 1E60  
                            u1400 15CA                              u1320 13E8  
                            u1241 1C46                              u1081 198C  
                            u1161 1E5C                              u1401 15C6  
                            u1321 13E4                              u1250 1C70  
                            u1090 19C2                              u1170 1E70  
                            u1410 15DC                              u1330 1404  
                            u1251 1C6C                              u1091 19BE  
                            u1171 1E6C                              u1411 15D8  
                            u1331 1400                              u1500 17D0  
                            u1260 1C90                              u1180 2438  
                            u1420 15EC                              u1340 1432  
                            u1501 17CC                              u1261 1C8C  
                            u1181 2434                              u1421 15E8  
                            u1341 142E                              _LATA 000F82  
                            u1190 24C8                              u1270 1CDE  
                            u1430 1604                              u1350 1440  
                            u1510 0F8C                              _LATB 000F83  
                            u1191 24C2                              u1271 1CDA  
                            u1431 1600                              u1351 143C  
                            u1511 0F88                              _LATC 000F84  
                            u1440 168E                              u1280 1CEE  
                            u1360 1568                              u1600 121C  
                            u1520 1068                              _LATD 000F85  
                            u1441 168A                              u1281 1CEA  
                            u1361 1564                              u1601 1218  
                            u1521 1064                              _LATE 000F86  
                            u1450 16C8                              u1370 1586  
                            u1290 13A0                              u1610 1244  
                            u1530 1078                              u1451 16C4  
                            u1371 1582                              u1291 139A  
                            u1611 1240                              u1531 1074  
                            u1700 2208                              u1460 16E4  
                            u1380 15A0                              u1620 12EC  
                            u1540 10A2                              u1701 2204  
                            u1461 16E0                              u1381 159C  
                            u1621 12E8                              u1541 109E  
                            u1710 22A0                              u1470 17A6  
                            u1390 15BA                              u1550 10E6  
                            u1630 2284                              u1711 229C  
                            u1471 17A0                              u1391 15B6  
                            u1551 10E2                              u1631 2280  
                            u1640 20D6                              u1720 22BE  
                            u1480 17A8                              u1560 1166  
                            u1721 22BA                              u1561 1160  
                            u1650 20E6                              u1730 22D4  
                            u1490 17BE                              u1570 1168  
                            u1651 20E2                              u1731 22D0  
                            u1491 17BA                              u1660 2114  
                            u1580 117E                              u1581 117A  
                            u1741 1AE8                              u1670 212A  
                            u1590 11A6                              u1750 1B88  
                            u1671 2126                              u1647 20CC  
                            u1591 11A2                              u1751 1B84  
                            u1680 21CE                              u1681 21CA  
                            u1690 21EC                              u1667 210A  
                            u1691 21E8                              _PMD0 000EDC  
                            u1797 264E                              _PMD1 000EDD  
                            _PMD2 000EDE                              _PMD3 000EDF  
                            _PMD4 000EE0                              _PMD5 000EE1  
                            _WPUA 000F0B                              _WPUB 000F13  
                            _WPUC 000F1B                              _WPUD 000F20  
                            _WPUE 000F28                              abs@a 0013  
                            _dbuf 0073                              _atoi 1652  
                            _ctoa 1C36                              _main 2776  
                            _dtoa 1370                   ?_lcd_returnHome 0001  
                            _prec 006F                              _nout 006B  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                    ?_lcd_writeChar 0001  
                            prodh 000FF4                              prodl 000FF3  
                            start 0000         __end_of_SPI1_ExchangeByte 2718  
                  ??_lcd_sendByte 000F                      ___param_bank 000000  
            lcd_sendNibble@packet 0011              lcd_sendNibble@nibble 0010  
                           ??_abs 0015                             ??_pad 0017  
            _User_lcd_writeString 209A    __size_of_OSCILLATOR_Initialize 0018  
                _lcd_clearDisplay 2730           __end_of_ApplicationInit 2598  
   __end_of_OSCILLATOR_Initialize 2730                  __end_of_LCD_open 27CC  
                     ?_SPI1_Close 0001                   __end_of___aodiv 197E  
                           ?_atoi 0008                             ?_ctoa 000A  
                           ?_main 0001                             ?_dtoa 001C  
                 __end_of___aomod 1AE2  SPI1_Open@spi1UniqueConfiguration 0002  
                 __end_of___lwdiv 2228                   __end_of___lwmod 22F2  
                           _OSCEN 000ED7                      vfpfcnvrt@fmt 0042  
                           _TRISA 000F87                             _TRISB 000F88  
                           _TRISC 000F89                             _TRISD 000F8A  
                           _TRISE 000F8B                __size_of_SPI1_Open 00B8  
               _expander_sendByte 2506                             _flags 0071  
                           _fputc 1D0E                             _fputs 23DA  
                 __end_of_isdigit 24D0                ?_expander_sendByte 0008  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 006D  
                           ctoa@c 000C                             _putch 27D0  
                           ctoa@l 000E                             ctoa@w 0010  
                           dtoa@d 001E                             dtoa@i 003E  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 2396                             tablat 000FF5  
                           status 000FD8                   __end_of_sprintf 2344  
             ??_expander_sendByte 0009          __size_of_SPI1_Initialize 0024  
           spi_master_open@config 0005                 ??_CLC5_Initialize 0001  
                 __initialization 278A                      __end_of_atoi 17F6  
                    __end_of_ctoa 1D0E                      __end_of_main 278A  
                    __end_of_dtoa 1652                  ??_expander_setup 000D  
           ?_User_lcd_writeString 0017                            ??_atoi 000A  
                          ??_ctoa 000D                            ??_main 0060  
                          ??_dtoa 0026                     __activetblptr 000003  
       __end_of_expander_sendByte 2538                 ??_CLC6_Initialize 0001  
            expander_sendByte@cmd 000A                            ?_fputc 0001  
                          ?_fputs 000A                            _ANSELA 000F0C  
                          ?_putch 0001                            _ANSELB 000F14  
                          _ANSELC 000F1C                            _ANSELD 000F21  
                          _ANSELE 000F29                            _RC4PPS 000EF6  
                          _ODCONA 000F0A                            _ODCONB 000F12  
                          _ODCONC 000F1A                            _RC6PPS 000EF8  
                          _ODCOND 000F1F                            _ODCONE 000F27  
                          _INLVLA 000F08                            _INLVLB 000F10  
                          _INLVLC 000F18                            _INLVLD 000F1D  
                          _INLVLE 000F25                   ??_lcd_writeChar 0015  
                          _OSCFRQ 000ED9                     vfpfcnvrt@done 0052  
             __size_of_SPI1_Close 0004        __size_of_SPI1_ExchangeByte 001C  
               __end_of_SPI1_Open 1F56                      vfprintf@cfmt 005D  
                       ??___aodiv 0011                         ??___aomod 0011  
                          ___wmul 2696                _expander_setOutput 27AA  
                       ??___lwdiv 0005              __size_of_lcd_setAddr 0016  
                       ??___lwmod 0005                            clear_0 2790  
                ?_ApplicationInit 0001                            pad@buf 0013  
                          ctoa@fp 000A                            dtoa@fp 001C  
                          _strlen 24D0               ?_expander_setOutput 0001  
                          fputc@c 0001                    _PMD_Initialize 26E0  
                          fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_isdigit 0003  
                    __mediumconst 0000                         ??_isspace 0003  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8              __end_of_lcd_sendByte 21B4  
                          putch@c 0001                  __end_of_vfprintf 228E  
                 _CLC1_Initialize 261C                         ??_sprintf 005F  
               _SYSTEM_Initialize 2670                  lcd_sendByte@byte 0012  
                      __accesstop 0060           __end_of__initialization 2796  
        __size_of_SPI1_WriteBlock 003A                fp__SPI1_WriteBlock 0000  
                  _SPI1_ReadBlock 000000                ?_SYSTEM_Initialize 0001  
            ??_expander_setOutput 000D                         ?_LCD_open 0001  
                   ___rparam_used 000001                  ??_lcd_sendNibble 000F  
            lcd_setAddr@character 0015                    __pcstackCOMRAM 0001  
          ??_User_lcd_writeString 001B               ??_SYSTEM_Initialize 0015  
                 _CLC2_Initialize 25F0        User_lcd_writeString@column 001A  
                   __end_of_fputc 1DD8                     __end_of_fputs 241E  
               ??_SPI1_Initialize 0001                     __end_of_putch 27D2  
          __end_of_PMD_Initialize 26FC             SPI1_ExchangeByte@data 0001  
      User_lcd_writeString@string 0017                    lcd_setAddr@row 0016  
              _spi1_configuration 0F1F        __size_of_expander_sendByte 0032  
              __size_of_lcd_setup 00A6                  ??_lcd_returnHome 0015  
                         ??_fputc 0005         __end_of_SYSTEM_Initialize 2696  
                         ??_fputs 000E                           ??_putch 0001  
                      __pbssBANK0 0060          __end_of_lcd_clearDisplay 2748  
              _DELAY_milliseconds 2648                        ??_LCD_open 0003  
                  _SPI1_WriteByte 000000          __size_of_spi_master_open 0032  
             ?_DELAY_milliseconds 0001             expander_sendByte@addr 0009  
           expander_sendByte@byte 0008                           ?___wmul 0001  
                         _CLC1CON 000E27                           _CLC2CON 000E31  
                         _CLC5CON 000E4F                           _CLC6CON 000E59  
                         _CLC1POL 000E28                           _CLC2POL 000E32  
                         _CLC5POL 000E50                           _CLC6POL 000E5A  
                         _CLCDATA 000E77               GDapplication@F13113 0060  
                    ??_SPI1_Close 0001                   ?_PMD_Initialize 0001  
                         ?_strlen 0001           __end_of_CLC1_Initialize 2648  
            ??_DELAY_milliseconds 0003                           _OSCCON1 000ED3  
                         _OSCCON3 000ED5                __size_of_vfpfcnvrt 040C  
                         _OSCTUNE 000ED8                           _SSP1ADD 000F92  
                         _SLRCONA 000F09                           _SLRCONB 000F11  
                         _SLRCONC 000F19                           _SLRCOND 000F1E  
                         _SLRCONE 000F26                           _SSP1BUF 000F91  
                 _CLC5_Initialize 25C4        GDapplication@lcdDataBuffer 00A7  
          __size_of_GDapplication 0154           __end_of_CLC2_Initialize 261C  
             GDapplication@degree 00AF                __end_of_SPI1_Close 27D0  
                       _CLCIN0PPS 000E1F                         _CLCIN1PPS 000E20  
                       _CLCIN2PPS 000E21                         _CLCIN3PPS 000E22  
                         __Hparam 0000                           __Lparam 0000  
               ??_SPI1_WriteBlock 0006                           ___aodiv 17F6  
               __end_of_lcd_setup 1FFC                           ___aomod 197E  
                 __size_of___wmul 0026                   _CLC6_Initialize 2598  
                         ___lwdiv 21B4                           ___lwmod 228E  
                       ?_vfprintf 0057                      __psmallconst 0F00  
                         __pcinit 278A                           __ramtop 0F00  
          lcd_writeChar@character 0015                           __ptext0 2776  
                         __ptext1 2670                           __ptext2 1F56  
                         __ptext3 2396                           __ptext4 27B8  
                         __ptext5 26BC                           __ptext6 26E0  
                         __ptext7 1FFC                           __ptext8 2718  
                         __ptext9 2598          SPI1_WriteBlock@blockSize 0004  
           __size_of_lcd_sendByte 0084                   __size_of_strlen 0036  
           _OSCILLATOR_Initialize 2718                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _isdigit 2498  
            fp__SPI1_ExchangeByte 0000          ??_PIN_MANAGER_Initialize 0001  
                         _isspace 2344                           atoi@neg 000E  
      __size_of_SYSTEM_Initialize 0026                           _sprintf 22F2  
            end_of_initialization 2796                           fputc@fp 0003  
           User_lcd_writeString@i 001D                           fputs@fp 000C  
               __end_of_spiMaster 0F1F                 __end_of_vfpfcnvrt 1370  
                         postdec2 000FDD                      _lcd_sendByte 2130  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                 ??_spi_master_open 0003  
                      ??_vfprintf 005D                         _SPI1_Open 1E9E  
                         strlen@a 0003                           strlen@s 0001  
                   _GDapplication 1AE2                 lcd_sendByte@RSbit 000E  
                ?_CLC1_Initialize 0001           __end_of_CLC5_Initialize 25F0  
                       _TRISCbits 000F89             _spi1_interruptHandler 0068  
                 _SPI1_Initialize 26BC             __end_of_lcd_writeChar 27AA  
                ?_CLC2_Initialize 0001           __end_of_CLC6_Initialize 25C4  
                   ??_lcd_setAddr 0016                 __size_of_LCD_open 0008  
                     _CLC1CONbits 000E27                       _CLC2CONbits 000E31  
                      ?_SPI1_Open 0001                       vfpfcnvrt@ap 0044  
                     vfpfcnvrt@fp 0040                       vfpfcnvrt@ll 004A  
                  __end_of___wmul 26BC                    ?_GDapplication 0001  
                     _CLC5CONbits 000E4F                       _CLC6CONbits 000E59  
          ?_OSCILLATOR_Initialize 0001                    __end_of_strlen 2506  
             start_initialization 278A                     fp__SPI1_Close 0000  
         __size_of_expander_setup 000C   __size_of_PIN_MANAGER_Initialize 009E  
                     __end_of_abs 245E                       __end_of_pad 1E9E  
        __size_of_ApplicationInit 002E                 ?_lcd_clearDisplay 0001  
     __size_of_expander_setOutput 000E                ??_lcd_clearDisplay 0015  
                     vfprintf@fmt 0059                  ??_PMD_Initialize 0001  
                        ??___wmul 0005     __size_of_User_lcd_writeString 0096  
             __end_of_lcd_setAddr 2776                          ??_strlen 0003  
                ?_CLC5_Initialize 0001                     _SPI1_ReadByte 000000  
                   __pcstackBANK0 0093                  ___aodiv@dividend 0001  
         __end_of_SPI1_Initialize 26E0                   _SPI1_WriteBlock 245E  
                       _atoi$1420 0012                         _atoi$1418 0010  
                       _atoi$1419 0014                  ?_CLC6_Initialize 0001  
                ___lwdiv@dividend 0001            _PIN_MANAGER_Initialize 1FFC  
                       _dtoa$1382 002E                          ?___aodiv 0001  
                        ?___aomod 0001                  ___aodiv@quotient 0013  
                 ??_GDapplication 005F                          ?___lwdiv 0001  
                     ??_SPI1_Open 0001                          ?___lwmod 0001  
                       _lcd_setup 1F56                 __size_of_vfprintf 0066  
         __size_of_lcd_sendNibble 0044                       __smallconst 0F00  
                        _CLC1GLS0 000E2D                          _CLC1GLS1 000E2E  
                        _CLC1GLS2 000E2F                          _CLC1GLS3 000E30  
                        _CLC2GLS0 000E37                          _CLC2GLS1 000E38  
                        _CLC2GLS2 000E39                          _CLC2GLS3 000E3A  
                        _CLC1SEL0 000E29                          _CLC1SEL1 000E2A  
                        _CLC1SEL2 000E2B                          _CLC1SEL3 000E2C  
                        _CLC5GLS0 000E55                          _CLC5GLS1 000E56  
                        _CLC5GLS2 000E57                          _CLC5GLS3 000E58  
                        _CLC2SEL0 000E33                          _CLC2SEL1 000E34  
                        _CLC2SEL2 000E35                          _CLC2SEL3 000E36  
                        _CLC6GLS0 000E5F                          _CLC6GLS1 000E60  
                        _CLC6GLS2 000E61                          _CLC6GLS3 000E62  
                        ?_isdigit 0001                          _CLC5SEL0 000E51  
                        _CLC5SEL1 000E52                          _CLC5SEL2 000E53  
                        _CLC5SEL3 000E54                          _CLC6SEL0 000E5B  
                        _CLC6SEL1 000E5C                          _CLC6SEL2 000E5D  
                        _CLC6SEL3 000E5E                          ?_isspace 0001  
     __size_of_DELAY_milliseconds 0028                  ___lwdiv@quotient 0005  
                        ?_sprintf 0093                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                    __size_of_putch 0002  
                 _spi_master_open 2538                    ___wmul@product 0005  
                        _LATAbits 000F82                          _LATDbits 000F85  
               ??_ApplicationInit 001E                          _LCD_open 27C4  
         __size_of_lcd_returnHome 0018                          _PIR3bits 000EC8  
                     _lcd_setAddr 2760                         _spiMaster 0F01  
  DELAY_milliseconds@milliseconds 0001                          _SSP1CON1 000F95  
                        _SSP1CON2 000F96                          _SSP1STAT 000F94  
                       _vfpfcnvrt 0F64                        ?_lcd_setup 0001  
               ___wmul@multiplier 0001           __end_of_SPI1_WriteBlock 2498  
                  _expander_setup 27B8                      _isspace$1436 0007  
                      vfpfcnvrt@c 0056                  ?_SPI1_Initialize 0001  
            GDapplication@clcData 00B1                          __Hrparam 0000  
                      vfprintf@ap 005B                          __Lrparam 0000  
                      vfprintf@fp 0057           ??_OSCILLATOR_Initialize 0001  
                __size_of___aodiv 0188                  __size_of___aomod 0164  
                      ?_vfpfcnvrt 0040           User_lcd_writeString@row 0019  
                __size_of___lwdiv 0074                  __size_of___lwmod 0064  
                 ___aodiv@divisor 0009                   ___aodiv@counter 0011  
          __end_of_expander_setup 27C4          expander_setOutput@output 000D  
                      sprintf@fmt 0095                  __size_of_isdigit 0038  
                 ___lwdiv@divisor 0003                  __size_of_isspace 0052  
                 ___lwdiv@counter 0007           __end_of_spi_master_open 256A  
                        __ptext10 25C4                          __ptext11 25F0  
                        __ptext20 23DA                          __ptext12 261C  
                        __ptext21 241E                          __ptext13 1AE2  
                        __ptext30 2696                          __ptext22 197E  
                        __ptext14 22F2                          __ptext31 228E  
                        __ptext23 17F6                          __ptext15 2228  
                        __ptext40 27AA                          __ptext32 21B4  
                        __ptext24 1C36                          __ptext16 0F64  
                        __ptext41 2506                          __ptext33 256A  
                        __ptext25 1D0E                          __ptext17 1370  
                        __ptext42 2538                          __ptext34 2730  
                        __ptext26 27D0                          __ptext18 1DD8  
                        __ptext43 27C4                          __ptext35 209A  
                        __ptext27 1652                          __ptext19 24D0  
                        __ptext44 1E9E                          __ptext36 279C  
                        __ptext28 2344                          __ptext45 245E  
                        __ptext37 2760                          __ptext29 2498  
                        __ptext46 26FC                          __ptext38 2748  
                        __ptext47 27CC                          __ptext39 2130  
                        __ptext48 2648                          __ptext49 0000  
                    _SSP1CON1bits 000F95          __size_of_CLC1_Initialize 002C  
                __size_of_sprintf 0052                     __size_of_atoi 01A4  
                   __size_of_ctoa 00D8                     __size_of_main 0014  
                   __size_of_dtoa 02E2                       fp__LCD_open 0000  
                        _vfprintf 2228          __size_of_CLC2_Initialize 002C  
       __size_of_lcd_clearDisplay 0018                       ??_lcd_setup 0015  
                  _lcd_sendNibble 2396                  ___aomod@dividend 0001  
                 ?_expander_setup 0001                    _vfpfcnvrt$1397 0054  
          __size_of_lcd_writeChar 000E                  ?_SPI1_WriteBlock 0002  
            SPI1_WriteBlock@block 0002                          isdigit@c 0001  
    __end_of_User_lcd_writeString 2130                         sprintf@ap 009F  
      __end_of_expander_setOutput 27B8                  ___lwmod@dividend 0001  
                        isspace@c 0001           ?_PIN_MANAGER_Initialize 0001  
                  _lcd_returnHome 2748                   ___aomod@divisor 0009  
          __end_of_lcd_sendNibble 23DA                       ??_vfpfcnvrt 0046  
                 ___aomod@counter 0011               SPI1_WriteBlock@data 0006  
                      _SPI1_Close 27CC                          sprintf@f 00A1  
                        sprintf@s 0093                        _SSP1DATPPS 000EB3  
                      _SSP1CLKPPS 000EB2                   ___lwmod@divisor 0003  
                 ___lwmod@counter 0005                   _ApplicationInit 256A  
                ?_spi_master_open 0001                      ___aodiv@sign 0012  
  __end_of_PIN_MANAGER_Initialize 209A          __size_of_CLC5_Initialize 002C  
          __end_of_lcd_returnHome 2760                     _lcd_writeChar 279C  
          lcd_sendByte@packetHigh 0013                      ___aomod@sign 0012  
               ??_CLC1_Initialize 0001             lcd_sendByte@packetLow 0014  
      __end_of_spi1_configuration 0F27            lcd_sendByte@nibbleHigh 0010  
                    ?_lcd_setAddr 0015             lcd_sendByte@nibbleLow 0011  
