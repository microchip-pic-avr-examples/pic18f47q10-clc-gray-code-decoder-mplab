

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Oct 15 14:52:56 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	text44,global,reloc=2,class=CODE,delta=1
    55                           	psect	text45,global,reloc=2,class=CODE,delta=1,keep,inline
    56                           	psect	text46,global,reloc=2,class=CODE,delta=1
    57                           	psect	text47,global,reloc=2,class=CODE,delta=1
    58                           	psect	text48,global,reloc=2,class=CODE,delta=1
    59                           	psect	text49,global,reloc=2,class=CODE,delta=1
    60                           	psect	text50,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.30
    68                           ; Generated 20/08/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F47Q10 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103 ;; Function _SPI1_ExchangeBlock is unused but had its address taken
   104  0000                     
   105 ;; Function _SPI1_ReadBlock is unused but had its address taken
   106  0000                     
   107 ;; Function _SPI1_WriteByte is unused but had its address taken
   108  0000                     
   109 ;; Function _SPI1_ReadByte is unused but had its address taken
   110  0000                     
   111                           	psect	smallconst
   112  000F00                     __psmallconst:
   113                           	callstack 0
   114  000F00  00                 	db	0
   115  000F01                     _spiMaster:
   116                           	callstack 0
   117  000F01  0A                 	db	low _SPI1_Close
   118  000F02  28                 	db	high _SPI1_Close
   119  000F03  00                 	db	low (_SPI1_Close shr (0+16))
   120  000F04  02                 	db	low _LCD_open
   121  000F05  28                 	db	high _LCD_open
   122  000F06  00                 	db	low (_LCD_open shr (0+16))
   123  000F07  30                 	db	low _SPI1_ExchangeByte
   124  000F08  27                 	db	high _SPI1_ExchangeByte
   125  000F09  00                 	db	low (_SPI1_ExchangeByte shr (0+16))
   126  000F0A  00                 	db	0
   127  000F0B  00                 	db	0
   128  000F0C  00                 	db	0
   129  000F0D  5E                 	db	low _SPI1_WriteBlock
   130  000F0E  24                 	db	high _SPI1_WriteBlock
   131  000F0F  00                 	db	low (_SPI1_WriteBlock shr (0+16))
   132  000F10  00                 	db	0
   133  000F11  00                 	db	0
   134  000F12  00                 	db	0
   135  000F13  00                 	db	0
   136  000F14  00                 	db	0
   137  000F15  00                 	db	0
   138  000F16  00                 	db	0
   139  000F17  00                 	db	0
   140  000F18  00                 	db	0
   141  000F19  00                 	db	0
   142  000F1A  00                 	db	0
   143  000F1B  00                 	db	0
   144  000F1C  00                 	db	0
   145  000F1D  00                 	db	0
   146  000F1E  00                 	db	0
   147  000F1F                     __end_of_spiMaster:
   148                           	callstack 0
   149  000F1F                     _spi1_configuration:
   150                           	callstack 0
   151  000F1F  0A                 	db	10
   152  000F20  40                 	db	64
   153  000F21  01                 	db	1
   154  000F22  00                 	db	0
   155  000F23  00                 	db	0
   156  000F24  40                 	db	64
   157  000F25  01                 	db	1
   158  000F26  00                 	db	0
   159  000F27                     __end_of_spi1_configuration:
   160                           	callstack 0
   161  0000                     _CLCDATA	set	3703
   162  0000                     _PIR3bits	set	3784
   163  0000                     _SSP1DATPPS	set	3763
   164  0000                     _RC6PPS	set	3832
   165  0000                     _CLCIN1PPS	set	3616
   166  0000                     _CLCIN2PPS	set	3617
   167  0000                     _RC4PPS	set	3830
   168  0000                     _CLCIN3PPS	set	3618
   169  0000                     _CLCIN0PPS	set	3615
   170  0000                     _SSP1CLKPPS	set	3762
   171  0000                     _PMD5	set	3809
   172  0000                     _PMD4	set	3808
   173  0000                     _PMD3	set	3807
   174  0000                     _PMD2	set	3806
   175  0000                     _PMD1	set	3805
   176  0000                     _PMD0	set	3804
   177  0000                     _OSCTUNE	set	3800
   178  0000                     _OSCFRQ	set	3801
   179  0000                     _OSCEN	set	3799
   180  0000                     _OSCCON3	set	3797
   181  0000                     _OSCCON1	set	3795
   182  0000                     _CLC1CONbits	set	3623
   183  0000                     _CLC1CON	set	3623
   184  0000                     _CLC1GLS3	set	3632
   185  0000                     _CLC1GLS2	set	3631
   186  0000                     _CLC1GLS1	set	3630
   187  0000                     _CLC1GLS0	set	3629
   188  0000                     _CLC1SEL3	set	3628
   189  0000                     _CLC1SEL2	set	3627
   190  0000                     _CLC1SEL1	set	3626
   191  0000                     _CLC1SEL0	set	3625
   192  0000                     _CLC1POL	set	3624
   193  0000                     _CLC2CONbits	set	3633
   194  0000                     _CLC2CON	set	3633
   195  0000                     _CLC2GLS3	set	3642
   196  0000                     _CLC2GLS2	set	3641
   197  0000                     _CLC2GLS1	set	3640
   198  0000                     _CLC2GLS0	set	3639
   199  0000                     _CLC2SEL3	set	3638
   200  0000                     _CLC2SEL2	set	3637
   201  0000                     _CLC2SEL1	set	3636
   202  0000                     _CLC2SEL0	set	3635
   203  0000                     _CLC2POL	set	3634
   204  0000                     _CLC5CONbits	set	3663
   205  0000                     _CLC5CON	set	3663
   206  0000                     _CLC5GLS3	set	3672
   207  0000                     _CLC5GLS2	set	3671
   208  0000                     _CLC5GLS1	set	3670
   209  0000                     _CLC5GLS0	set	3669
   210  0000                     _CLC5SEL3	set	3668
   211  0000                     _CLC5SEL2	set	3667
   212  0000                     _CLC5SEL1	set	3666
   213  0000                     _CLC5SEL0	set	3665
   214  0000                     _CLC5POL	set	3664
   215  0000                     _CLC6CONbits	set	3673
   216  0000                     _CLC6CON	set	3673
   217  0000                     _CLC6GLS3	set	3682
   218  0000                     _CLC6GLS2	set	3681
   219  0000                     _CLC6GLS1	set	3680
   220  0000                     _CLC6GLS0	set	3679
   221  0000                     _CLC6SEL3	set	3678
   222  0000                     _CLC6SEL2	set	3677
   223  0000                     _CLC6SEL1	set	3676
   224  0000                     _CLC6SEL0	set	3675
   225  0000                     _CLC6POL	set	3674
   226  0000                     _INLVLE	set	3877
   227  0000                     _INLVLD	set	3869
   228  0000                     _INLVLC	set	3864
   229  0000                     _INLVLB	set	3856
   230  0000                     _INLVLA	set	3848
   231  0000                     _SLRCONE	set	3878
   232  0000                     _SLRCOND	set	3870
   233  0000                     _SLRCONC	set	3865
   234  0000                     _SLRCONB	set	3857
   235  0000                     _SLRCONA	set	3849
   236  0000                     _ODCOND	set	3871
   237  0000                     _ODCONC	set	3866
   238  0000                     _ODCONB	set	3858
   239  0000                     _ODCONA	set	3850
   240  0000                     _ODCONE	set	3879
   241  0000                     _WPUC	set	3867
   242  0000                     _WPUA	set	3851
   243  0000                     _WPUB	set	3859
   244  0000                     _WPUE	set	3880
   245  0000                     _WPUD	set	3872
   246  0000                     _ANSELA	set	3852
   247  0000                     _ANSELE	set	3881
   248  0000                     _ANSELB	set	3860
   249  0000                     _ANSELC	set	3868
   250  0000                     _ANSELD	set	3873
   251  0000                     _LATDbits	set	3973
   252  0000                     _LATAbits	set	3970
   253  0000                     _SSP1BUF	set	3985
   254  0000                     _SSP1CON2	set	3990
   255  0000                     _SSP1CON1bits	set	3989
   256  0000                     _TRISCbits	set	3977
   257  0000                     _SSP1ADD	set	3986
   258  0000                     _SSP1CON1	set	3989
   259  0000                     _SSP1STAT	set	3988
   260  0000                     _TRISD	set	3978
   261  0000                     _TRISC	set	3977
   262  0000                     _TRISB	set	3976
   263  0000                     _TRISA	set	3975
   264  0000                     _TRISE	set	3979
   265  0000                     _LATC	set	3972
   266  0000                     _LATB	set	3971
   267  0000                     _LATA	set	3970
   268  0000                     _LATD	set	3973
   269  0000                     _LATE	set	3974
   270  000F27                     STR_1:
   271  000F27  41                 	db	65	;'A'
   272  000F28  6E                 	db	110	;'n'
   273  000F29  67                 	db	103	;'g'
   274  000F2A  6C                 	db	108	;'l'
   275  000F2B  65                 	db	101	;'e'
   276  000F2C  3A                 	db	58	;':'
   277  000F2D  20                 	db	32
   278  000F2E  20                 	db	32
   279  000F2F  20                 	db	32
   280  000F30  20                 	db	32
   281  000F31  20                 	db	32
   282  000F32  20                 	db	32
   283  000F33  20                 	db	32
   284  000F34  20                 	db	32
   285  000F35  20                 	db	32
   286  000F36  20                 	db	32
   287  000F37  00                 	db	0
   288  000F38                     STR_2:
   289  000F38  44                 	db	68	;'D'
   290  000F39  65                 	db	101	;'e'
   291  000F3A  63                 	db	99	;'c'
   292  000F3B  6F                 	db	111	;'o'
   293  000F3C  64                 	db	100	;'d'
   294  000F3D  65                 	db	101	;'e'
   295  000F3E  64                 	db	100	;'d'
   296  000F3F  20                 	db	32
   297  000F40  76                 	db	118	;'v'
   298  000F41  61                 	db	97	;'a'
   299  000F42  6C                 	db	108	;'l'
   300  000F43  75                 	db	117	;'u'
   301  000F44  65                 	db	101	;'e'
   302  000F45  3A                 	db	58	;':'
   303  000F46  20                 	db	32
   304  000F47  20                 	db	32
   305  000F48  00                 	db	0
   306  000F49                     STR_4:
   307  000F49  25                 	db	37
   308  000F4A  33                 	db	51	;'3'
   309  000F4B  64                 	db	100	;'d'
   310  000F4C  2E                 	db	46
   311  000F4D  25                 	db	37
   312  000F4E  30                 	db	48	;'0'
   313  000F4F  32                 	db	50	;'2'
   314  000F50  64                 	db	100	;'d'
   315  000F51  25                 	db	37
   316  000F52  63                 	db	99	;'c'
   317  000F53  00                 	db	0
   318  000F54                     STR_5:
   319  000F54  25                 	db	37
   320  000F55  33                 	db	51	;'3'
   321  000F56  64                 	db	100	;'d'
   322  000F57  25                 	db	37
   323  000F58  63                 	db	99	;'c'
   324  000F59  20                 	db	32
   325  000F5A  20                 	db	32
   326  000F5B  20                 	db	32
   327  000F5C  00                 	db	0
   328  000F5D                     STR_3:
   329  000F5D  25                 	db	37
   330  000F5E  30                 	db	48	;'0'
   331  000F5F  32                 	db	50	;'2'
   332  000F60  64                 	db	100	;'d'
   333  000F61  00                 	db	0
   334  000F62  00                 	db	0	; dummy byte at the end
   335  0000                     
   336                           ; #config settings
   337                           
   338                           	psect	cinit
   339  0027BE                     __pcinit:
   340                           	callstack 0
   341  0027BE                     start_initialization:
   342                           	callstack 0
   343  0027BE                     __initialization:
   344                           	callstack 0
   345                           
   346                           ; Clear objects allocated to BANK0 (51 bytes)
   347  0027BE  EE00  F060         	lfsr	0,__pbssBANK0
   348  0027C2  0E33               	movlw	51
   349  0027C4                     clear_0:
   350  0027C4  6AEE               	clrf	postinc0,c
   351  0027C6  06E8               	decf	wreg,f,c
   352  0027C8  E1FD               	bnz	clear_0
   353  0027CA                     end_of_initialization:
   354                           	callstack 0
   355  0027CA                     __end_of__initialization:
   356                           	callstack 0
   357  0027CA  0100               	movlb	0
   358  0027CC  EFD5  F013         	goto	_main	;jump to C main() function
   359                           
   360                           	psect	bssBANK0
   361  000060                     __pbssBANK0:
   362                           	callstack 0
   363  000060                     	ds	8
   364  000068                     _spi1_interruptHandler:
   365                           	callstack 0
   366  000068                     	ds	3
   367  00006B                     _nout:
   368                           	callstack 0
   369  00006B                     	ds	2
   370  00006D                     _width:
   371                           	callstack 0
   372  00006D                     	ds	2
   373  00006F                     _prec:
   374                           	callstack 0
   375  00006F                     	ds	2
   376  000071                     _flags:
   377                           	callstack 0
   378  000071                     	ds	2
   379  000073                     _dbuf:
   380                           	callstack 0
   381  000073                     	ds	32
   382                           
   383                           	psect	cstackBANK0
   384  000093                     __pcstackBANK0:
   385                           	callstack 0
   386  000093                     ?_sprintf:
   387                           	callstack 0
   388  000093                     sprintf@s:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x0
   392  000093                     	ds	2
   393  000095                     sprintf@fmt:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397  000095                     	ds	10
   398  00009F                     sprintf@ap:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xC
   402  00009F                     	ds	2
   403  0000A1                     sprintf@f:
   404                           	callstack 0
   405                           
   406                           ; 6 bytes @ 0xE
   407  0000A1                     	ds	6
   408  0000A7                     GDapplication@lcdDataBuffer:
   409                           	callstack 0
   410                           
   411                           ; 8 bytes @ 0x14
   412  0000A7                     	ds	8
   413  0000AF                     GDapplication@degree:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x1C
   417  0000AF                     	ds	2
   418  0000B1                     GDapplication@clcData:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x1E
   422  0000B1                     	ds	1
   423                           
   424                           	psect	cstackCOMRAM
   425  000001                     __pcstackCOMRAM:
   426                           	callstack 0
   427  000001                     ??_SPI1_Open:
   428  000001                     ?_strlen:
   429                           	callstack 0
   430  000001                     ?_isdigit:
   431                           	callstack 0
   432  000001                     ?_isspace:
   433                           	callstack 0
   434  000001                     ?___wmul:
   435                           	callstack 0
   436  000001                     ?___lwdiv:
   437                           	callstack 0
   438  000001                     ?___lwmod:
   439                           	callstack 0
   440  000001                     ?___aodiv:
   441                           	callstack 0
   442  000001                     ?___aomod:
   443                           	callstack 0
   444  000001                     SPI1_ExchangeByte@data:
   445                           	callstack 0
   446  000001                     DELAY_milliseconds@milliseconds:
   447                           	callstack 0
   448  000001                     ___wmul@multiplier:
   449                           	callstack 0
   450  000001                     ___lwdiv@dividend:
   451                           	callstack 0
   452  000001                     ___lwmod@dividend:
   453                           	callstack 0
   454  000001                     isdigit@c:
   455                           	callstack 0
   456  000001                     isspace@c:
   457                           	callstack 0
   458  000001                     fputc@c:
   459                           	callstack 0
   460  000001                     strlen@s:
   461                           	callstack 0
   462  000001                     ___aodiv@dividend:
   463                           	callstack 0
   464  000001                     ___aomod@dividend:
   465                           	callstack 0
   466                           
   467                           ; 8 bytes @ 0x0
   468  000001                     	ds	1
   469  000002                     SPI1_Open@spi1UniqueConfiguration:
   470                           	callstack 0
   471  000002                     SPI1_WriteBlock@block:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x1
   475  000002                     	ds	1
   476  000003                     ??_spi_master_open:
   477  000003                     ??_isdigit:
   478  000003                     ??_isspace:
   479  000003                     ___wmul@multiplicand:
   480                           	callstack 0
   481  000003                     ___lwdiv@divisor:
   482                           	callstack 0
   483  000003                     ___lwmod@divisor:
   484                           	callstack 0
   485  000003                     fputc@fp:
   486                           	callstack 0
   487  000003                     strlen@a:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491  000003                     	ds	1
   492  000004                     SPI1_WriteBlock@blockSize:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x3
   496  000004                     	ds	1
   497  000005                     ??_fputc:
   498  000005                     spi_master_open@config:
   499                           	callstack 0
   500  000005                     ___lwmod@counter:
   501                           	callstack 0
   502  000005                     ___wmul@product:
   503                           	callstack 0
   504  000005                     ___lwdiv@quotient:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x4
   508  000005                     	ds	1
   509  000006                     SPI1_WriteBlock@data:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x5
   513  000006                     	ds	1
   514  000007                     ___lwdiv@counter:
   515                           	callstack 0
   516  000007                     _isspace$1439:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x6
   520  000007                     	ds	1
   521  000008                     ?_atoi:
   522                           	callstack 0
   523  000008                     digipot_setWiper@val:
   524                           	callstack 0
   525  000008                     expander_sendByte@byte:
   526                           	callstack 0
   527  000008                     atoi@s:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x7
   531  000008                     	ds	1
   532  000009                     expander_sendByte@addr:
   533                           	callstack 0
   534  000009                     digipot_setWiper@cmd:
   535                           	callstack 0
   536  000009                     ___aodiv@divisor:
   537                           	callstack 0
   538  000009                     ___aomod@divisor:
   539                           	callstack 0
   540                           
   541                           ; 8 bytes @ 0x8
   542  000009                     	ds	1
   543  00000A                     ??_atoi:
   544  00000A                     ?_ctoa:
   545                           	callstack 0
   546  00000A                     ctoa@fp:
   547                           	callstack 0
   548  00000A                     fputs@s:
   549                           	callstack 0
   550  00000A                     expander_sendByte@cmd:
   551                           	callstack 0
   552                           
   553                           ; 3 bytes @ 0x9
   554  00000A                     	ds	1
   555  00000B                     lcd_setContrast@contrast:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0xA
   559  00000B                     	ds	1
   560  00000C                     ctoa@c:
   561                           	callstack 0
   562  00000C                     fputs@fp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0xB
   566  00000C                     	ds	1
   567  00000D                     ??_ctoa:
   568  00000D                     expander_setOutput@output:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0xC
   572  00000D                     	ds	1
   573  00000E                     lcd_sendNibble@RSbit:
   574                           	callstack 0
   575  00000E                     lcd_sendByte@RSbit:
   576                           	callstack 0
   577  00000E                     fputs@c:
   578                           	callstack 0
   579  00000E                     ctoa@l:
   580                           	callstack 0
   581  00000E                     atoi@neg:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xD
   585  00000E                     	ds	1
   586  00000F                     ??_lcd_sendNibble:
   587  00000F                     ??_lcd_sendByte:
   588  00000F                     fputs@i:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0xE
   592  00000F                     	ds	1
   593  000010                     lcd_sendNibble@nibble:
   594                           	callstack 0
   595  000010                     lcd_sendByte@nibbleHigh:
   596                           	callstack 0
   597  000010                     ctoa@w:
   598                           	callstack 0
   599  000010                     _atoi$1421:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0xF
   603  000010                     	ds	1
   604  000011                     ?_pad:
   605                           	callstack 0
   606  000011                     lcd_sendNibble@packet:
   607                           	callstack 0
   608  000011                     lcd_sendByte@nibbleLow:
   609                           	callstack 0
   610  000011                     ___aodiv@counter:
   611                           	callstack 0
   612  000011                     ___aomod@counter:
   613                           	callstack 0
   614  000011                     pad@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x10
   618  000011                     	ds	1
   619  000012                     lcd_sendByte@byte:
   620                           	callstack 0
   621  000012                     ___aodiv@sign:
   622                           	callstack 0
   623  000012                     ___aomod@sign:
   624                           	callstack 0
   625  000012                     _atoi$1423:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x11
   629  000012                     	ds	1
   630  000013                     ?_abs:
   631                           	callstack 0
   632  000013                     lcd_sendByte@packetHigh:
   633                           	callstack 0
   634  000013                     pad@buf:
   635                           	callstack 0
   636  000013                     abs@a:
   637                           	callstack 0
   638  000013                     ___aodiv@quotient:
   639                           	callstack 0
   640                           
   641                           ; 8 bytes @ 0x12
   642  000013                     	ds	1
   643  000014                     lcd_sendByte@packetLow:
   644                           	callstack 0
   645  000014                     _atoi$1422:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x13
   649  000014                     	ds	1
   650  000015                     ??_abs:
   651  000015                     lcd_setAddr@character:
   652                           	callstack 0
   653  000015                     lcd_writeChar@character:
   654                           	callstack 0
   655  000015                     pad@p:
   656                           	callstack 0
   657  000015                     atoi@n:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x14
   661  000015                     	ds	1
   662  000016                     lcd_setAddr@row:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x15
   666  000016                     	ds	1
   667  000017                     ??_pad:
   668  000017                     User_lcd_writeString@string:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x16
   672  000017                     	ds	1
   673  000018                     pad@i:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x17
   677  000018                     	ds	1
   678  000019                     User_lcd_writeString@row:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x18
   682  000019                     	ds	1
   683  00001A                     User_lcd_writeString@column:
   684                           	callstack 0
   685  00001A                     pad@w:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x19
   689  00001A                     	ds	1
   690  00001B                     ??_User_lcd_writeString:
   691                           
   692                           ; 1 bytes @ 0x1A
   693  00001B                     	ds	1
   694  00001C                     ?_dtoa:
   695                           	callstack 0
   696  00001C                     dtoa@fp:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x1B
   700  00001C                     	ds	1
   701  00001D                     User_lcd_writeString@i:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x1C
   705  00001D                     	ds	1
   706  00001E                     dtoa@d:
   707                           	callstack 0
   708                           
   709                           ; 8 bytes @ 0x1D
   710  00001E                     	ds	8
   711  000026                     ??_dtoa:
   712                           
   713                           ; 1 bytes @ 0x25
   714  000026                     	ds	8
   715  00002E                     _dtoa$1385:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x2D
   719  00002E                     	ds	2
   720  000030                     dtoa@p:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2F
   724  000030                     	ds	2
   725  000032                     dtoa@w:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x31
   729  000032                     	ds	2
   730  000034                     dtoa@s:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x33
   734  000034                     	ds	2
   735  000036                     dtoa@n:
   736                           	callstack 0
   737                           
   738                           ; 8 bytes @ 0x35
   739  000036                     	ds	8
   740  00003E                     dtoa@i:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x3D
   744  00003E                     	ds	2
   745  000040                     ?_vfpfcnvrt:
   746                           	callstack 0
   747  000040                     vfpfcnvrt@fp:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x3F
   751  000040                     	ds	2
   752  000042                     vfpfcnvrt@fmt:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x41
   756  000042                     	ds	2
   757  000044                     vfpfcnvrt@ap:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x43
   761  000044                     	ds	2
   762  000046                     ??_vfpfcnvrt:
   763                           
   764                           ; 1 bytes @ 0x45
   765  000046                     	ds	4
   766  00004A                     vfpfcnvrt@ll:
   767                           	callstack 0
   768                           
   769                           ; 8 bytes @ 0x49
   770  00004A                     	ds	8
   771  000052                     vfpfcnvrt@done:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x51
   775  000052                     	ds	2
   776  000054                     _vfpfcnvrt$1400:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x53
   780  000054                     	ds	2
   781  000056                     vfpfcnvrt@c:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x55
   785  000056                     	ds	1
   786  000057                     ?_vfprintf:
   787                           	callstack 0
   788  000057                     vfprintf@fp:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x56
   792  000057                     	ds	2
   793  000059                     vfprintf@fmt:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x58
   797  000059                     	ds	2
   798  00005B                     vfprintf@ap:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x5A
   802  00005B                     	ds	2
   803  00005D                     vfprintf@cfmt:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x5C
   807  00005D                     	ds	2
   808  00005F                     ??_GDapplication:
   809  00005F                     
   810                           ; 1 bytes @ 0x5E
   811  00005F                     	ds	1
   812  000060                     
   813                           ; 1 bytes @ 0x5F
   814 ;;
   815 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   816 ;;
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 51 in file "main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels required when called:    9
   839 ;; This function calls:
   840 ;;		_ApplicationInit
   841 ;;		_GDapplication
   842 ;;		_SYSTEM_Initialize
   843 ;; This function is called by:
   844 ;;		Startup code after reset
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text0
   849  0027AA                     __ptext0:
   850                           	callstack 0
   851  0027AA                     _main:
   852                           	callstack 22
   853  0027AA                     
   854                           ;main.c: 54:     SYSTEM_Initialize();
   855  0027AA  EC52  F013         	call	_SYSTEM_Initialize	;wreg free
   856  0027AE                     
   857                           ;main.c: 71:     ApplicationInit();
   858  0027AE  EC83  F012         	call	_ApplicationInit	;wreg free
   859  0027B2                     l2887:
   860                           
   861                           ;main.c: 74:     {;main.c: 76:         GDapplication();
   862  0027B2  EC71  F00D         	call	_GDapplication	;wreg free
   863  0027B6  EFD9  F013         	goto	l2887
   864  0027BA  EF00  F000         	goto	start
   865  0027BE                     __end_of_main:
   866                           	callstack 0
   867                           
   868 ;; *************** function _SYSTEM_Initialize *****************
   869 ;; Defined at:
   870 ;;		line 50 in file "mcc_generated_files/mcc.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   888 ;;Total ram usage:        0 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    8
   891 ;; This function calls:
   892 ;;		_CLC1_Initialize
   893 ;;		_CLC2_Initialize
   894 ;;		_CLC5_Initialize
   895 ;;		_CLC6_Initialize
   896 ;;		_OSCILLATOR_Initialize
   897 ;;		_PIN_MANAGER_Initialize
   898 ;;		_PMD_Initialize
   899 ;;		_SPI1_Initialize
   900 ;;		_lcd_setup
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text1
   907  0026A4                     __ptext1:
   908                           	callstack 0
   909  0026A4                     _SYSTEM_Initialize:
   910                           	callstack 22
   911  0026A4                     
   912                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   913  0026A4  EC8A  F013         	call	_PMD_Initialize	;wreg free
   914                           
   915                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
   916  0026A8  EC78  F013         	call	_SPI1_Initialize	;wreg free
   917                           
   918                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   919  0026AC  ECFE  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
   920                           
   921                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   922  0026B0  ECA6  F013         	call	_OSCILLATOR_Initialize	;wreg free
   923                           
   924                           ;mcc_generated_files/mcc.c: 56:     CLC1_Initialize();
   925  0026B4  EC28  F013         	call	_CLC1_Initialize	;wreg free
   926                           
   927                           ;mcc_generated_files/mcc.c: 57:     CLC5_Initialize();
   928  0026B8  ECFC  F012         	call	_CLC5_Initialize	;wreg free
   929                           
   930                           ;mcc_generated_files/mcc.c: 58:     CLC6_Initialize();
   931  0026BC  ECE6  F012         	call	_CLC6_Initialize	;wreg free
   932                           
   933                           ;mcc_generated_files/mcc.c: 59:     CLC2_Initialize();
   934  0026C0  EC12  F013         	call	_CLC2_Initialize	;wreg free
   935  0026C4                     
   936                           ;mcc_generated_files/mcc.c: 60:     lcd_setup();
   937  0026C4  ECAB  F00F         	call	_lcd_setup	;wreg free
   938  0026C8  0012               	return		;funcret
   939  0026CA                     __end_of_SYSTEM_Initialize:
   940                           	callstack 0
   941                           
   942 ;; *************** function _lcd_setup *****************
   943 ;; Defined at:
   944 ;;		line 87 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    7
   965 ;; This function calls:
   966 ;;		_DELAY_milliseconds
   967 ;;		_expander_setOutput
   968 ;;		_expander_setup
   969 ;;		_lcd_clearDisplay
   970 ;;		_lcd_returnHome
   971 ;;		_lcd_sendByte
   972 ;;		_lcd_sendNibble
   973 ;; This function is called by:
   974 ;;		_SYSTEM_Initialize
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text2
   979  001F56                     __ptext2:
   980                           	callstack 0
   981  001F56                     _lcd_setup:
   982                           	callstack 22
   983  001F56                     
   984                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 88:     LATDbits.LATD4 = 1;
   985  001F56  8885               	bsf	133,4,c	;volatile
   986                           
   987                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 89:     LATAbits.LATA0 = 1;
   988  001F58  8082               	bsf	130,0,c	;volatile
   989                           
   990                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 90:     LATAbits.LATA7 = 1;
   991  001F5A  8E82               	bsf	130,7,c	;volatile
   992  001F5C                     
   993                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 91:     expander_setup();
   994  001F5C  ECF6  F013         	call	_expander_setup	;wreg free
   995                           
   996                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 92:     expander_setOutput(0);
   997  001F60  0E00               	movlw	0
   998  001F62  ECEF  F013         	call	_expander_setOutput
   999  001F66                     
  1000                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 93:     DELAY_milliseconds(40);
  1001  001F66  0E00               	movlw	0
  1002  001F68  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1003  001F6A  0E28               	movlw	40
  1004  001F6C  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1005  001F6E  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  1006  001F72                     
  1007                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 94:     lcd_sendNibble(0b11, 0);
  1008  001F72  0E00               	movlw	0
  1009  001F74  6E0E               	movwf	lcd_sendNibble@RSbit^0,c
  1010  001F76  0E03               	movlw	3
  1011  001F78  ECCB  F011         	call	_lcd_sendNibble
  1012                           
  1013                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 95:     DELAY_milliseconds(10);
  1014  001F7C  0E00               	movlw	0
  1015  001F7E  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1016  001F80  0E0A               	movlw	10
  1017  001F82  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1018  001F84  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  1019  001F88                     
  1020                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 97:     lcd_sendNibble(0b11, 0);
  1021  001F88  0E00               	movlw	0
  1022  001F8A  6E0E               	movwf	lcd_sendNibble@RSbit^0,c
  1023  001F8C  0E03               	movlw	3
  1024  001F8E  ECCB  F011         	call	_lcd_sendNibble
  1025  001F92                     
  1026                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 98:     DELAY_milliseconds(10);
  1027  001F92  0E00               	movlw	0
  1028  001F94  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1029  001F96  0E0A               	movlw	10
  1030  001F98  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1031  001F9A  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  1032                           
  1033                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 99:     lcd_sendNibble(0b11, 0);
  1034  001F9E  0E00               	movlw	0
  1035  001FA0  6E0E               	movwf	lcd_sendNibble@RSbit^0,c
  1036  001FA2  0E03               	movlw	3
  1037  001FA4  ECCB  F011         	call	_lcd_sendNibble
  1038  001FA8                     
  1039                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 100:     DELAY_milliseconds(10);
  1040  001FA8  0E00               	movlw	0
  1041  001FAA  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1042  001FAC  0E0A               	movlw	10
  1043  001FAE  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1044  001FB0  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  1045  001FB4                     
  1046                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 101:     lcd_sendNibble(0x2,0);
  1047  001FB4  0E00               	movlw	0
  1048  001FB6  6E0E               	movwf	lcd_sendNibble@RSbit^0,c
  1049  001FB8  0E02               	movlw	2
  1050  001FBA  ECCB  F011         	call	_lcd_sendNibble
  1051  001FBE                     
  1052                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 102:     lcd_sendByte(0x2C, 0);
  1053  001FBE  0E00               	movlw	0
  1054  001FC0  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  1055  001FC2  0E2C               	movlw	44
  1056  001FC4  EC98  F010         	call	_lcd_sendByte
  1057  001FC8                     
  1058                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 103:     lcd_sendByte(0b1100, 0);
  1059  001FC8  0E00               	movlw	0
  1060  001FCA  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  1061  001FCC  0E0C               	movlw	12
  1062  001FCE  EC98  F010         	call	_lcd_sendByte
  1063  001FD2                     
  1064                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 104:     lcd_sendByte(0x06, 0);
  1065  001FD2  0E00               	movlw	0
  1066  001FD4  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  1067  001FD6  0E06               	movlw	6
  1068  001FD8  EC98  F010         	call	_lcd_sendByte
  1069  001FDC                     
  1070                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 105:     lcd_sendByte(0x0C, 0);
  1071  001FDC  0E00               	movlw	0
  1072  001FDE  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  1073  001FE0  0E0C               	movlw	12
  1074  001FE2  EC98  F010         	call	_lcd_sendByte
  1075                           
  1076                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 106:     DELAY_milliseconds(2);
  1077  001FE6  0E00               	movlw	0
  1078  001FE8  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1079  001FEA  0E02               	movlw	2
  1080  001FEC  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1081  001FEE  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  1082  001FF2                     
  1083                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 107:     lcd_returnHome();
  1084  001FF2  ECBE  F013         	call	_lcd_returnHome	;wreg free
  1085  001FF6                     
  1086                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 108:     lcd_clearDisplay();
  1087  001FF6  ECB2  F013         	call	_lcd_clearDisplay	;wreg free
  1088  001FFA  0012               	return		;funcret
  1089  001FFC                     __end_of_lcd_setup:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _lcd_sendNibble *****************
  1093 ;; Defined at:
  1094 ;;		line 29 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  nibble          1    wreg     unsigned char 
  1097 ;;  RSbit           1   13[COMRAM] _Bool 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  nibble          1   15[COMRAM] unsigned char 
  1100 ;;  packet          1   16[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1110 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;Total ram usage:        4 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    5
  1117 ;; This function calls:
  1118 ;;		_DELAY_milliseconds
  1119 ;;		_expander_setOutput
  1120 ;; This function is called by:
  1121 ;;		_lcd_setup
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text3
  1126  002396                     __ptext3:
  1127                           	callstack 0
  1128  002396                     _lcd_sendNibble:
  1129                           	callstack 23
  1130                           
  1131                           ;incstack = 0
  1132                           ;lcd_sendNibble@nibble stored from wreg
  1133  002396  6E10               	movwf	lcd_sendNibble@nibble^0,c
  1134  002398                     
  1135                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 30:     uint8_t packet = (nibble << 4) | (RSb
      +                          it << 2);
  1136  002398  C00E  F00F         	movff	lcd_sendNibble@RSbit,??_lcd_sendNibble
  1137  00239C  90D8               	bcf	status,0,c
  1138  00239E  360F               	rlcf	??_lcd_sendNibble^0,f,c
  1139  0023A0  90D8               	bcf	status,0,c
  1140  0023A2  360F               	rlcf	??_lcd_sendNibble^0,f,c
  1141  0023A4  3810               	swapf	lcd_sendNibble@nibble^0,w,c
  1142  0023A6  0BF0               	andlw	240
  1143  0023A8  100F               	iorwf	??_lcd_sendNibble^0,w,c
  1144  0023AA  6E11               	movwf	lcd_sendNibble@packet^0,c
  1145  0023AC                     
  1146                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 31:     expander_setOutput(packet);
  1147  0023AC  5011               	movf	lcd_sendNibble@packet^0,w,c
  1148  0023AE  ECEF  F013         	call	_expander_setOutput
  1149  0023B2                     
  1150                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 32:     expander_setOutput(packet | (1<<3));
  1151  0023B2  5011               	movf	lcd_sendNibble@packet^0,w,c
  1152  0023B4  0908               	iorlw	8
  1153  0023B6  ECEF  F013         	call	_expander_setOutput
  1154  0023BA                     
  1155                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 33:     DELAY_milliseconds(1);
  1156  0023BA  0E00               	movlw	0
  1157  0023BC  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1158  0023BE  0E01               	movlw	1
  1159  0023C0  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1160  0023C2  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  1161  0023C6                     
  1162                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 34:     expander_setOutput(packet);
  1163  0023C6  5011               	movf	lcd_sendNibble@packet^0,w,c
  1164  0023C8  ECEF  F013         	call	_expander_setOutput
  1165  0023CC                     
  1166                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 35:     DELAY_milliseconds(40);
  1167  0023CC  0E00               	movlw	0
  1168  0023CE  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  1169  0023D0  0E28               	movlw	40
  1170  0023D2  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  1171  0023D4  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  1172  0023D8  0012               	return		;funcret
  1173  0023DA                     __end_of_lcd_sendNibble:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _expander_setup *****************
  1177 ;; Defined at:
  1178 ;;		line 44 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    4
  1199 ;; This function calls:
  1200 ;;		_expander_sendByte
  1201 ;; This function is called by:
  1202 ;;		_lcd_setup
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text4
  1207  0027EC                     __ptext4:
  1208                           	callstack 0
  1209  0027EC                     _expander_setup:
  1210                           	callstack 24
  1211  0027EC                     
  1212                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 45:     expander_sendByte(0x01, 0);
  1213  0027EC  0E00               	movlw	0
  1214  0027EE  6E08               	movwf	expander_sendByte@byte^0,c
  1215  0027F0  0E01               	movlw	1
  1216  0027F2  EC9D  F012         	call	_expander_sendByte
  1217  0027F6  0012               	return		;funcret
  1218  0027F8                     __end_of_expander_setup:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _SPI1_Initialize *****************
  1222 ;; Defined at:
  1223 ;;		line 70 in file "mcc_generated_files/spi1.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_SYSTEM_Initialize
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text5
  1251  0026F0                     __ptext5:
  1252                           	callstack 0
  1253  0026F0                     _SPI1_Initialize:
  1254                           	callstack 29
  1255  0026F0                     
  1256                           ;mcc_generated_files/spi1.c: 73:     uint8_t *data = block;
  1257  0026F0  0E16               	movlw	22
  1258  0026F2  010E               	movlb	14	; () banked
  1259  0026F4  6FB2               	movwf	178,b	;volatile
  1260                           
  1261                           ;mcc_generated_files/spi1.c: 74:     while(blockSize--)
  1262  0026F6  0E15               	movlw	21
  1263  0026F8  6FB3               	movwf	179,b	;volatile
  1264                           
  1265                           ;mcc_generated_files/spi1.c: 75:     {
  1266  0026FA  0E0F               	movlw	15
  1267  0026FC  6FF8               	movwf	248,b	;volatile
  1268                           
  1269                           ;mcc_generated_files/spi1.c: 76:         SPI1_ExchangeByte(*data++);
  1270  0026FE  0E10               	movlw	16
  1271  002700  6FF6               	movwf	246,b	;volatile
  1272                           
  1273                           ;mcc_generated_files/spi1.c: 78: }
  1274  002702  0E40               	movlw	64
  1275  002704  6E94               	movwf	148,c	;volatile
  1276                           
  1277                           ;mcc_generated_files/spi1.c: 79: 
  1278  002706  0E00               	movlw	0
  1279  002708  6E95               	movwf	149,c	;volatile
  1280                           
  1281                           ;mcc_generated_files/spi1.c: 80: void SPI1_ReadBlock(void *block, size_t blockSize)
  1282  00270A  0E01               	movlw	1
  1283  00270C  6E92               	movwf	146,c	;volatile
  1284  00270E                     
  1285                           ; BSR set to: 14
  1286                           ;mcc_generated_files/spi1.c: 81: {
  1287  00270E  9C89               	bcf	137,6,c	;volatile
  1288  002710                     
  1289                           ; BSR set to: 14
  1290                           ;mcc_generated_files/spi1.c: 82:     uint8_t *data = block;
  1291  002710  9A95               	bcf	149,5,c	;volatile
  1292  002712                     
  1293                           ; BSR set to: 14
  1294  002712  0012               	return		;funcret
  1295  002714                     __end_of_SPI1_Initialize:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _PMD_Initialize *****************
  1299 ;; Defined at:
  1300 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1318 ;;Total ram usage:        0 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_SYSTEM_Initialize
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text6
  1328  002714                     __ptext6:
  1329                           	callstack 0
  1330  002714                     _PMD_Initialize:
  1331                           	callstack 29
  1332  002714                     
  1333                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  1334  002714  0E00               	movlw	0
  1335  002716  010E               	movlb	14	; () banked
  1336  002718  6FDC               	movwf	220,b	;volatile
  1337                           
  1338                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  1339  00271A  0E00               	movlw	0
  1340  00271C  6FDD               	movwf	221,b	;volatile
  1341                           
  1342                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  1343  00271E  0E00               	movlw	0
  1344  002720  6FDE               	movwf	222,b	;volatile
  1345                           
  1346                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  1347  002722  0E00               	movlw	0
  1348  002724  6FDF               	movwf	223,b	;volatile
  1349                           
  1350                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  1351  002726  0E00               	movlw	0
  1352  002728  6FE0               	movwf	224,b	;volatile
  1353                           
  1354                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  1355  00272A  0E00               	movlw	0
  1356  00272C  6FE1               	movwf	225,b	;volatile
  1357  00272E                     
  1358                           ; BSR set to: 14
  1359  00272E  0012               	return		;funcret
  1360  002730                     __end_of_PMD_Initialize:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _PIN_MANAGER_Initialize *****************
  1364 ;; Defined at:
  1365 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, status,2
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1383 ;;Total ram usage:        0 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_SYSTEM_Initialize
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text7
  1393  001FFC                     __ptext7:
  1394                           	callstack 0
  1395  001FFC                     _PIN_MANAGER_Initialize:
  1396                           	callstack 29
  1397  001FFC                     
  1398                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1399  001FFC  0E00               	movlw	0
  1400  001FFE  6E86               	movwf	134,c	;volatile
  1401                           
  1402                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1403  002000  0E00               	movlw	0
  1404  002002  6E85               	movwf	133,c	;volatile
  1405                           
  1406                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1407  002004  0E00               	movlw	0
  1408  002006  6E82               	movwf	130,c	;volatile
  1409                           
  1410                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1411  002008  0E00               	movlw	0
  1412  00200A  6E83               	movwf	131,c	;volatile
  1413                           
  1414                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1415  00200C  0E00               	movlw	0
  1416  00200E  6E84               	movwf	132,c	;volatile
  1417                           
  1418                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1419  002010  0E07               	movlw	7
  1420  002012  6E8B               	movwf	139,c	;volatile
  1421                           
  1422                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7E;
  1423  002014  0E7E               	movlw	126
  1424  002016  6E87               	movwf	135,c	;volatile
  1425  002018                     
  1426                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1427  002018  6888               	setf	136,c	;volatile
  1428                           
  1429                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xAF;
  1430  00201A  0EAF               	movlw	175
  1431  00201C  6E89               	movwf	137,c	;volatile
  1432                           
  1433                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xEF;
  1434  00201E  0EEF               	movlw	239
  1435  002020  6E8A               	movwf	138,c	;volatile
  1436                           
  1437                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xE3;
  1438  002022  0EE3               	movlw	227
  1439  002024  010F               	movlb	15	; () banked
  1440  002026  6F21               	movwf	33,b	;volatile
  1441                           
  1442                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x8F;
  1443  002028  0E8F               	movlw	143
  1444  00202A  6F1C               	movwf	28,b	;volatile
  1445  00202C                     
  1446                           ; BSR set to: 15
  1447                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  1448  00202C  6914               	setf	20,b	;volatile
  1449                           
  1450                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1451  00202E  0E07               	movlw	7
  1452  002030  6F29               	movwf	41,b	;volatile
  1453                           
  1454                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x4E;
  1455  002032  0E4E               	movlw	78
  1456  002034  6F0C               	movwf	12,b	;volatile
  1457                           
  1458                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x0C;
  1459  002036  0E0C               	movlw	12
  1460  002038  6F20               	movwf	32,b	;volatile
  1461                           
  1462                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1463  00203A  0E00               	movlw	0
  1464  00203C  6F28               	movwf	40,b	;volatile
  1465                           
  1466                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1467  00203E  0E00               	movlw	0
  1468  002040  6F13               	movwf	19,b	;volatile
  1469                           
  1470                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x30;
  1471  002042  0E30               	movlw	48
  1472  002044  6F0B               	movwf	11,b	;volatile
  1473                           
  1474                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x03;
  1475  002046  0E03               	movlw	3
  1476  002048  6F1B               	movwf	27,b	;volatile
  1477                           
  1478                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1479  00204A  0E00               	movlw	0
  1480  00204C  6F27               	movwf	39,b	;volatile
  1481                           
  1482                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1483  00204E  0E00               	movlw	0
  1484  002050  6F0A               	movwf	10,b	;volatile
  1485                           
  1486                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1487  002052  0E00               	movlw	0
  1488  002054  6F12               	movwf	18,b	;volatile
  1489                           
  1490                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1491  002056  0E00               	movlw	0
  1492  002058  6F1A               	movwf	26,b	;volatile
  1493                           
  1494                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1495  00205A  0E00               	movlw	0
  1496  00205C  6F1F               	movwf	31,b	;volatile
  1497  00205E                     
  1498                           ; BSR set to: 15
  1499                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1500  00205E  6909               	setf	9,b	;volatile
  1501  002060                     
  1502                           ; BSR set to: 15
  1503                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1504  002060  6911               	setf	17,b	;volatile
  1505  002062                     
  1506                           ; BSR set to: 15
  1507                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1508  002062  6919               	setf	25,b	;volatile
  1509  002064                     
  1510                           ; BSR set to: 15
  1511                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1512  002064  691E               	setf	30,b	;volatile
  1513                           
  1514                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1515  002066  0E07               	movlw	7
  1516  002068  6F26               	movwf	38,b	;volatile
  1517  00206A                     
  1518                           ; BSR set to: 15
  1519                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1520  00206A  6908               	setf	8,b	;volatile
  1521  00206C                     
  1522                           ; BSR set to: 15
  1523                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1524  00206C  6910               	setf	16,b	;volatile
  1525  00206E                     
  1526                           ; BSR set to: 15
  1527                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1528  00206E  6918               	setf	24,b	;volatile
  1529  002070                     
  1530                           ; BSR set to: 15
  1531                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1532  002070  691D               	setf	29,b	;volatile
  1533                           
  1534                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1535  002072  0E0F               	movlw	15
  1536  002074  6F25               	movwf	37,b	;volatile
  1537                           
  1538                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x16;
  1539  002076  0E16               	movlw	22
  1540  002078  010E               	movlb	14	; () banked
  1541  00207A  6FB2               	movwf	178,b	;volatile
  1542                           
  1543                           ;mcc_generated_files/pin_manager.c: 128:     CLCIN0PPS = 0x04;
  1544  00207C  0E04               	movlw	4
  1545  00207E  6F1F               	movwf	31,b	;volatile
  1546                           
  1547                           ;mcc_generated_files/pin_manager.c: 129:     CLCIN3PPS = 0x1B;
  1548  002080  0E1B               	movlw	27
  1549  002082  6F22               	movwf	34,b	;volatile
  1550                           
  1551                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
  1552  002084  0E10               	movlw	16
  1553  002086  6FF6               	movwf	246,b	;volatile
  1554                           
  1555                           ;mcc_generated_files/pin_manager.c: 131:     CLCIN2PPS = 0x1A;
  1556  002088  0E1A               	movlw	26
  1557  00208A  6F21               	movwf	33,b	;volatile
  1558                           
  1559                           ;mcc_generated_files/pin_manager.c: 132:     CLCIN1PPS = 0x05;
  1560  00208C  0E05               	movlw	5
  1561  00208E  6F20               	movwf	32,b	;volatile
  1562                           
  1563                           ;mcc_generated_files/pin_manager.c: 133:     RC6PPS = 0x0F;
  1564  002090  0E0F               	movlw	15
  1565  002092  6FF8               	movwf	248,b	;volatile
  1566                           
  1567                           ;mcc_generated_files/pin_manager.c: 134:     SSP1DATPPS = 0x15;
  1568  002094  0E15               	movlw	21
  1569  002096  6FB3               	movwf	179,b	;volatile
  1570  002098                     
  1571                           ; BSR set to: 14
  1572  002098  0012               	return		;funcret
  1573  00209A                     __end_of_PIN_MANAGER_Initialize:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _OSCILLATOR_Initialize *****************
  1577 ;; Defined at:
  1578 ;;		line 63 in file "mcc_generated_files/mcc.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_SYSTEM_Initialize
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text8
  1606  00274C                     __ptext8:
  1607                           	callstack 0
  1608  00274C                     _OSCILLATOR_Initialize:
  1609                           	callstack 29
  1610  00274C                     
  1611                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  1612  00274C  0E60               	movlw	96
  1613  00274E  010E               	movlb	14	; () banked
  1614  002750  6FD3               	movwf	211,b	;volatile
  1615                           
  1616                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  1617  002752  0E00               	movlw	0
  1618  002754  6FD5               	movwf	213,b	;volatile
  1619                           
  1620                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  1621  002756  0E00               	movlw	0
  1622  002758  6FD7               	movwf	215,b	;volatile
  1623                           
  1624                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x00;
  1625  00275A  0E00               	movlw	0
  1626  00275C  6FD9               	movwf	217,b	;volatile
  1627                           
  1628                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  1629  00275E  0E00               	movlw	0
  1630  002760  6FD8               	movwf	216,b	;volatile
  1631  002762                     
  1632                           ; BSR set to: 14
  1633  002762  0012               	return		;funcret
  1634  002764                     __end_of_OSCILLATOR_Initialize:
  1635                           	callstack 0
  1636                           
  1637 ;; *************** function _CLC6_Initialize *****************
  1638 ;; Defined at:
  1639 ;;		line 58 in file "mcc_generated_files/clc6.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1657 ;;Total ram usage:        0 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_SYSTEM_Initialize
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text9
  1667  0025CC                     __ptext9:
  1668                           	callstack 0
  1669  0025CC                     _CLC6_Initialize:
  1670                           	callstack 29
  1671  0025CC                     
  1672                           ;mcc_generated_files/clc6.c: 63:     CLC6POL = 0x00;
  1673  0025CC  0E00               	movlw	0
  1674  0025CE  010E               	movlb	14	; () banked
  1675  0025D0  6F5A               	movwf	90,b	;volatile
  1676                           
  1677                           ;mcc_generated_files/clc6.c: 65:     CLC6SEL0 = 0x03;
  1678  0025D2  0E03               	movlw	3
  1679  0025D4  6F5B               	movwf	91,b	;volatile
  1680                           
  1681                           ;mcc_generated_files/clc6.c: 67:     CLC6SEL1 = 0x0F;
  1682  0025D6  0E0F               	movlw	15
  1683  0025D8  6F5C               	movwf	92,b	;volatile
  1684                           
  1685                           ;mcc_generated_files/clc6.c: 69:     CLC6SEL2 = 0x0F;
  1686  0025DA  0E0F               	movlw	15
  1687  0025DC  6F5D               	movwf	93,b	;volatile
  1688                           
  1689                           ;mcc_generated_files/clc6.c: 71:     CLC6SEL3 = 0x0F;
  1690  0025DE  0E0F               	movlw	15
  1691  0025E0  6F5E               	movwf	94,b	;volatile
  1692                           
  1693                           ;mcc_generated_files/clc6.c: 73:     CLC6GLS0 = 0x01;
  1694  0025E2  0E01               	movlw	1
  1695  0025E4  6F5F               	movwf	95,b	;volatile
  1696                           
  1697                           ;mcc_generated_files/clc6.c: 75:     CLC6GLS1 = 0x00;
  1698  0025E6  0E00               	movlw	0
  1699  0025E8  6F60               	movwf	96,b	;volatile
  1700                           
  1701                           ;mcc_generated_files/clc6.c: 77:     CLC6GLS2 = 0x00;
  1702  0025EA  0E00               	movlw	0
  1703  0025EC  6F61               	movwf	97,b	;volatile
  1704                           
  1705                           ;mcc_generated_files/clc6.c: 79:     CLC6GLS3 = 0x00;
  1706  0025EE  0E00               	movlw	0
  1707  0025F0  6F62               	movwf	98,b	;volatile
  1708                           
  1709                           ;mcc_generated_files/clc6.c: 81:     CLC6CON = 0x81;
  1710  0025F2  0E81               	movlw	129
  1711  0025F4  6F59               	movwf	89,b	;volatile
  1712  0025F6                     
  1713                           ; BSR set to: 14
  1714  0025F6  0012               	return		;funcret
  1715  0025F8                     __end_of_CLC6_Initialize:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _CLC5_Initialize *****************
  1719 ;; Defined at:
  1720 ;;		line 58 in file "mcc_generated_files/clc5.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_SYSTEM_Initialize
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text10
  1748  0025F8                     __ptext10:
  1749                           	callstack 0
  1750  0025F8                     _CLC5_Initialize:
  1751                           	callstack 29
  1752  0025F8                     
  1753                           ;mcc_generated_files/clc5.c: 63:     CLC5POL = 0x00;
  1754  0025F8  0E00               	movlw	0
  1755  0025FA  010E               	movlb	14	; () banked
  1756  0025FC  6F50               	movwf	80,b	;volatile
  1757                           
  1758                           ;mcc_generated_files/clc5.c: 65:     CLC5SEL0 = 0x03;
  1759  0025FE  0E03               	movlw	3
  1760  002600  6F51               	movwf	81,b	;volatile
  1761                           
  1762                           ;mcc_generated_files/clc5.c: 67:     CLC5SEL1 = 0x0F;
  1763  002602  0E0F               	movlw	15
  1764  002604  6F52               	movwf	82,b	;volatile
  1765                           
  1766                           ;mcc_generated_files/clc5.c: 69:     CLC5SEL2 = 0x0F;
  1767  002606  0E0F               	movlw	15
  1768  002608  6F53               	movwf	83,b	;volatile
  1769                           
  1770                           ;mcc_generated_files/clc5.c: 71:     CLC5SEL3 = 0x02;
  1771  00260A  0E02               	movlw	2
  1772  00260C  6F54               	movwf	84,b	;volatile
  1773                           
  1774                           ;mcc_generated_files/clc5.c: 73:     CLC5GLS0 = 0x01;
  1775  00260E  0E01               	movlw	1
  1776  002610  6F55               	movwf	85,b	;volatile
  1777                           
  1778                           ;mcc_generated_files/clc5.c: 75:     CLC5GLS1 = 0x00;
  1779  002612  0E00               	movlw	0
  1780  002614  6F56               	movwf	86,b	;volatile
  1781                           
  1782                           ;mcc_generated_files/clc5.c: 77:     CLC5GLS2 = 0x00;
  1783  002616  0E00               	movlw	0
  1784  002618  6F57               	movwf	87,b	;volatile
  1785                           
  1786                           ;mcc_generated_files/clc5.c: 79:     CLC5GLS3 = 0x40;
  1787  00261A  0E40               	movlw	64
  1788  00261C  6F58               	movwf	88,b	;volatile
  1789                           
  1790                           ;mcc_generated_files/clc5.c: 81:     CLC5CON = 0x81;
  1791  00261E  0E81               	movlw	129
  1792  002620  6F4F               	movwf	79,b	;volatile
  1793  002622                     
  1794                           ; BSR set to: 14
  1795  002622  0012               	return		;funcret
  1796  002624                     __end_of_CLC5_Initialize:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _CLC2_Initialize *****************
  1800 ;; Defined at:
  1801 ;;		line 58 in file "mcc_generated_files/clc2.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_SYSTEM_Initialize
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text11
  1829  002624                     __ptext11:
  1830                           	callstack 0
  1831  002624                     _CLC2_Initialize:
  1832                           	callstack 29
  1833  002624                     
  1834                           ;mcc_generated_files/clc2.c: 63:     CLC2POL = 0x00;
  1835  002624  0E00               	movlw	0
  1836  002626  010E               	movlb	14	; () banked
  1837  002628  6F32               	movwf	50,b	;volatile
  1838                           
  1839                           ;mcc_generated_files/clc2.c: 65:     CLC2SEL0 = 0x25;
  1840  00262A  0E25               	movlw	37
  1841  00262C  6F33               	movwf	51,b	;volatile
  1842                           
  1843                           ;mcc_generated_files/clc2.c: 67:     CLC2SEL1 = 0x0F;
  1844  00262E  0E0F               	movlw	15
  1845  002630  6F34               	movwf	52,b	;volatile
  1846                           
  1847                           ;mcc_generated_files/clc2.c: 69:     CLC2SEL2 = 0x0F;
  1848  002632  0E0F               	movlw	15
  1849  002634  6F35               	movwf	53,b	;volatile
  1850                           
  1851                           ;mcc_generated_files/clc2.c: 71:     CLC2SEL3 = 0x01;
  1852  002636  0E01               	movlw	1
  1853  002638  6F36               	movwf	54,b	;volatile
  1854                           
  1855                           ;mcc_generated_files/clc2.c: 73:     CLC2GLS0 = 0x02;
  1856  00263A  0E02               	movlw	2
  1857  00263C  6F37               	movwf	55,b	;volatile
  1858                           
  1859                           ;mcc_generated_files/clc2.c: 75:     CLC2GLS1 = 0x00;
  1860  00263E  0E00               	movlw	0
  1861  002640  6F38               	movwf	56,b	;volatile
  1862                           
  1863                           ;mcc_generated_files/clc2.c: 77:     CLC2GLS2 = 0x00;
  1864  002642  0E00               	movlw	0
  1865  002644  6F39               	movwf	57,b	;volatile
  1866                           
  1867                           ;mcc_generated_files/clc2.c: 79:     CLC2GLS3 = 0x40;
  1868  002646  0E40               	movlw	64
  1869  002648  6F3A               	movwf	58,b	;volatile
  1870                           
  1871                           ;mcc_generated_files/clc2.c: 81:     CLC2CON = 0x81;
  1872  00264A  0E81               	movlw	129
  1873  00264C  6F31               	movwf	49,b	;volatile
  1874  00264E                     
  1875                           ; BSR set to: 14
  1876  00264E  0012               	return		;funcret
  1877  002650                     __end_of_CLC2_Initialize:
  1878                           	callstack 0
  1879                           
  1880 ;; *************** function _CLC1_Initialize *****************
  1881 ;; Defined at:
  1882 ;;		line 58 in file "mcc_generated_files/clc1.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_SYSTEM_Initialize
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text12
  1910  002650                     __ptext12:
  1911                           	callstack 0
  1912  002650                     _CLC1_Initialize:
  1913                           	callstack 29
  1914  002650  0E00               	movlw	0
  1915  002652  010E               	movlb	14	; () banked
  1916  002654  6F28               	movwf	40,b	;volatile
  1917  002656  0E22               	movlw	34
  1918  002658  6F29               	movwf	41,b	;volatile
  1919  00265A  0E0F               	movlw	15
  1920  00265C  6F2A               	movwf	42,b	;volatile
  1921  00265E  0E0F               	movlw	15
  1922  002660  6F2B               	movwf	43,b	;volatile
  1923  002662  0E00               	movlw	0
  1924  002664  6F2C               	movwf	44,b	;volatile
  1925  002666  0E02               	movlw	2
  1926  002668  6F2D               	movwf	45,b	;volatile
  1927  00266A  0E00               	movlw	0
  1928  00266C  6F2E               	movwf	46,b	;volatile
  1929  00266E  0E00               	movlw	0
  1930  002670  6F2F               	movwf	47,b	;volatile
  1931  002672  0E40               	movlw	64
  1932  002674  6F30               	movwf	48,b	;volatile
  1933  002676  0E81               	movlw	129
  1934  002678  6F27               	movwf	39,b	;volatile
  1935  00267A                     
  1936                           ; BSR set to: 14
  1937  00267A  0012               	return		;funcret
  1938  00267C                     __end_of_CLC1_Initialize:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _GDapplication *****************
  1942 ;; Defined at:
  1943 ;;		line 15 in file "application.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  lcdDataBuffe    8   20[BANK0 ] unsigned char [8]
  1948 ;;  degree          2   28[BANK0 ] unsigned short 
  1949 ;;  clcData         1   30[BANK0 ] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;Total ram usage:       12 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    8
  1966 ;; This function calls:
  1967 ;;		_User_lcd_writeString
  1968 ;;		___lwdiv
  1969 ;;		___lwmod
  1970 ;;		___wmul
  1971 ;;		_sprintf
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text13
  1978  001AE2                     __ptext13:
  1979                           	callstack 0
  1980  001AE2                     _GDapplication:
  1981                           	callstack 22
  1982  001AE2                     
  1983                           ;application.c: 17:     uint8_t lcdDataBuffer[8] = {0};
  1984  001AE2  EE20  F0A7         	lfsr	2,GDapplication@lcdDataBuffer
  1985  001AE6  0E07               	movlw	7
  1986  001AE8                     u1741:
  1987  001AE8  6ADE               	clrf	postinc2,c
  1988  001AEA  06E8               	decf	wreg,f,c
  1989  001AEC  E2FD               	bc	u1741
  1990  001AEE                     
  1991                           ;application.c: 22:     clcData = CLCDATA;
  1992  001AEE  CE77 F0B1          	movff	3703,GDapplication@clcData	;volatile
  1993  001AF2                     
  1994                           ;application.c: 24:     clcData = ((clcData & 0x30)>> 2)| (clcData & 0x03) ;
  1995  001AF2  C0B1  F05F         	movff	GDapplication@clcData,??_GDapplication
  1996  001AF6  0E03               	movlw	3
  1997  001AF8  165F               	andwf	??_GDapplication^0,f,c
  1998  001AFA  0100               	movlb	0	; () banked
  1999  001AFC  41B1               	rrncf	GDapplication@clcData& (0+255),w,b
  2000  001AFE  42E8               	rrncf	wreg,f,c
  2001  001B00  0B3F               	andlw	63
  2002  001B02  0B0C               	andlw	12
  2003  001B04  105F               	iorwf	??_GDapplication^0,w,c
  2004  001B06  6FB1               	movwf	GDapplication@clcData& (0+255),b
  2005  001B08                     
  2006                           ; BSR set to: 0
  2007                           ;application.c: 26:     degree = ((2250) * (clcData & 0x0F));
  2008  001B08  C0B1  F05F         	movff	GDapplication@clcData,??_GDapplication
  2009  001B0C  0E0F               	movlw	15
  2010  001B0E  165F               	andwf	??_GDapplication^0,f,c
  2011  001B10  505F               	movf	??_GDapplication^0,w,c
  2012  001B12  6E01               	movwf	___wmul@multiplier^0,c
  2013  001B14  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2014  001B16  0E08               	movlw	8
  2015  001B18  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2016  001B1A  0ECA               	movlw	202
  2017  001B1C  6E03               	movwf	___wmul@multiplicand^0,c
  2018  001B1E  EC65  F013         	call	___wmul	;wreg free
  2019  001B22  C001  F0AF         	movff	?___wmul,GDapplication@degree
  2020  001B26  C002  F0B0         	movff	?___wmul+1,GDapplication@degree+1
  2021  001B2A                     
  2022                           ;application.c: 27:     sprintf((char*)lcdDataBuffer,"%02d",(clcData & 0x0F));
  2023  001B2A  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2024  001B2C  0100               	movlb	0	; () banked
  2025  001B2E  6F93               	movwf	sprintf@s& (0+255),b
  2026  001B30  0E00               	movlw	high GDapplication@lcdDataBuffer
  2027  001B32  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2028  001B34  0E5D               	movlw	low STR_3
  2029  001B36  6F95               	movwf	sprintf@fmt& (0+255),b
  2030  001B38  0E0F               	movlw	high STR_3
  2031  001B3A  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2032  001B3C  C0B1  F05F         	movff	GDapplication@clcData,??_GDapplication
  2033  001B40  0E0F               	movlw	15
  2034  001B42  165F               	andwf	??_GDapplication^0,f,c
  2035  001B44  505F               	movf	??_GDapplication^0,w,c
  2036  001B46  6F97               	movwf	(?_sprintf+4)& (0+255),b
  2037  001B48  6B98               	clrf	(?_sprintf+5)& (0+255),b
  2038  001B4A  EC79  F011         	call	_sprintf	;wreg free
  2039  001B4E                     
  2040                           ;application.c: 28:     User_lcd_writeString((char*)lcdDataBuffer,1,14);
  2041  001B4E  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2042  001B50  6E17               	movwf	User_lcd_writeString@string^0,c
  2043  001B52  0E00               	movlw	high GDapplication@lcdDataBuffer
  2044  001B54  6E18               	movwf	(User_lcd_writeString@string+1)^0,c
  2045  001B56  0E01               	movlw	1
  2046  001B58  6E19               	movwf	User_lcd_writeString@row^0,c
  2047  001B5A  0E0E               	movlw	14
  2048  001B5C  6E1A               	movwf	User_lcd_writeString@column^0,c
  2049  001B5E  EC4D  F010         	call	_User_lcd_writeString	;wreg free
  2050  001B62                     
  2051                           ;application.c: 29:     if(degree % 100)
  2052  001B62  C0AF  F001         	movff	GDapplication@degree,___lwmod@dividend
  2053  001B66  C0B0  F002         	movff	GDapplication@degree+1,___lwmod@dividend+1
  2054  001B6A  0E00               	movlw	0
  2055  001B6C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2056  001B6E  0E64               	movlw	100
  2057  001B70  6E03               	movwf	___lwmod@divisor^0,c
  2058  001B72  EC47  F011         	call	___lwmod	;wreg free
  2059  001B76  5001               	movf	?___lwmod^0,w,c
  2060  001B78  1002               	iorwf	(?___lwmod+1)^0,w,c
  2061  001B7A  B4D8               	btfsc	status,2,c
  2062  001B7C  EFC2  F00D         	goto	u1751
  2063  001B80  EFC4  F00D         	goto	u1750
  2064  001B84                     u1751:
  2065  001B84  EFF2  F00D         	goto	l2881
  2066  001B88                     u1750:
  2067  001B88                     
  2068                           ;application.c: 30:     {;application.c: 31:        sprintf((char*)lcdDataBuffer,"%3d.%0
      +                          2d%c",(degree/100),(degree%100),0xDF);
  2069  001B88  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2070  001B8A  0100               	movlb	0	; () banked
  2071  001B8C  6F93               	movwf	sprintf@s& (0+255),b
  2072  001B8E  0E00               	movlw	high GDapplication@lcdDataBuffer
  2073  001B90  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2074  001B92  0E49               	movlw	low STR_4
  2075  001B94  6F95               	movwf	sprintf@fmt& (0+255),b
  2076  001B96  0E0F               	movlw	high STR_4
  2077  001B98  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2078  001B9A  C0AF  F001         	movff	GDapplication@degree,___lwdiv@dividend
  2079  001B9E  C0B0  F002         	movff	GDapplication@degree+1,___lwdiv@dividend+1
  2080  001BA2  0E00               	movlw	0
  2081  001BA4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2082  001BA6  0E64               	movlw	100
  2083  001BA8  6E03               	movwf	___lwdiv@divisor^0,c
  2084  001BAA  ECDA  F010         	call	___lwdiv	;wreg free
  2085  001BAE  C001  F097         	movff	?___lwdiv,?_sprintf+4
  2086  001BB2  C002  F098         	movff	?___lwdiv+1,?_sprintf+5
  2087  001BB6  C0AF  F001         	movff	GDapplication@degree,___lwmod@dividend
  2088  001BBA  C0B0  F002         	movff	GDapplication@degree+1,___lwmod@dividend+1
  2089  001BBE  0E00               	movlw	0
  2090  001BC0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2091  001BC2  0E64               	movlw	100
  2092  001BC4  6E03               	movwf	___lwmod@divisor^0,c
  2093  001BC6  EC47  F011         	call	___lwmod	;wreg free
  2094  001BCA  C001  F099         	movff	?___lwmod,?_sprintf+6
  2095  001BCE  C002  F09A         	movff	?___lwmod+1,?_sprintf+7
  2096  001BD2  0E00               	movlw	0
  2097  001BD4  0100               	movlb	0	; () banked
  2098  001BD6  6F9C               	movwf	(?_sprintf+9)& (0+255),b
  2099  001BD8  0EDF               	movlw	223
  2100  001BDA  6F9B               	movwf	(?_sprintf+8)& (0+255),b
  2101  001BDC  EC79  F011         	call	_sprintf	;wreg free
  2102                           
  2103                           ;application.c: 32:     }
  2104  001BE0  EF10  F00E         	goto	l485
  2105  001BE4                     l2881:
  2106                           
  2107                           ;application.c: 34:     {;application.c: 35:        sprintf((char*)lcdDataBuffer,"%3d%c 
      +                            ",(degree/100),0xDF);
  2108  001BE4  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2109  001BE6  0100               	movlb	0	; () banked
  2110  001BE8  6F93               	movwf	sprintf@s& (0+255),b
  2111  001BEA  0E00               	movlw	high GDapplication@lcdDataBuffer
  2112  001BEC  6F94               	movwf	(sprintf@s+1)& (0+255),b
  2113  001BEE  0E54               	movlw	low STR_5
  2114  001BF0  6F95               	movwf	sprintf@fmt& (0+255),b
  2115  001BF2  0E0F               	movlw	high STR_5
  2116  001BF4  6F96               	movwf	(sprintf@fmt+1)& (0+255),b
  2117  001BF6  C0AF  F001         	movff	GDapplication@degree,___lwdiv@dividend
  2118  001BFA  C0B0  F002         	movff	GDapplication@degree+1,___lwdiv@dividend+1
  2119  001BFE  0E00               	movlw	0
  2120  001C00  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2121  001C02  0E64               	movlw	100
  2122  001C04  6E03               	movwf	___lwdiv@divisor^0,c
  2123  001C06  ECDA  F010         	call	___lwdiv	;wreg free
  2124  001C0A  C001  F097         	movff	?___lwdiv,?_sprintf+4
  2125  001C0E  C002  F098         	movff	?___lwdiv+1,?_sprintf+5
  2126  001C12  0E00               	movlw	0
  2127  001C14  0100               	movlb	0	; () banked
  2128  001C16  6F9A               	movwf	(?_sprintf+7)& (0+255),b
  2129  001C18  0EDF               	movlw	223
  2130  001C1A  6F99               	movwf	(?_sprintf+6)& (0+255),b
  2131  001C1C  EC79  F011         	call	_sprintf	;wreg free
  2132  001C20                     l485:
  2133                           
  2134                           ;application.c: 37:     User_lcd_writeString((char*)lcdDataBuffer,0,9);
  2135  001C20  0EA7               	movlw	low GDapplication@lcdDataBuffer
  2136  001C22  6E17               	movwf	User_lcd_writeString@string^0,c
  2137  001C24  0E00               	movlw	high GDapplication@lcdDataBuffer
  2138  001C26  6E18               	movwf	(User_lcd_writeString@string+1)^0,c
  2139  001C28  0E00               	movlw	0
  2140  001C2A  6E19               	movwf	User_lcd_writeString@row^0,c
  2141  001C2C  0E09               	movlw	9
  2142  001C2E  6E1A               	movwf	User_lcd_writeString@column^0,c
  2143  001C30  EC4D  F010         	call	_User_lcd_writeString	;wreg free
  2144  001C34  0012               	return		;funcret
  2145  001C36                     __end_of_GDapplication:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _sprintf *****************
  2149 ;; Defined at:
  2150 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2153 ;;		 -> GDapplication@lcdDataBuffer(8), 
  2154 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2155 ;;		 -> STR_5(9), STR_4(11), STR_3(5), 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  f               6   14[BANK0 ] struct _IO_FILE
  2158 ;;  ap              2   12[BANK0 ] PTR void [1]
  2159 ;;		 -> ?_sprintf(2), 
  2160 ;;  ret             2    0        int 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2    0[BANK0 ] int 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2170 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2173 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2174 ;;Total ram usage:       20 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    7
  2177 ;; This function calls:
  2178 ;;		_vfprintf
  2179 ;; This function is called by:
  2180 ;;		_GDapplication
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text14
  2185  0022F2                     __ptext14:
  2186                           	callstack 0
  2187  0022F2                     _sprintf:
  2188                           	callstack 22
  2189  0022F2  0E97               	movlw	low (?_sprintf+4)
  2190  0022F4  0100               	movlb	0	; () banked
  2191  0022F6  6F9F               	movwf	sprintf@ap& (0+255),b
  2192  0022F8  0E00               	movlw	high (?_sprintf+4)
  2193  0022FA  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
  2194  0022FC  C093  F0A1         	movff	sprintf@s,sprintf@f
  2195  002300  C094  F0A2         	movff	sprintf@s+1,sprintf@f+1
  2196  002304                     
  2197                           ; BSR set to: 0
  2198  002304  0E00               	movlw	0
  2199  002306  6FA4               	movwf	(sprintf@f+3)& (0+255),b
  2200  002308  0E00               	movlw	0
  2201  00230A  6FA3               	movwf	(sprintf@f+2)& (0+255),b
  2202  00230C                     
  2203                           ; BSR set to: 0
  2204  00230C  0E00               	movlw	0
  2205  00230E  6FA6               	movwf	(sprintf@f+5)& (0+255),b
  2206  002310  0E00               	movlw	0
  2207  002312  6FA5               	movwf	(sprintf@f+4)& (0+255),b
  2208  002314                     
  2209                           ; BSR set to: 0
  2210  002314  0EA1               	movlw	low sprintf@f
  2211  002316  6E57               	movwf	vfprintf@fp^0,c
  2212  002318  0E00               	movlw	high sprintf@f
  2213  00231A  6E58               	movwf	(vfprintf@fp+1)^0,c
  2214  00231C  C095  F059         	movff	sprintf@fmt,vfprintf@fmt
  2215  002320  C096  F05A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2216  002324  0E9F               	movlw	low sprintf@ap
  2217  002326  6E5B               	movwf	vfprintf@ap^0,c
  2218  002328  0E00               	movlw	high sprintf@ap
  2219  00232A  6E5C               	movwf	(vfprintf@ap+1)^0,c
  2220  00232C  EC14  F011         	call	_vfprintf	;wreg free
  2221  002330  0100               	movlb	0	; () banked
  2222  002332  51A3               	movf	(sprintf@f+2)& (0+255),w,b
  2223  002334  2593               	addwf	sprintf@s& (0+255),w,b
  2224  002336  6ED9               	movwf	fsr2l,c
  2225  002338  51A4               	movf	(sprintf@f+3)& (0+255),w,b
  2226  00233A  2194               	addwfc	(sprintf@s+1)& (0+255),w,b
  2227  00233C  6EDA               	movwf	fsr2h,c
  2228  00233E  0E00               	movlw	0
  2229  002340  6EDF               	movwf	indf2,c
  2230  002342                     
  2231                           ; BSR set to: 0
  2232  002342  0012               	return		;funcret
  2233  002344                     __end_of_sprintf:
  2234                           	callstack 0
  2235                           
  2236 ;; *************** function _vfprintf *****************
  2237 ;; Defined at:
  2238 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  fp              2   86[COMRAM] PTR struct _IO_FILE
  2241 ;;		 -> sprintf@f(6), 
  2242 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  2243 ;;		 -> STR_5(9), STR_4(11), STR_3(5), 
  2244 ;;  ap              2   90[COMRAM] PTR PTR void 
  2245 ;;		 -> sprintf@ap(2), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  2248 ;;		 -> STR_5(9), STR_4(11), STR_3(5), 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  2   86[COMRAM] int 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2258 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2261 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;Total ram usage:        8 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    6
  2265 ;; This function calls:
  2266 ;;		_vfpfcnvrt
  2267 ;; This function is called by:
  2268 ;;		_sprintf
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text15
  2273  002228                     __ptext15:
  2274                           	callstack 0
  2275  002228                     _vfprintf:
  2276                           	callstack 22
  2277  002228                     
  2278                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2279  002228  C059  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  2280  00222C  C05A  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2281  002230                     
  2282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2283  002230  0E00               	movlw	0
  2284  002232  0100               	movlb	0	; () banked
  2285  002234  6F6C               	movwf	(_nout+1)& (0+255),b
  2286  002236  0E00               	movlw	0
  2287  002238  6F6B               	movwf	_nout& (0+255),b
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2290  00223A  EF32  F011         	goto	l2749
  2291  00223E                     l2747:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2295  00223E  C057  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2296  002242  C058  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2297  002246  0E5D               	movlw	low vfprintf@cfmt
  2298  002248  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2299  00224A  0E00               	movlw	high vfprintf@cfmt
  2300  00224C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2301  00224E  C05B  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2302  002252  C05C  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2303  002256  ECB2  F007         	call	_vfpfcnvrt	;wreg free
  2304  00225A  5040               	movf	?_vfpfcnvrt^0,w,c
  2305  00225C  0100               	movlb	0	; () banked
  2306  00225E  276B               	addwf	_nout& (0+255),f,b
  2307  002260  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2308  002262  236C               	addwfc	(_nout+1)& (0+255),f,b
  2309  002264                     l2749:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2313  002264  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  2314  002268  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2315  00226C                     	if	0	;tblptru may be non-zero
  2316  00226C                     	endif
  2317  00226C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2318  00226C  0E00               	movlw	low (__mediumconst shr (0+16))
  2319  00226E  6EF8               	movwf	tblptru,c
  2320  002270                     	endif
  2321  002270  0008               	tblrd		*
  2322  002272  50F5               	movf	tablat,w,c
  2323  002274  0900               	iorlw	0
  2324  002276  A4D8               	btfss	status,2,c
  2325  002278  EF40  F011         	goto	u1631
  2326  00227C  EF42  F011         	goto	u1630
  2327  002280                     u1631:
  2328  002280  EF1F  F011         	goto	l2747
  2329  002284                     u1630:
  2330  002284                     
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2333  002284  C06B  F057         	movff	_nout,?_vfprintf
  2334  002288  C06C  F058         	movff	_nout+1,?_vfprintf+1
  2335  00228C                     
  2336                           ; BSR set to: 0
  2337  00228C  0012               	return		;funcret
  2338  00228E                     __end_of_vfprintf:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _vfpfcnvrt *****************
  2342 ;; Defined at:
  2343 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2346 ;;		 -> sprintf@f(6), 
  2347 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2348 ;;		 -> vfprintf@cfmt(2), 
  2349 ;;  ap              2   67[COMRAM] PTR PTR void 
  2350 ;;		 -> sprintf@ap(2), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  ll              8   73[COMRAM] long long 
  2353 ;;  llu             8    0        unsigned long long 
  2354 ;;  f               4    0        unsigned long long 
  2355 ;;  vp              3    0        PTR void 
  2356 ;;  ct              3    0        unsigned char [3]
  2357 ;;  cp              3    0        PTR unsigned char 
  2358 ;;  done            2   81[COMRAM] int 
  2359 ;;  i               2    0        int 
  2360 ;;  c               1   85[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  2   63[COMRAM] int 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2370 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2371 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;Total ram usage:       23 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    5
  2377 ;; This function calls:
  2378 ;;		_atoi
  2379 ;;		_ctoa
  2380 ;;		_dtoa
  2381 ;;		_fputc
  2382 ;;		_isdigit
  2383 ;; This function is called by:
  2384 ;;		_vfprintf
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text16
  2389  000F64                     __ptext16:
  2390                           	callstack 0
  2391  000F64                     _vfpfcnvrt:
  2392                           	callstack 22
  2393  000F64                     
  2394                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2395  000F64  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2396  000F68  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2397  000F6C  CFDE FFF6          	movff	postinc2,tblptrl
  2398  000F70  CFDD FFF7          	movff	postdec2,tblptrh
  2399  000F74                     	if	0	;tblptru may be non-zero
  2400  000F74                     	endif
  2401  000F74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2402  000F74  0E00               	movlw	low (__mediumconst shr (0+16))
  2403  000F76  6EF8               	movwf	tblptru,c
  2404  000F78                     	endif
  2405  000F78  0008               	tblrd		*
  2406  000F7A  50F5               	movf	tablat,w,c
  2407  000F7C  0A25               	xorlw	37
  2408  000F7E  A4D8               	btfss	status,2,c
  2409  000F80  EFC4  F007         	goto	u1511
  2410  000F84  EFC6  F007         	goto	u1510
  2411  000F88                     u1511:
  2412  000F88  EF9A  F009         	goto	l2689
  2413  000F8C                     u1510:
  2414  000F8C                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2416  000F8C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2417  000F90  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2418  000F94  2ADE               	incf	postinc2,f,c
  2419  000F96  0E00               	movlw	0
  2420  000F98  22DD               	addwfc	postdec2,f,c
  2421  000F9A                     
  2422                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2423  000F9A  0E00               	movlw	0
  2424  000F9C  0100               	movlb	0	; () banked
  2425  000F9E  6F6E               	movwf	(_width+1)& (0+255),b
  2426  000FA0  0E00               	movlw	0
  2427  000FA2  6F6D               	movwf	_width& (0+255),b
  2428  000FA4  C06D  F071         	movff	_width,_flags
  2429  000FA8  C06E  F072         	movff	_width+1,_flags+1
  2430  000FAC                     
  2431                           ; BSR set to: 0
  2432                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2433  000FAC  696F               	setf	_prec& (0+255),b
  2434  000FAE  6970               	setf	(_prec+1)& (0+255),b
  2435  000FB0                     
  2436                           ; BSR set to: 0
  2437                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2438  000FB0  0E00               	movlw	0
  2439  000FB2  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  2440  000FB4  0E00               	movlw	0
  2441  000FB6  6E52               	movwf	vfpfcnvrt@done^0,c
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2444  000FB8  EF2B  F008         	goto	l2633
  2445  000FBC                     l2607:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2448  000FBC  0100               	movlb	0	; () banked
  2449  000FBE  8171               	bsf	_flags& (0+255),0,b
  2450  000FC0                     l2609:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2454  000FC0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2455  000FC4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2456  000FC8  2ADE               	incf	postinc2,f,c
  2457  000FCA  0E00               	movlw	0
  2458  000FCC  22DD               	addwfc	postdec2,f,c
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2461  000FCE  EF2B  F008         	goto	l2633
  2462  000FD2                     l2611:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2465  000FD2  0100               	movlb	0	; () banked
  2466  000FD4  8371               	bsf	_flags& (0+255),1,b
  2467  000FD6  EFE0  F007         	goto	l2609
  2468  000FDA                     l2615:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2471  000FDA  0100               	movlb	0	; () banked
  2472  000FDC  8571               	bsf	_flags& (0+255),2,b
  2473  000FDE  EFE0  F007         	goto	l2609
  2474  000FE2                     l2619:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2477  000FE2  0100               	movlb	0	; () banked
  2478  000FE4  8771               	bsf	_flags& (0+255),3,b
  2479  000FE6  EFE0  F007         	goto	l2609
  2480  000FEA                     l2623:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2483  000FEA  0100               	movlb	0	; () banked
  2484  000FEC  8971               	bsf	_flags& (0+255),4,b
  2485  000FEE  EFE0  F007         	goto	l2609
  2486  000FF2                     l2627:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2489  000FF2  0E00               	movlw	0
  2490  000FF4  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  2491  000FF6  0E01               	movlw	1
  2492  000FF8  6E52               	movwf	vfpfcnvrt@done^0,c
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2495  000FFA  EF2B  F008         	goto	l2633
  2496  000FFE                     l2631:
  2497  000FFE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2498  001002  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2499  001006  CFDE FFF6          	movff	postinc2,tblptrl
  2500  00100A  CFDD FFF7          	movff	postdec2,tblptrh
  2501  00100E                     	if	0	;tblptru may be non-zero
  2502  00100E                     	endif
  2503  00100E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2504  00100E  0E00               	movlw	low (__mediumconst shr (0+16))
  2505  001010  6EF8               	movwf	tblptru,c
  2506  001012                     	endif
  2507  001012  0008               	tblrd		*
  2508  001014  50F5               	movf	tablat,w,c
  2509  001016  6E46               	movwf	??_vfpfcnvrt^0,c
  2510  001018  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  2511                           
  2512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 1, Range of values is 0 to 0
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte            4     3 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  00101A  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2520  00101C  0A00               	xorlw	0	; case 0
  2521  00101E  B4D8               	btfsc	status,2,c
  2522  001020  EF14  F008         	goto	l2989
  2523  001024  EFF9  F007         	goto	l2627
  2524  001028                     l2989:
  2525                           
  2526                           ; Switch size 1, requested type "simple"
  2527                           ; Number of cases is 5, Range of values is 32 to 48
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte           16     9 (average)
  2531                           ;	Chosen strategy is simple_byte
  2532  001028  5046               	movf	??_vfpfcnvrt^0,w,c
  2533  00102A  0A20               	xorlw	32	; case 32
  2534  00102C  B4D8               	btfsc	status,2,c
  2535  00102E  EFF1  F007         	goto	l2619
  2536  001032  0A03               	xorlw	3	; case 35
  2537  001034  B4D8               	btfsc	status,2,c
  2538  001036  EFF5  F007         	goto	l2623
  2539  00103A  0A08               	xorlw	8	; case 43
  2540  00103C  B4D8               	btfsc	status,2,c
  2541  00103E  EFED  F007         	goto	l2615
  2542  001042  0A06               	xorlw	6	; case 45
  2543  001044  B4D8               	btfsc	status,2,c
  2544  001046  EFDE  F007         	goto	l2607
  2545  00104A  0A1D               	xorlw	29	; case 48
  2546  00104C  B4D8               	btfsc	status,2,c
  2547  00104E  EFE9  F007         	goto	l2611
  2548  001052  EFF9  F007         	goto	l2627
  2549  001056                     l2633:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2552  001056  5052               	movf	vfpfcnvrt@done^0,w,c
  2553  001058  1053               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2554  00105A  B4D8               	btfsc	status,2,c
  2555  00105C  EF32  F008         	goto	u1521
  2556  001060  EF34  F008         	goto	u1520
  2557  001064                     u1521:
  2558  001064  EFFF  F007         	goto	l2631
  2559  001068                     u1520:
  2560  001068                     
  2561                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2562  001068  0100               	movlb	0	; () banked
  2563  00106A  A171               	btfss	_flags& (0+255),0,b
  2564  00106C  EF3A  F008         	goto	u1531
  2565  001070  EF3C  F008         	goto	u1530
  2566  001074                     u1531:
  2567  001074  EF3D  F008         	goto	l2637
  2568  001078                     u1530:
  2569  001078                     
  2570                           ; BSR set to: 0
  2571                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2572  001078  9371               	bcf	_flags& (0+255),1,b
  2573  00107A                     l2637:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2577  00107A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2578  00107E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2579  001082  CFDE FFF6          	movff	postinc2,tblptrl
  2580  001086  CFDD FFF7          	movff	postdec2,tblptrh
  2581  00108A                     	if	0	;tblptru may be non-zero
  2582  00108A                     	endif
  2583  00108A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2584  00108A  0E00               	movlw	low (__mediumconst shr (0+16))
  2585  00108C  6EF8               	movwf	tblptru,c
  2586  00108E                     	endif
  2587  00108E  0008               	tblrd		*
  2588  001090  50F5               	movf	tablat,w,c
  2589  001092  0A2A               	xorlw	42
  2590  001094  A4D8               	btfss	status,2,c
  2591  001096  EF4F  F008         	goto	u1541
  2592  00109A  EF51  F008         	goto	u1540
  2593  00109E                     u1541:
  2594  00109E  EF7A  F008         	goto	l2645
  2595  0010A2                     u1540:
  2596  0010A2                     
  2597                           ; BSR set to: 0
  2598                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2599  0010A2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2600  0010A6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2601  0010AA  2ADE               	incf	postinc2,f,c
  2602  0010AC  0E00               	movlw	0
  2603  0010AE  22DD               	addwfc	postdec2,f,c
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2606  0010B0  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2607  0010B4  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2608  0010B8  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2609  0010BC  0E02               	movlw	2
  2610  0010BE  26DE               	addwf	postinc2,f,c
  2611  0010C0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2612  0010C4  0E00               	movlw	0
  2613  0010C6  22DD               	addwfc	postdec2,f,c
  2614  0010C8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2615  0010CC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2616  0010D0  CFDE F06D          	movff	postinc2,_width
  2617  0010D4  CFDD F06E          	movff	postdec2,_width+1
  2618  0010D8                     
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2621  0010D8  BF6E               	btfsc	(_width+1)& (0+255),7,b
  2622  0010DA  EF73  F008         	goto	u1550
  2623  0010DE  EF71  F008         	goto	u1551
  2624  0010E2                     u1551:
  2625  0010E2  EFBF  F008         	goto	l2655
  2626  0010E6                     u1550:
  2627  0010E6                     
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2630  0010E6  8171               	bsf	_flags& (0+255),0,b
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2633  0010E8  6D6D               	negf	_width& (0+255),b
  2634  0010EA  1F6E               	comf	(_width+1)& (0+255),f,b
  2635  0010EC  B0D8               	btfsc	status,0,c
  2636  0010EE  2B6E               	incf	(_width+1)& (0+255),f,b
  2637  0010F0  EFBF  F008         	goto	l2655
  2638  0010F4                     l2645:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2642  0010F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2643  0010F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2644  0010FC  CFDE F008          	movff	postinc2,atoi@s
  2645  001100  CFDD F009          	movff	postdec2,atoi@s+1
  2646  001104  EC29  F00B         	call	_atoi	;wreg free
  2647  001108  C008  F06D         	movff	?_atoi,_width
  2648  00110C  C009  F06E         	movff	?_atoi+1,_width+1
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2651  001110  EF91  F008         	goto	l2649
  2652  001114                     l2647:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2655  001114  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2656  001118  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2657  00111C  2ADE               	incf	postinc2,f,c
  2658  00111E  0E00               	movlw	0
  2659  001120  22DD               	addwfc	postdec2,f,c
  2660  001122                     l2649:
  2661  001122  0ED0               	movlw	208
  2662  001124  6E46               	movwf	??_vfpfcnvrt^0,c
  2663  001126  0EFF               	movlw	255
  2664  001128  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2665  00112A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2666  00112E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2667  001132  CFDE FFF6          	movff	postinc2,tblptrl
  2668  001136  CFDD FFF7          	movff	postdec2,tblptrh
  2669  00113A                     	if	0	;tblptru may be non-zero
  2670  00113A                     	endif
  2671  00113A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2672  00113A  0E00               	movlw	low (__mediumconst shr (0+16))
  2673  00113C  6EF8               	movwf	tblptru,c
  2674  00113E                     	endif
  2675  00113E  0008               	tblrd		*
  2676  001140  50F5               	movf	tablat,w,c
  2677  001142  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2678  001144  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2679  001146  5046               	movf	??_vfpfcnvrt^0,w,c
  2680  001148  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2681  00114A  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2682  00114C  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2683  00114E  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2684  001150  E10A               	bnz	u1560
  2685  001152  0E0A               	movlw	10
  2686  001154  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2687  001156  A0D8               	btfss	status,0,c
  2688  001158  EFB0  F008         	goto	u1561
  2689  00115C  EFB3  F008         	goto	u1560
  2690  001160                     u1561:
  2691  001160  0E01               	movlw	1
  2692  001162  EFB4  F008         	goto	u1570
  2693  001166                     u1560:
  2694  001166  0E00               	movlw	0
  2695  001168                     u1570:
  2696  001168  6E54               	movwf	_vfpfcnvrt$1400^0,c
  2697  00116A  6A55               	clrf	(_vfpfcnvrt$1400+1)^0,c
  2698  00116C  5054               	movf	_vfpfcnvrt$1400^0,w,c
  2699  00116E  1055               	iorwf	(_vfpfcnvrt$1400+1)^0,w,c
  2700  001170  A4D8               	btfss	status,2,c
  2701  001172  EFBD  F008         	goto	u1581
  2702  001176  EFBF  F008         	goto	u1580
  2703  00117A                     u1581:
  2704  00117A  EF8A  F008         	goto	l2647
  2705  00117E                     u1580:
  2706  00117E                     l2655:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2709  00117E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2710  001182  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2711  001186  CFDE FFF6          	movff	postinc2,tblptrl
  2712  00118A  CFDD FFF7          	movff	postdec2,tblptrh
  2713  00118E                     	if	0	;tblptru may be non-zero
  2714  00118E                     	endif
  2715  00118E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2716  00118E  0E00               	movlw	low (__mediumconst shr (0+16))
  2717  001190  6EF8               	movwf	tblptru,c
  2718  001192                     	endif
  2719  001192  0008               	tblrd		*
  2720  001194  50F5               	movf	tablat,w,c
  2721  001196  0A63               	xorlw	99
  2722  001198  A4D8               	btfss	status,2,c
  2723  00119A  EFD1  F008         	goto	u1591
  2724  00119E  EFD3  F008         	goto	u1590
  2725  0011A2                     u1591:
  2726  0011A2  EFFA  F008         	goto	l2663
  2727  0011A6                     u1590:
  2728  0011A6                     
  2729                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2730  0011A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2731  0011AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2732  0011AE  2ADE               	incf	postinc2,f,c
  2733  0011B0  0E00               	movlw	0
  2734  0011B2  22DD               	addwfc	postdec2,f,c
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2737  0011B4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2738  0011B8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2739  0011BC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2740  0011C0  0E02               	movlw	2
  2741  0011C2  26DE               	addwf	postinc2,f,c
  2742  0011C4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2743  0011C8  0E00               	movlw	0
  2744  0011CA  22DD               	addwfc	postdec2,f,c
  2745  0011CC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2746  0011D0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2747  0011D4  50DF               	movf	indf2,w,c
  2748  0011D6  6E56               	movwf	vfpfcnvrt@c^0,c
  2749  0011D8                     
  2750                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2751  0011D8  C040  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2752  0011DC  C041  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2753  0011E0  C056  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2754  0011E4  EC1B  F00E         	call	_ctoa	;wreg free
  2755  0011E8  C00A  F040         	movff	?_ctoa,?_vfpfcnvrt
  2756  0011EC  C00B  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2757  0011F0  EFB7  F009         	goto	l1278
  2758  0011F4                     l2663:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2761  0011F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2762  0011F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2763  0011FC  CFDE FFF6          	movff	postinc2,tblptrl
  2764  001200  CFDD FFF7          	movff	postdec2,tblptrh
  2765  001204                     	if	0	;tblptru may be non-zero
  2766  001204                     	endif
  2767  001204                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2768  001204  0E00               	movlw	low (__mediumconst shr (0+16))
  2769  001206  6EF8               	movwf	tblptru,c
  2770  001208                     	endif
  2771  001208  0008               	tblrd		*
  2772  00120A  50F5               	movf	tablat,w,c
  2773  00120C  0A64               	xorlw	100
  2774  00120E  B4D8               	btfsc	status,2,c
  2775  001210  EF0C  F009         	goto	u1601
  2776  001214  EF0E  F009         	goto	u1600
  2777  001218                     u1601:
  2778  001218  EF22  F009         	goto	l2667
  2779  00121C                     u1600:
  2780  00121C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2781  001220  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2782  001224  CFDE FFF6          	movff	postinc2,tblptrl
  2783  001228  CFDD FFF7          	movff	postdec2,tblptrh
  2784  00122C                     	if	0	;tblptru may be non-zero
  2785  00122C                     	endif
  2786  00122C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2787  00122C  0E00               	movlw	low (__mediumconst shr (0+16))
  2788  00122E  6EF8               	movwf	tblptru,c
  2789  001230                     	endif
  2790  001230  0008               	tblrd		*
  2791  001232  50F5               	movf	tablat,w,c
  2792  001234  0A69               	xorlw	105
  2793  001236  A4D8               	btfss	status,2,c
  2794  001238  EF20  F009         	goto	u1611
  2795  00123C  EF22  F009         	goto	u1610
  2796  001240                     u1611:
  2797  001240  EF62  F009         	goto	l2673
  2798  001244                     u1610:
  2799  001244                     l2667:
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2802  001244  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2803  001248  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2804  00124C  2ADE               	incf	postinc2,f,c
  2805  00124E  0E00               	movlw	0
  2806  001250  22DD               	addwfc	postdec2,f,c
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2809  001252  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2810  001256  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2811  00125A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2812  00125E  0E02               	movlw	2
  2813  001260  26DE               	addwf	postinc2,f,c
  2814  001262  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2815  001266  0E00               	movlw	0
  2816  001268  22DD               	addwfc	postdec2,f,c
  2817  00126A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2818  00126E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2819  001272  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  2820  001276  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  2821  00127A  0E00               	movlw	0
  2822  00127C  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2823  00127E  0EFF               	movlw	-1
  2824  001280  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  2825  001282  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  2826  001284  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  2827  001286  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  2828  001288  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  2829  00128A  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  2830  00128C                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2832  00128C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2833  001290  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2834  001294  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2835  001298  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2836  00129C  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2837  0012A0  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2838  0012A4  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2839  0012A8  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2840  0012AC  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2841  0012B0  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2842  0012B4  ECB8  F009         	call	_dtoa	;wreg free
  2843  0012B8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2844  0012BC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2845  0012C0  EFB7  F009         	goto	l1278
  2846  0012C4                     l2673:
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2849  0012C4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2850  0012C8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2851  0012CC  CFDE FFF6          	movff	postinc2,tblptrl
  2852  0012D0  CFDD FFF7          	movff	postdec2,tblptrh
  2853  0012D4                     	if	0	;tblptru may be non-zero
  2854  0012D4                     	endif
  2855  0012D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2856  0012D4  0E00               	movlw	low (__mediumconst shr (0+16))
  2857  0012D6  6EF8               	movwf	tblptru,c
  2858  0012D8                     	endif
  2859  0012D8  0008               	tblrd		*
  2860  0012DA  50F5               	movf	tablat,w,c
  2861  0012DC  0A25               	xorlw	37
  2862  0012DE  A4D8               	btfss	status,2,c
  2863  0012E0  EF74  F009         	goto	u1621
  2864  0012E4  EF76  F009         	goto	u1620
  2865  0012E8                     u1621:
  2866  0012E8  EF8D  F009         	goto	l2683
  2867  0012EC                     u1620:
  2868  0012EC                     
  2869                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2870  0012EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2871  0012F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2872  0012F4  2ADE               	incf	postinc2,f,c
  2873  0012F6  0E00               	movlw	0
  2874  0012F8  22DD               	addwfc	postdec2,f,c
  2875  0012FA                     
  2876                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2877  0012FA  0E00               	movlw	0
  2878  0012FC  6E02               	movwf	(fputc@c+1)^0,c
  2879  0012FE  0E25               	movlw	37
  2880  001300  6E01               	movwf	fputc@c^0,c
  2881  001302  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2882  001306  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2883  00130A  EC87  F00E         	call	_fputc	;wreg free
  2884  00130E                     l2679:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2887  00130E  0E00               	movlw	0
  2888  001310  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2889  001312  0E01               	movlw	1
  2890  001314  6E40               	movwf	?_vfpfcnvrt^0,c
  2891  001316  EFB7  F009         	goto	l1278
  2892  00131A                     l2683:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2895  00131A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2896  00131E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2897  001322  2ADE               	incf	postinc2,f,c
  2898  001324  0E00               	movlw	0
  2899  001326  22DD               	addwfc	postdec2,f,c
  2900  001328                     
  2901                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2902  001328  0E00               	movlw	0
  2903  00132A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2904  00132C  0E00               	movlw	0
  2905  00132E  6E40               	movwf	?_vfpfcnvrt^0,c
  2906  001330  EFB7  F009         	goto	l1278
  2907  001334                     l2689:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2910  001334  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2911  001338  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2912  00133C  CFDE FFF6          	movff	postinc2,tblptrl
  2913  001340  CFDD FFF7          	movff	postdec2,tblptrh
  2914  001344                     	if	0	;tblptru may be non-zero
  2915  001344                     	endif
  2916  001344                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2917  001344  0E00               	movlw	low (__mediumconst shr (0+16))
  2918  001346  6EF8               	movwf	tblptru,c
  2919  001348                     	endif
  2920  001348  0008               	tblrd		*
  2921  00134A  50F5               	movf	tablat,w,c
  2922  00134C  6E01               	movwf	fputc@c^0,c
  2923  00134E  6A02               	clrf	(fputc@c+1)^0,c
  2924  001350  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2925  001354  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2926  001358  EC87  F00E         	call	_fputc	;wreg free
  2927  00135C                     
  2928                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2929  00135C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  001360  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  001364  2ADE               	incf	postinc2,f,c
  2932  001366  0E00               	movlw	0
  2933  001368  22DD               	addwfc	postdec2,f,c
  2934  00136A  EF87  F009         	goto	l2679
  2935  00136E                     l1278:
  2936  00136E  0012               	return		;funcret
  2937  001370                     __end_of_vfpfcnvrt:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _dtoa *****************
  2941 ;; Defined at:
  2942 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2945 ;;		 -> sprintf@f(6), 
  2946 ;;  d               8   29[COMRAM] long long 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  n               8   53[COMRAM] long long 
  2949 ;;  i               2   61[COMRAM] int 
  2950 ;;  s               2   51[COMRAM] int 
  2951 ;;  w               2   49[COMRAM] int 
  2952 ;;  p               2   47[COMRAM] int 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  2   27[COMRAM] int 
  2955 ;; Registers used:
  2956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2962 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2963 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2964 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2965 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2966 ;;Total ram usage:       36 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    4
  2969 ;; This function calls:
  2970 ;;		___aodiv
  2971 ;;		___aomod
  2972 ;;		_abs
  2973 ;;		_pad
  2974 ;; This function is called by:
  2975 ;;		_vfpfcnvrt
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text17
  2980  001370                     __ptext17:
  2981                           	callstack 0
  2982  001370                     _dtoa:
  2983                           	callstack 22
  2984  001370                     
  2985                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2986  001370  C01E  F036         	movff	dtoa@d,dtoa@n
  2987  001374  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2988  001378  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2989  00137C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2990  001380  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2991  001384  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2992  001388  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2993  00138C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2994  001390                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2996  001390  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2997  001392  EFCD  F009         	goto	u1291
  2998  001396  EFD0  F009         	goto	u1290
  2999  00139A                     u1291:
  3000  00139A  0E01               	movlw	1
  3001  00139C  EFD1  F009         	goto	u1300
  3002  0013A0                     u1290:
  3003  0013A0  0E00               	movlw	0
  3004  0013A2                     u1300:
  3005  0013A2  6E34               	movwf	dtoa@s^0,c
  3006  0013A4  6A35               	clrf	(dtoa@s+1)^0,c
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3009  0013A6  5034               	movf	dtoa@s^0,w,c
  3010  0013A8  1035               	iorwf	(dtoa@s+1)^0,w,c
  3011  0013AA  B4D8               	btfsc	status,2,c
  3012  0013AC  EFDA  F009         	goto	u1311
  3013  0013B0  EFDC  F009         	goto	u1310
  3014  0013B4                     u1311:
  3015  0013B4  EFEC  F009         	goto	l2481
  3016  0013B8                     u1310:
  3017  0013B8                     
  3018                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3019  0013B8  1E3D               	comf	(dtoa@n+7)^0,f,c
  3020  0013BA  1E3C               	comf	(dtoa@n+6)^0,f,c
  3021  0013BC  1E3B               	comf	(dtoa@n+5)^0,f,c
  3022  0013BE  1E3A               	comf	(dtoa@n+4)^0,f,c
  3023  0013C0  1E39               	comf	(dtoa@n+3)^0,f,c
  3024  0013C2  1E38               	comf	(dtoa@n+2)^0,f,c
  3025  0013C4  1E37               	comf	(dtoa@n+1)^0,f,c
  3026  0013C6  6C36               	negf	dtoa@n^0,c
  3027  0013C8  0E00               	movlw	0
  3028  0013CA  2237               	addwfc	(dtoa@n+1)^0,f,c
  3029  0013CC  2238               	addwfc	(dtoa@n+2)^0,f,c
  3030  0013CE  2239               	addwfc	(dtoa@n+3)^0,f,c
  3031  0013D0  223A               	addwfc	(dtoa@n+4)^0,f,c
  3032  0013D2  223B               	addwfc	(dtoa@n+5)^0,f,c
  3033  0013D4  223C               	addwfc	(dtoa@n+6)^0,f,c
  3034  0013D6  223D               	addwfc	(dtoa@n+7)^0,f,c
  3035  0013D8                     l2481:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3038  0013D8  0100               	movlb	0	; () banked
  3039  0013DA  BF70               	btfsc	(_prec+1)& (0+255),7,b
  3040  0013DC  EFF2  F009         	goto	u1321
  3041  0013E0  EFF4  F009         	goto	u1320
  3042  0013E4                     u1321:
  3043  0013E4  EFF5  F009         	goto	l2485
  3044  0013E8                     u1320:
  3045  0013E8                     
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3048  0013E8  9371               	bcf	_flags& (0+255),1,b
  3049  0013EA                     l2485:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3053  0013EA  BF70               	btfsc	(_prec+1)& (0+255),7,b
  3054  0013EC  EF02  F00A         	goto	u1330
  3055  0013F0  5170               	movf	(_prec+1)& (0+255),w,b
  3056  0013F2  E106               	bnz	u1331
  3057  0013F4  056F               	decf	_prec& (0+255),w,b
  3058  0013F6  B0D8               	btfsc	status,0,c
  3059  0013F8  EF00  F00A         	goto	u1331
  3060  0013FC  EF02  F00A         	goto	u1330
  3061  001400                     u1331:
  3062  001400  EF08  F00A         	goto	l1231
  3063  001404                     u1330:
  3064  001404                     
  3065                           ; BSR set to: 0
  3066  001404  0E00               	movlw	0
  3067  001406  6E31               	movwf	(dtoa@p+1)^0,c
  3068  001408  0E01               	movlw	1
  3069  00140A  6E30               	movwf	dtoa@p^0,c
  3070  00140C  EF0C  F00A         	goto	l1233
  3071  001410                     l1231:
  3072                           
  3073                           ; BSR set to: 0
  3074  001410  C06F  F030         	movff	_prec,dtoa@p
  3075  001414  C070  F031         	movff	_prec+1,dtoa@p+1
  3076  001418                     l1233:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3080  001418  C06D  F032         	movff	_width,dtoa@w
  3081  00141C  C06E  F033         	movff	_width+1,dtoa@w+1
  3082  001420                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3085  001420  5034               	movf	dtoa@s^0,w,c
  3086  001422  1035               	iorwf	(dtoa@s+1)^0,w,c
  3087  001424  A4D8               	btfss	status,2,c
  3088  001426  EF17  F00A         	goto	u1341
  3089  00142A  EF19  F00A         	goto	u1340
  3090  00142E                     u1341:
  3091  00142E  EF20  F00A         	goto	l2493
  3092  001432                     u1340:
  3093  001432                     
  3094                           ; BSR set to: 0
  3095  001432  A571               	btfss	_flags& (0+255),2,b
  3096  001434  EF1E  F00A         	goto	u1351
  3097  001438  EF20  F00A         	goto	u1350
  3098  00143C                     u1351:
  3099  00143C  EF23  F00A         	goto	l2495
  3100  001440                     u1350:
  3101  001440                     l2493:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  3105  001440  0632               	decf	dtoa@w^0,f,c
  3106  001442  A0D8               	btfss	status,0,c
  3107  001444  0633               	decf	(dtoa@w+1)^0,f,c
  3108  001446                     l2495:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3112  001446  0E00               	movlw	0
  3113  001448  6E3F               	movwf	(dtoa@i+1)^0,c
  3114  00144A  0E1F               	movlw	31
  3115  00144C  6E3E               	movwf	dtoa@i^0,c
  3116  00144E                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3119  00144E  0E00               	movlw	0
  3120  001450  6F92               	movwf	(_dbuf+31)& (0+255),b
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3123  001452  EFA7  F00A         	goto	l2509
  3124  001456                     l2499:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  3127  001456  063E               	decf	dtoa@i^0,f,c
  3128  001458  A0D8               	btfss	status,0,c
  3129  00145A  063F               	decf	(dtoa@i+1)^0,f,c
  3130  00145C                     
  3131                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3132  00145C  0E73               	movlw	low _dbuf
  3133  00145E  243E               	addwf	dtoa@i^0,w,c
  3134  001460  6ED9               	movwf	fsr2l,c
  3135  001462  0E00               	movlw	high _dbuf
  3136  001464  203F               	addwfc	(dtoa@i+1)^0,w,c
  3137  001466  6EDA               	movwf	fsr2h,c
  3138  001468  C036  F001         	movff	dtoa@n,___aomod@dividend
  3139  00146C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3140  001470  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3141  001474  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3142  001478  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3143  00147C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3144  001480  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3145  001484  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3146  001488  0E0A               	movlw	10
  3147  00148A  6E09               	movwf	___aomod@divisor^0,c
  3148  00148C  0E00               	movlw	0
  3149  00148E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3150  001490  0E00               	movlw	0
  3151  001492  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3152  001494  0E00               	movlw	0
  3153  001496  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3154  001498  0E00               	movlw	0
  3155  00149A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3156  00149C  0E00               	movlw	0
  3157  00149E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3158  0014A0  0E00               	movlw	0
  3159  0014A2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3160  0014A4  0E00               	movlw	0
  3161  0014A6  6E10               	movwf	(___aomod@divisor+7)^0,c
  3162  0014A8  ECBF  F00C         	call	___aomod	;wreg free
  3163  0014AC  C001  F026         	movff	?___aomod,??_dtoa
  3164  0014B0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3165  0014B4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3166  0014B8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3167  0014BC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3168  0014C0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3169  0014C4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3170  0014C8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3171  0014CC  C026  F013         	movff	??_dtoa,abs@a
  3172  0014D0  C028  F014         	movff	??_dtoa+2,abs@a+1
  3173  0014D4  EC0F  F012         	call	_abs	;wreg free
  3174  0014D8  5013               	movf	?_abs^0,w,c
  3175  0014DA  0F30               	addlw	48
  3176  0014DC  6EDF               	movwf	indf2,c
  3177  0014DE                     
  3178                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  3179  0014DE  0630               	decf	dtoa@p^0,f,c
  3180  0014E0  A0D8               	btfss	status,0,c
  3181  0014E2  0631               	decf	(dtoa@p+1)^0,f,c
  3182  0014E4                     
  3183                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  3184  0014E4  0632               	decf	dtoa@w^0,f,c
  3185  0014E6  A0D8               	btfss	status,0,c
  3186  0014E8  0633               	decf	(dtoa@w+1)^0,f,c
  3187  0014EA                     
  3188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3189  0014EA  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3190  0014EE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3191  0014F2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3192  0014F6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3193  0014FA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3194  0014FE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3195  001502  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3196  001506  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3197  00150A  0E0A               	movlw	10
  3198  00150C  6E09               	movwf	___aodiv@divisor^0,c
  3199  00150E  0E00               	movlw	0
  3200  001510  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3201  001512  0E00               	movlw	0
  3202  001514  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3203  001516  0E00               	movlw	0
  3204  001518  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3205  00151A  0E00               	movlw	0
  3206  00151C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3207  00151E  0E00               	movlw	0
  3208  001520  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3209  001522  0E00               	movlw	0
  3210  001524  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3211  001526  0E00               	movlw	0
  3212  001528  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3213  00152A  ECFB  F00B         	call	___aodiv	;wreg free
  3214  00152E  C001  F036         	movff	?___aodiv,dtoa@n
  3215  001532  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3216  001536  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3217  00153A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3218  00153E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3219  001542  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3220  001546  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3221  00154A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3222  00154E                     l2509:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3225  00154E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3226  001550  EFB2  F00A         	goto	u1361
  3227  001554  503F               	movf	(dtoa@i+1)^0,w,c
  3228  001556  E108               	bnz	u1360
  3229  001558  043E               	decf	dtoa@i^0,w,c
  3230  00155A  A0D8               	btfss	status,0,c
  3231  00155C  EFB2  F00A         	goto	u1361
  3232  001560  EFB4  F00A         	goto	u1360
  3233  001564                     u1361:
  3234  001564  EFE5  F00A         	goto	l2519
  3235  001568                     u1360:
  3236  001568  5036               	movf	dtoa@n^0,w,c
  3237  00156A  1037               	iorwf	(dtoa@n+1)^0,w,c
  3238  00156C  1038               	iorwf	(dtoa@n+2)^0,w,c
  3239  00156E  1039               	iorwf	(dtoa@n+3)^0,w,c
  3240  001570  103A               	iorwf	(dtoa@n+4)^0,w,c
  3241  001572  103B               	iorwf	(dtoa@n+5)^0,w,c
  3242  001574  103C               	iorwf	(dtoa@n+6)^0,w,c
  3243  001576  103D               	iorwf	(dtoa@n+7)^0,w,c
  3244  001578  A4D8               	btfss	status,2,c
  3245  00157A  EFC1  F00A         	goto	u1371
  3246  00157E  EFC3  F00A         	goto	u1370
  3247  001582                     u1371:
  3248  001582  EF2B  F00A         	goto	l2499
  3249  001586                     u1370:
  3250  001586  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3251  001588  EFD0  F00A         	goto	u1380
  3252  00158C  5031               	movf	(dtoa@p+1)^0,w,c
  3253  00158E  E106               	bnz	u1381
  3254  001590  0430               	decf	dtoa@p^0,w,c
  3255  001592  B0D8               	btfsc	status,0,c
  3256  001594  EFCE  F00A         	goto	u1381
  3257  001598  EFD0  F00A         	goto	u1380
  3258  00159C                     u1381:
  3259  00159C  EF2B  F00A         	goto	l2499
  3260  0015A0                     u1380:
  3261  0015A0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3262  0015A2  EFDB  F00A         	goto	u1391
  3263  0015A6  5033               	movf	(dtoa@w+1)^0,w,c
  3264  0015A8  E108               	bnz	u1390
  3265  0015AA  0432               	decf	dtoa@w^0,w,c
  3266  0015AC  A0D8               	btfss	status,0,c
  3267  0015AE  EFDB  F00A         	goto	u1391
  3268  0015B2  EFDD  F00A         	goto	u1390
  3269  0015B6                     u1391:
  3270  0015B6  EFE5  F00A         	goto	l2519
  3271  0015BA                     u1390:
  3272  0015BA  0100               	movlb	0	; () banked
  3273  0015BC  B371               	btfsc	_flags& (0+255),1,b
  3274  0015BE  EFE3  F00A         	goto	u1401
  3275  0015C2  EFE5  F00A         	goto	u1400
  3276  0015C6                     u1401:
  3277  0015C6  EF2B  F00A         	goto	l2499
  3278  0015CA                     u1400:
  3279  0015CA                     l2519:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3282  0015CA  5034               	movf	dtoa@s^0,w,c
  3283  0015CC  1035               	iorwf	(dtoa@s+1)^0,w,c
  3284  0015CE  A4D8               	btfss	status,2,c
  3285  0015D0  EFEC  F00A         	goto	u1411
  3286  0015D4  EFEE  F00A         	goto	u1410
  3287  0015D8                     u1411:
  3288  0015D8  EFF6  F00A         	goto	l2523
  3289  0015DC                     u1410:
  3290  0015DC  0100               	movlb	0	; () banked
  3291  0015DE  A571               	btfss	_flags& (0+255),2,b
  3292  0015E0  EFF4  F00A         	goto	u1421
  3293  0015E4  EFF6  F00A         	goto	u1420
  3294  0015E8                     u1421:
  3295  0015E8  EF14  F00B         	goto	l2533
  3296  0015EC                     u1420:
  3297  0015EC                     l2523:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  3300  0015EC  063E               	decf	dtoa@i^0,f,c
  3301  0015EE  A0D8               	btfss	status,0,c
  3302  0015F0  063F               	decf	(dtoa@i+1)^0,f,c
  3303  0015F2                     
  3304                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3305  0015F2  5034               	movf	dtoa@s^0,w,c
  3306  0015F4  1035               	iorwf	(dtoa@s+1)^0,w,c
  3307  0015F6  A4D8               	btfss	status,2,c
  3308  0015F8  EF00  F00B         	goto	u1431
  3309  0015FC  EF02  F00B         	goto	u1430
  3310  001600                     u1431:
  3311  001600  EF08  F00B         	goto	l2529
  3312  001604                     u1430:
  3313  001604  0E00               	movlw	0
  3314  001606  6E2F               	movwf	(_dtoa$1385+1)^0,c
  3315  001608  0E2B               	movlw	43
  3316  00160A  6E2E               	movwf	_dtoa$1385^0,c
  3317  00160C  EF0C  F00B         	goto	l2531
  3318  001610                     l2529:
  3319  001610  0E00               	movlw	0
  3320  001612  6E2F               	movwf	(_dtoa$1385+1)^0,c
  3321  001614  0E2D               	movlw	45
  3322  001616  6E2E               	movwf	_dtoa$1385^0,c
  3323  001618                     l2531:
  3324  001618  0E73               	movlw	low _dbuf
  3325  00161A  243E               	addwf	dtoa@i^0,w,c
  3326  00161C  6ED9               	movwf	fsr2l,c
  3327  00161E  0E00               	movlw	high _dbuf
  3328  001620  203F               	addwfc	(dtoa@i+1)^0,w,c
  3329  001622  6EDA               	movwf	fsr2h,c
  3330  001624  C02E  FFDF         	movff	_dtoa$1385,indf2
  3331  001628                     l2533:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3334  001628  C01C  F011         	movff	dtoa@fp,pad@fp
  3335  00162C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3336  001630  0E73               	movlw	low _dbuf
  3337  001632  243E               	addwf	dtoa@i^0,w,c
  3338  001634  6E13               	movwf	pad@buf^0,c
  3339  001636  0E00               	movlw	high _dbuf
  3340  001638  203F               	addwfc	(dtoa@i+1)^0,w,c
  3341  00163A  6E14               	movwf	(pad@buf+1)^0,c
  3342  00163C  C032  F015         	movff	dtoa@w,pad@p
  3343  001640  C033  F016         	movff	dtoa@w+1,pad@p+1
  3344  001644  ECEC  F00E         	call	_pad	;wreg free
  3345  001648  C011  F01C         	movff	?_pad,?_dtoa
  3346  00164C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3347  001650  0012               	return		;funcret
  3348  001652                     __end_of_dtoa:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _pad *****************
  3352 ;; Defined at:
  3353 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3356 ;;		 -> sprintf@f(6), 
  3357 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3358 ;;		 -> dbuf(32), 
  3359 ;;  p               2   20[COMRAM] int 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  w               2   25[COMRAM] int 
  3362 ;;  i               2   23[COMRAM] int 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2   16[COMRAM] int 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3372 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;Total ram usage:       11 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    3
  3379 ;; This function calls:
  3380 ;;		_fputc
  3381 ;;		_fputs
  3382 ;;		_strlen
  3383 ;; This function is called by:
  3384 ;;		_dtoa
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text18
  3389  001DD8                     __ptext18:
  3390                           	callstack 0
  3391  001DD8                     _pad:
  3392                           	callstack 22
  3393  001DD8                     
  3394                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3395  001DD8  0100               	movlb	0	; () banked
  3396  001DDA  A171               	btfss	_flags& (0+255),0,b
  3397  001DDC  EFF2  F00E         	goto	u1141
  3398  001DE0  EFF4  F00E         	goto	u1140
  3399  001DE4                     u1141:
  3400  001DE4  EFFE  F00E         	goto	l2401
  3401  001DE8                     u1140:
  3402  001DE8                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3405  001DE8  C013  F00A         	movff	pad@buf,fputs@s
  3406  001DEC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3407  001DF0  C011  F00C         	movff	pad@fp,fputs@fp
  3408  001DF4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3409  001DF8  ECED  F011         	call	_fputs	;wreg free
  3410  001DFC                     l2401:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3413  001DFC  BE16               	btfsc	(pad@p+1)^0,7,c
  3414  001DFE  EF03  F00F         	goto	u1151
  3415  001E02  EF05  F00F         	goto	u1150
  3416  001E06                     u1151:
  3417  001E06  EF0B  F00F         	goto	l2405
  3418  001E0A                     u1150:
  3419  001E0A  C015  F01A         	movff	pad@p,pad@w
  3420  001E0E  C016  F01B         	movff	pad@p+1,pad@w+1
  3421  001E12  EF0F  F00F         	goto	l1204
  3422  001E16                     l2405:
  3423  001E16  0E00               	movlw	0
  3424  001E18  6E1B               	movwf	(pad@w+1)^0,c
  3425  001E1A  0E00               	movlw	0
  3426  001E1C  6E1A               	movwf	pad@w^0,c
  3427  001E1E                     l1204:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3430  001E1E  0E00               	movlw	0
  3431  001E20  6E19               	movwf	(pad@i+1)^0,c
  3432  001E22  0E00               	movlw	0
  3433  001E24  6E18               	movwf	pad@i^0,c
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3436  001E26  EF21  F00F         	goto	l2411
  3437  001E2A                     l2407:
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3440  001E2A  0E00               	movlw	0
  3441  001E2C  6E02               	movwf	(fputc@c+1)^0,c
  3442  001E2E  0E20               	movlw	32
  3443  001E30  6E01               	movwf	fputc@c^0,c
  3444  001E32  C011  F003         	movff	pad@fp,fputc@fp
  3445  001E36  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3446  001E3A  EC87  F00E         	call	_fputc	;wreg free
  3447  001E3E                     
  3448                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3449  001E3E  4A18               	infsnz	pad@i^0,f,c
  3450  001E40  2A19               	incf	(pad@i+1)^0,f,c
  3451  001E42                     l2411:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3454  001E42  501A               	movf	pad@w^0,w,c
  3455  001E44  5C18               	subwf	pad@i^0,w,c
  3456  001E46  5019               	movf	(pad@i+1)^0,w,c
  3457  001E48  0A80               	xorlw	128
  3458  001E4A  6E17               	movwf	??_pad^0,c
  3459  001E4C  501B               	movf	(pad@w+1)^0,w,c
  3460  001E4E  0A80               	xorlw	128
  3461  001E50  5817               	subwfb	??_pad^0,w,c
  3462  001E52  A0D8               	btfss	status,0,c
  3463  001E54  EF2E  F00F         	goto	u1161
  3464  001E58  EF30  F00F         	goto	u1160
  3465  001E5C                     u1161:
  3466  001E5C  EF15  F00F         	goto	l2407
  3467  001E60                     u1160:
  3468  001E60                     
  3469                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3470  001E60  0100               	movlb	0	; () banked
  3471  001E62  B171               	btfsc	_flags& (0+255),0,b
  3472  001E64  EF36  F00F         	goto	u1171
  3473  001E68  EF38  F00F         	goto	u1170
  3474  001E6C                     u1171:
  3475  001E6C  EF42  F00F         	goto	l2415
  3476  001E70                     u1170:
  3477  001E70                     
  3478                           ; BSR set to: 0
  3479                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3480  001E70  C013  F00A         	movff	pad@buf,fputs@s
  3481  001E74  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3482  001E78  C011  F00C         	movff	pad@fp,fputs@fp
  3483  001E7C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3484  001E80  ECED  F011         	call	_fputs	;wreg free
  3485  001E84                     l2415:
  3486                           
  3487                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3488  001E84  C013  F001         	movff	pad@buf,strlen@s
  3489  001E88  C014  F002         	movff	pad@buf+1,strlen@s+1
  3490  001E8C  EC68  F012         	call	_strlen	;wreg free
  3491  001E90  501A               	movf	pad@w^0,w,c
  3492  001E92  2401               	addwf	?_strlen^0,w,c
  3493  001E94  6E11               	movwf	?_pad^0,c
  3494  001E96  501B               	movf	(pad@w+1)^0,w,c
  3495  001E98  2002               	addwfc	(?_strlen+1)^0,w,c
  3496  001E9A  6E12               	movwf	(?_pad+1)^0,c
  3497  001E9C  0012               	return		;funcret
  3498  001E9E                     __end_of_pad:
  3499                           	callstack 0
  3500                           
  3501 ;; *************** function _strlen *****************
  3502 ;; Defined at:
  3503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3506 ;;		 -> dbuf(32), 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3509 ;;		 -> dbuf(32), 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  2    0[COMRAM] unsigned int 
  3512 ;; Registers used:
  3513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;Total ram usage:        4 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_pad
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text19
  3533  0024D0                     __ptext19:
  3534                           	callstack 0
  3535  0024D0                     _strlen:
  3536                           	callstack 24
  3537  0024D0  C001  F003         	movff	strlen@s,strlen@a
  3538  0024D4  C002  F004         	movff	strlen@s+1,strlen@a+1
  3539  0024D8  EF70  F012         	goto	l2289
  3540  0024DC                     l2287:
  3541  0024DC  4A01               	infsnz	strlen@s^0,f,c
  3542  0024DE  2A02               	incf	(strlen@s+1)^0,f,c
  3543  0024E0                     l2289:
  3544  0024E0  C001  FFD9         	movff	strlen@s,fsr2l
  3545  0024E4  C002  FFDA         	movff	strlen@s+1,fsr2h
  3546  0024E8  50DF               	movf	indf2,w,c
  3547  0024EA  A4D8               	btfss	status,2,c
  3548  0024EC  EF7A  F012         	goto	u1001
  3549  0024F0  EF7C  F012         	goto	u1000
  3550  0024F4                     u1001:
  3551  0024F4  EF6E  F012         	goto	l2287
  3552  0024F8                     u1000:
  3553  0024F8  5003               	movf	strlen@a^0,w,c
  3554  0024FA  5C01               	subwf	strlen@s^0,w,c
  3555  0024FC  6E01               	movwf	?_strlen^0,c
  3556  0024FE  5004               	movf	(strlen@a+1)^0,w,c
  3557  002500  5802               	subwfb	(strlen@s+1)^0,w,c
  3558  002502  6E02               	movwf	(?_strlen+1)^0,c
  3559  002504  0012               	return		;funcret
  3560  002506                     __end_of_strlen:
  3561                           	callstack 0
  3562                           
  3563 ;; *************** function _fputs *****************
  3564 ;; Defined at:
  3565 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3568 ;;		 -> dbuf(32), 
  3569 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3570 ;;		 -> sprintf@f(6), 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  i               2   14[COMRAM] int 
  3573 ;;  c               1   13[COMRAM] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  2    9[COMRAM] int 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3587 ;;Total ram usage:        7 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    2
  3590 ;; This function calls:
  3591 ;;		_fputc
  3592 ;; This function is called by:
  3593 ;;		_pad
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text20
  3598  0023DA                     __ptext20:
  3599                           	callstack 0
  3600  0023DA                     _fputs:
  3601                           	callstack 22
  3602  0023DA  0E00               	movlw	0
  3603  0023DC  6E10               	movwf	(fputs@i+1)^0,c
  3604  0023DE  0E00               	movlw	0
  3605  0023E0  6E0F               	movwf	fputs@i^0,c
  3606  0023E2  EFFE  F011         	goto	l2283
  3607  0023E6                     l2279:
  3608  0023E6  C00E  F001         	movff	fputs@c,fputc@c
  3609  0023EA  6A02               	clrf	(fputc@c+1)^0,c
  3610  0023EC  C00C  F003         	movff	fputs@fp,fputc@fp
  3611  0023F0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3612  0023F4  EC87  F00E         	call	_fputc	;wreg free
  3613  0023F8  4A0F               	infsnz	fputs@i^0,f,c
  3614  0023FA  2A10               	incf	(fputs@i+1)^0,f,c
  3615  0023FC                     l2283:
  3616  0023FC  500F               	movf	fputs@i^0,w,c
  3617  0023FE  240A               	addwf	fputs@s^0,w,c
  3618  002400  6ED9               	movwf	fsr2l,c
  3619  002402  5010               	movf	(fputs@i+1)^0,w,c
  3620  002404  200B               	addwfc	(fputs@s+1)^0,w,c
  3621  002406  6EDA               	movwf	fsr2h,c
  3622  002408  50DF               	movf	indf2,w,c
  3623  00240A  6E0E               	movwf	fputs@c^0,c
  3624  00240C  500E               	movf	fputs@c^0,w,c
  3625  00240E  A4D8               	btfss	status,2,c
  3626  002410  EF0C  F012         	goto	u991
  3627  002414  EF0E  F012         	goto	u990
  3628  002418                     u991:
  3629  002418  EFF3  F011         	goto	l2279
  3630  00241C                     u990:
  3631  00241C  0012               	return		;funcret
  3632  00241E                     __end_of_fputs:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _abs *****************
  3636 ;; Defined at:
  3637 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  a               2   18[COMRAM] int 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2   18[COMRAM] int 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;Total ram usage:        4 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_dtoa
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text21
  3665  00241E                     __ptext21:
  3666                           	callstack 0
  3667  00241E                     _abs:
  3668                           	callstack 25
  3669  00241E  BE14               	btfsc	(abs@a+1)^0,7,c
  3670  002420  EF1C  F012         	goto	u1180
  3671  002424  5014               	movf	(abs@a+1)^0,w,c
  3672  002426  E106               	bnz	u1181
  3673  002428  0413               	decf	abs@a^0,w,c
  3674  00242A  B0D8               	btfsc	status,0,c
  3675  00242C  EF1A  F012         	goto	u1181
  3676  002430  EF1C  F012         	goto	u1180
  3677  002434                     u1181:
  3678  002434  EF2A  F012         	goto	l1292
  3679  002438                     u1180:
  3680  002438  C013  F015         	movff	abs@a,??_abs
  3681  00243C  C014  F016         	movff	abs@a+1,??_abs+1
  3682  002440  1E15               	comf	??_abs^0,f,c
  3683  002442  1E16               	comf	(??_abs+1)^0,f,c
  3684  002444  4A15               	infsnz	??_abs^0,f,c
  3685  002446  2A16               	incf	(??_abs+1)^0,f,c
  3686  002448  C015  F013         	movff	??_abs,?_abs
  3687  00244C  C016  F014         	movff	??_abs+1,?_abs+1
  3688  002450  EF2E  F012         	goto	l1295
  3689  002454                     l1292:
  3690  002454  C013  F013         	movff	abs@a,?_abs
  3691  002458  C014  F014         	movff	abs@a+1,?_abs+1
  3692  00245C                     l1295:
  3693  00245C  0012               	return		;funcret
  3694  00245E                     __end_of_abs:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function ___aomod *****************
  3698 ;; Defined at:
  3699 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  dividend        8    0[COMRAM] long long 
  3702 ;;  divisor         8    8[COMRAM] long long 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  sign            1   17[COMRAM] unsigned char 
  3705 ;;  counter         1   16[COMRAM] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  8    0[COMRAM] long long 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3715 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;Total ram usage:       18 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_dtoa
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text22
  3729  00197E                     __ptext22:
  3730                           	callstack 0
  3731  00197E                     ___aomod:
  3732                           	callstack 25
  3733  00197E  0E00               	movlw	0
  3734  001980  6E12               	movwf	___aomod@sign^0,c
  3735  001982  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3736  001984  EFC8  F00C         	goto	u1080
  3737  001988  EFC6  F00C         	goto	u1081
  3738  00198C                     u1081:
  3739  00198C  EFDA  F00C         	goto	l2369
  3740  001990                     u1080:
  3741  001990  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3742  001992  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3743  001994  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3744  001996  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3745  001998  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3746  00199A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3747  00199C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3748  00199E  6C01               	negf	___aomod@dividend^0,c
  3749  0019A0  0E00               	movlw	0
  3750  0019A2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3751  0019A4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3752  0019A6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3753  0019A8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3754  0019AA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3755  0019AC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3756  0019AE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3757  0019B0  0E01               	movlw	1
  3758  0019B2  6E12               	movwf	___aomod@sign^0,c
  3759  0019B4                     l2369:
  3760  0019B4  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3761  0019B6  EFE1  F00C         	goto	u1090
  3762  0019BA  EFDF  F00C         	goto	u1091
  3763  0019BE                     u1091:
  3764  0019BE  EFF1  F00C         	goto	l2373
  3765  0019C2                     u1090:
  3766  0019C2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3767  0019C4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3768  0019C6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3769  0019C8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3770  0019CA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3771  0019CC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3772  0019CE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3773  0019D0  6C09               	negf	___aomod@divisor^0,c
  3774  0019D2  0E00               	movlw	0
  3775  0019D4  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3776  0019D6  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3777  0019D8  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3778  0019DA  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3779  0019DC  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3780  0019DE  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3781  0019E0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3782  0019E2                     l2373:
  3783  0019E2  5009               	movf	___aomod@divisor^0,w,c
  3784  0019E4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3785  0019E6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3786  0019E8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3787  0019EA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3788  0019EC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3789  0019EE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3790  0019F0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3791  0019F2  B4D8               	btfsc	status,2,c
  3792  0019F4  EFFE  F00C         	goto	u1101
  3793  0019F8  EF00  F00D         	goto	u1100
  3794  0019FC                     u1101:
  3795  0019FC  EF48  F00D         	goto	l2389
  3796  001A00                     u1100:
  3797  001A00  0E01               	movlw	1
  3798  001A02  6E11               	movwf	___aomod@counter^0,c
  3799  001A04  EF0E  F00D         	goto	l2379
  3800  001A08                     l2377:
  3801  001A08  90D8               	bcf	status,0,c
  3802  001A0A  3609               	rlcf	___aomod@divisor^0,f,c
  3803  001A0C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3804  001A0E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3805  001A10  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3806  001A12  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3807  001A14  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3808  001A16  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3809  001A18  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3810  001A1A  2A11               	incf	___aomod@counter^0,f,c
  3811  001A1C                     l2379:
  3812  001A1C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3813  001A1E  EF13  F00D         	goto	u1111
  3814  001A22  EF15  F00D         	goto	u1110
  3815  001A26                     u1111:
  3816  001A26  EF04  F00D         	goto	l2377
  3817  001A2A                     u1110:
  3818  001A2A                     l2381:
  3819  001A2A  5009               	movf	___aomod@divisor^0,w,c
  3820  001A2C  5C01               	subwf	___aomod@dividend^0,w,c
  3821  001A2E  500A               	movf	(___aomod@divisor+1)^0,w,c
  3822  001A30  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3823  001A32  500B               	movf	(___aomod@divisor+2)^0,w,c
  3824  001A34  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3825  001A36  500C               	movf	(___aomod@divisor+3)^0,w,c
  3826  001A38  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3827  001A3A  500D               	movf	(___aomod@divisor+4)^0,w,c
  3828  001A3C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3829  001A3E  500E               	movf	(___aomod@divisor+5)^0,w,c
  3830  001A40  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3831  001A42  500F               	movf	(___aomod@divisor+6)^0,w,c
  3832  001A44  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3833  001A46  5010               	movf	(___aomod@divisor+7)^0,w,c
  3834  001A48  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3835  001A4A  A0D8               	btfss	status,0,c
  3836  001A4C  EF2A  F00D         	goto	u1121
  3837  001A50  EF2C  F00D         	goto	u1120
  3838  001A54                     u1121:
  3839  001A54  EF3C  F00D         	goto	l2385
  3840  001A58                     u1120:
  3841  001A58  5009               	movf	___aomod@divisor^0,w,c
  3842  001A5A  5E01               	subwf	___aomod@dividend^0,f,c
  3843  001A5C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3844  001A5E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3845  001A60  500B               	movf	(___aomod@divisor+2)^0,w,c
  3846  001A62  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3847  001A64  500C               	movf	(___aomod@divisor+3)^0,w,c
  3848  001A66  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3849  001A68  500D               	movf	(___aomod@divisor+4)^0,w,c
  3850  001A6A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3851  001A6C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3852  001A6E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3853  001A70  500F               	movf	(___aomod@divisor+6)^0,w,c
  3854  001A72  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3855  001A74  5010               	movf	(___aomod@divisor+7)^0,w,c
  3856  001A76  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3857  001A78                     l2385:
  3858  001A78  90D8               	bcf	status,0,c
  3859  001A7A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3860  001A7C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3861  001A7E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3862  001A80  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3863  001A82  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3864  001A84  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3865  001A86  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3866  001A88  3209               	rrcf	___aomod@divisor^0,f,c
  3867  001A8A  2E11               	decfsz	___aomod@counter^0,f,c
  3868  001A8C  EF15  F00D         	goto	l2381
  3869  001A90                     l2389:
  3870  001A90  5012               	movf	___aomod@sign^0,w,c
  3871  001A92  B4D8               	btfsc	status,2,c
  3872  001A94  EF4E  F00D         	goto	u1131
  3873  001A98  EF50  F00D         	goto	u1130
  3874  001A9C                     u1131:
  3875  001A9C  EF60  F00D         	goto	l2393
  3876  001AA0                     u1130:
  3877  001AA0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3878  001AA2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3879  001AA4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3880  001AA6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3881  001AA8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3882  001AAA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3883  001AAC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3884  001AAE  6C01               	negf	___aomod@dividend^0,c
  3885  001AB0  0E00               	movlw	0
  3886  001AB2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3887  001AB4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3888  001AB6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3889  001AB8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3890  001ABA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3891  001ABC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3892  001ABE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3893  001AC0                     l2393:
  3894  001AC0  C001  F001         	movff	___aomod@dividend,?___aomod
  3895  001AC4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3896  001AC8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3897  001ACC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3898  001AD0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3899  001AD4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3900  001AD8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3901  001ADC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3902  001AE0  0012               	return		;funcret
  3903  001AE2                     __end_of___aomod:
  3904                           	callstack 0
  3905                           
  3906 ;; *************** function ___aodiv *****************
  3907 ;; Defined at:
  3908 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  dividend        8    0[COMRAM] long long 
  3911 ;;  divisor         8    8[COMRAM] long long 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  quotient        8   18[COMRAM] long long 
  3914 ;;  sign            1   17[COMRAM] unsigned char 
  3915 ;;  counter         1   16[COMRAM] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  8    0[COMRAM] long long 
  3918 ;; Registers used:
  3919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3925 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;Total ram usage:       26 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_dtoa
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text23
  3939  0017F6                     __ptext23:
  3940                           	callstack 0
  3941  0017F6                     ___aodiv:
  3942                           	callstack 25
  3943  0017F6  0E00               	movlw	0
  3944  0017F8  6E12               	movwf	___aodiv@sign^0,c
  3945  0017FA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3946  0017FC  EF04  F00C         	goto	u1010
  3947  001800  EF02  F00C         	goto	u1011
  3948  001804                     u1011:
  3949  001804  EF16  F00C         	goto	l2325
  3950  001808                     u1010:
  3951  001808  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3952  00180A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3953  00180C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3954  00180E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3955  001810  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3956  001812  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3957  001814  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3958  001816  6C09               	negf	___aodiv@divisor^0,c
  3959  001818  0E00               	movlw	0
  3960  00181A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3961  00181C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3962  00181E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3963  001820  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3964  001822  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3965  001824  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3966  001826  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3967  001828  0E01               	movlw	1
  3968  00182A  6E12               	movwf	___aodiv@sign^0,c
  3969  00182C                     l2325:
  3970  00182C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3971  00182E  EF1D  F00C         	goto	u1020
  3972  001832  EF1B  F00C         	goto	u1021
  3973  001836                     u1021:
  3974  001836  EF2F  F00C         	goto	l2331
  3975  00183A                     u1020:
  3976  00183A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3977  00183C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3978  00183E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3979  001840  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3980  001842  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3981  001844  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3982  001846  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3983  001848  6C01               	negf	___aodiv@dividend^0,c
  3984  00184A  0E00               	movlw	0
  3985  00184C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3986  00184E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3987  001850  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3988  001852  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3989  001854  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3990  001856  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3991  001858  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3992  00185A  0E01               	movlw	1
  3993  00185C  1A12               	xorwf	___aodiv@sign^0,f,c
  3994  00185E                     l2331:
  3995  00185E  EE20  F013         	lfsr	2,___aodiv@quotient
  3996  001862  0E07               	movlw	7
  3997  001864                     u1031:
  3998  001864  6ADE               	clrf	postinc2,c
  3999  001866  06E8               	decf	wreg,f,c
  4000  001868  E2FD               	bc	u1031
  4001  00186A  5009               	movf	___aodiv@divisor^0,w,c
  4002  00186C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4003  00186E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4004  001870  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4005  001872  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4006  001874  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4007  001876  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4008  001878  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4009  00187A  B4D8               	btfsc	status,2,c
  4010  00187C  EF42  F00C         	goto	u1041
  4011  001880  EF44  F00C         	goto	u1040
  4012  001884                     u1041:
  4013  001884  EF96  F00C         	goto	l2353
  4014  001888                     u1040:
  4015  001888  0E01               	movlw	1
  4016  00188A  6E11               	movwf	___aodiv@counter^0,c
  4017  00188C  EF52  F00C         	goto	l2339
  4018  001890                     l2337:
  4019  001890  90D8               	bcf	status,0,c
  4020  001892  3609               	rlcf	___aodiv@divisor^0,f,c
  4021  001894  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4022  001896  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4023  001898  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4024  00189A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4025  00189C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4026  00189E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4027  0018A0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4028  0018A2  2A11               	incf	___aodiv@counter^0,f,c
  4029  0018A4                     l2339:
  4030  0018A4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4031  0018A6  EF57  F00C         	goto	u1051
  4032  0018AA  EF59  F00C         	goto	u1050
  4033  0018AE                     u1051:
  4034  0018AE  EF48  F00C         	goto	l2337
  4035  0018B2                     u1050:
  4036  0018B2                     l2341:
  4037  0018B2  90D8               	bcf	status,0,c
  4038  0018B4  3613               	rlcf	___aodiv@quotient^0,f,c
  4039  0018B6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4040  0018B8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4041  0018BA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4042  0018BC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4043  0018BE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4044  0018C0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4045  0018C2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4046  0018C4  5009               	movf	___aodiv@divisor^0,w,c
  4047  0018C6  5C01               	subwf	___aodiv@dividend^0,w,c
  4048  0018C8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4049  0018CA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4050  0018CC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4051  0018CE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4052  0018D0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4053  0018D2  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4054  0018D4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4055  0018D6  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4056  0018D8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4057  0018DA  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4058  0018DC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4059  0018DE  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4060  0018E0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4061  0018E2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4062  0018E4  A0D8               	btfss	status,0,c
  4063  0018E6  EF77  F00C         	goto	u1061
  4064  0018EA  EF79  F00C         	goto	u1060
  4065  0018EE                     u1061:
  4066  0018EE  EF8A  F00C         	goto	l2349
  4067  0018F2                     u1060:
  4068  0018F2  5009               	movf	___aodiv@divisor^0,w,c
  4069  0018F4  5E01               	subwf	___aodiv@dividend^0,f,c
  4070  0018F6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4071  0018F8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4072  0018FA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4073  0018FC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4074  0018FE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4075  001900  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4076  001902  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4077  001904  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4078  001906  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4079  001908  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4080  00190A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4081  00190C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4082  00190E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4083  001910  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4084  001912  8013               	bsf	___aodiv@quotient^0,0,c
  4085  001914                     l2349:
  4086  001914  90D8               	bcf	status,0,c
  4087  001916  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4088  001918  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4089  00191A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4090  00191C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4091  00191E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4092  001920  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4093  001922  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4094  001924  3209               	rrcf	___aodiv@divisor^0,f,c
  4095  001926  2E11               	decfsz	___aodiv@counter^0,f,c
  4096  001928  EF59  F00C         	goto	l2341
  4097  00192C                     l2353:
  4098  00192C  5012               	movf	___aodiv@sign^0,w,c
  4099  00192E  B4D8               	btfsc	status,2,c
  4100  001930  EF9C  F00C         	goto	u1071
  4101  001934  EF9E  F00C         	goto	u1070
  4102  001938                     u1071:
  4103  001938  EFAE  F00C         	goto	l2357
  4104  00193C                     u1070:
  4105  00193C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4106  00193E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4107  001940  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4108  001942  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4109  001944  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4110  001946  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4111  001948  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4112  00194A  6C13               	negf	___aodiv@quotient^0,c
  4113  00194C  0E00               	movlw	0
  4114  00194E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4115  001950  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4116  001952  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4117  001954  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4118  001956  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4119  001958  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4120  00195A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4121  00195C                     l2357:
  4122  00195C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4123  001960  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4124  001964  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4125  001968  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4126  00196C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4127  001970  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4128  001974  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4129  001978  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4130  00197C  0012               	return		;funcret
  4131  00197E                     __end_of___aodiv:
  4132                           	callstack 0
  4133                           
  4134 ;; *************** function _ctoa *****************
  4135 ;; Defined at:
  4136 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4139 ;;		 -> sprintf@f(6), 
  4140 ;;  c               1   11[COMRAM] unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  w               2   15[COMRAM] int 
  4143 ;;  l               2   13[COMRAM] int 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2    9[COMRAM] int 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4153 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4157 ;;Total ram usage:        8 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    2
  4160 ;; This function calls:
  4161 ;;		_fputc
  4162 ;; This function is called by:
  4163 ;;		_vfpfcnvrt
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text24
  4168  001C36                     __ptext24:
  4169                           	callstack 0
  4170  001C36                     _ctoa:
  4171                           	callstack 24
  4172  001C36                     
  4173                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  4174  001C36  0100               	movlb	0	; () banked
  4175  001C38  516D               	movf	_width& (0+255),w,b
  4176  001C3A  116E               	iorwf	(_width+1)& (0+255),w,b
  4177  001C3C  A4D8               	btfss	status,2,c
  4178  001C3E  EF23  F00E         	goto	u1241
  4179  001C42  EF25  F00E         	goto	u1240
  4180  001C46                     u1241:
  4181  001C46  EF2B  F00E         	goto	l2451
  4182  001C4A                     u1240:
  4183  001C4A                     
  4184                           ; BSR set to: 0
  4185  001C4A  C06D  F010         	movff	_width,ctoa@w
  4186  001C4E  C06E  F011         	movff	_width+1,ctoa@w+1
  4187  001C52  EF31  F00E         	goto	l2453
  4188  001C56                     l2451:
  4189                           
  4190                           ; BSR set to: 0
  4191  001C56  0EFF               	movlw	255
  4192  001C58  256D               	addwf	_width& (0+255),w,b
  4193  001C5A  6E10               	movwf	ctoa@w^0,c
  4194  001C5C  0EFF               	movlw	255
  4195  001C5E  216E               	addwfc	(_width+1)& (0+255),w,b
  4196  001C60  6E11               	movwf	(ctoa@w+1)^0,c
  4197  001C62                     l2453:
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  4201  001C62  A171               	btfss	_flags& (0+255),0,b
  4202  001C64  EF36  F00E         	goto	u1251
  4203  001C68  EF38  F00E         	goto	u1250
  4204  001C6C                     u1251:
  4205  001C6C  EF41  F00E         	goto	l2457
  4206  001C70                     u1250:
  4207  001C70                     
  4208                           ; BSR set to: 0
  4209                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  4210  001C70  C00C  F001         	movff	ctoa@c,fputc@c
  4211  001C74  6A02               	clrf	(fputc@c+1)^0,c
  4212  001C76  C00A  F003         	movff	ctoa@fp,fputc@fp
  4213  001C7A  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4214  001C7E  EC87  F00E         	call	_fputc	;wreg free
  4215  001C82                     l2457:
  4216                           
  4217                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  4218  001C82  BE11               	btfsc	(ctoa@w+1)^0,7,c
  4219  001C84  EF46  F00E         	goto	u1261
  4220  001C88  EF48  F00E         	goto	u1260
  4221  001C8C                     u1261:
  4222  001C8C  EF4A  F00E         	goto	l2461
  4223  001C90                     u1260:
  4224  001C90  EF4E  F00E         	goto	l1220
  4225  001C94                     l2461:
  4226  001C94  0E00               	movlw	0
  4227  001C96  6E11               	movwf	(ctoa@w+1)^0,c
  4228  001C98  0E00               	movlw	0
  4229  001C9A  6E10               	movwf	ctoa@w^0,c
  4230  001C9C                     l1220:
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  4233  001C9C  0E00               	movlw	0
  4234  001C9E  6E0F               	movwf	(ctoa@l+1)^0,c
  4235  001CA0  0E00               	movlw	0
  4236  001CA2  6E0E               	movwf	ctoa@l^0,c
  4237                           
  4238                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4239  001CA4  EF60  F00E         	goto	l2467
  4240  001CA8                     l2463:
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  4243  001CA8  0E00               	movlw	0
  4244  001CAA  6E02               	movwf	(fputc@c+1)^0,c
  4245  001CAC  0E20               	movlw	32
  4246  001CAE  6E01               	movwf	fputc@c^0,c
  4247  001CB0  C00A  F003         	movff	ctoa@fp,fputc@fp
  4248  001CB4  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4249  001CB8  EC87  F00E         	call	_fputc	;wreg free
  4250  001CBC                     
  4251                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  4252  001CBC  4A0E               	infsnz	ctoa@l^0,f,c
  4253  001CBE  2A0F               	incf	(ctoa@l+1)^0,f,c
  4254  001CC0                     l2467:
  4255                           
  4256                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  4257  001CC0  5010               	movf	ctoa@w^0,w,c
  4258  001CC2  5C0E               	subwf	ctoa@l^0,w,c
  4259  001CC4  500F               	movf	(ctoa@l+1)^0,w,c
  4260  001CC6  0A80               	xorlw	128
  4261  001CC8  6E0D               	movwf	??_ctoa^0,c
  4262  001CCA  5011               	movf	(ctoa@w+1)^0,w,c
  4263  001CCC  0A80               	xorlw	128
  4264  001CCE  580D               	subwfb	??_ctoa^0,w,c
  4265  001CD0  A0D8               	btfss	status,0,c
  4266  001CD2  EF6D  F00E         	goto	u1271
  4267  001CD6  EF6F  F00E         	goto	u1270
  4268  001CDA                     u1271:
  4269  001CDA  EF54  F00E         	goto	l2463
  4270  001CDE                     u1270:
  4271  001CDE                     
  4272                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  4273  001CDE  0100               	movlb	0	; () banked
  4274  001CE0  B171               	btfsc	_flags& (0+255),0,b
  4275  001CE2  EF75  F00E         	goto	u1281
  4276  001CE6  EF77  F00E         	goto	u1280
  4277  001CEA                     u1281:
  4278  001CEA  EF80  F00E         	goto	l2471
  4279  001CEE                     u1280:
  4280  001CEE                     
  4281                           ; BSR set to: 0
  4282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  4283  001CEE  C00C  F001         	movff	ctoa@c,fputc@c
  4284  001CF2  6A02               	clrf	(fputc@c+1)^0,c
  4285  001CF4  C00A  F003         	movff	ctoa@fp,fputc@fp
  4286  001CF8  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  4287  001CFC  EC87  F00E         	call	_fputc	;wreg free
  4288  001D00                     l2471:
  4289                           
  4290                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  4291  001D00  0E01               	movlw	1
  4292  001D02  240E               	addwf	ctoa@l^0,w,c
  4293  001D04  6E0A               	movwf	?_ctoa^0,c
  4294  001D06  0E00               	movlw	0
  4295  001D08  200F               	addwfc	(ctoa@l+1)^0,w,c
  4296  001D0A  6E0B               	movwf	(?_ctoa+1)^0,c
  4297  001D0C  0012               	return		;funcret
  4298  001D0E                     __end_of_ctoa:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _fputc *****************
  4302 ;; Defined at:
  4303 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  c               2    0[COMRAM] int 
  4306 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4307 ;;		 -> sprintf@f(6), 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  2    0[COMRAM] int 
  4312 ;; Registers used:
  4313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;Total ram usage:        9 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    1
  4326 ;; This function calls:
  4327 ;;		_putch
  4328 ;; This function is called by:
  4329 ;;		_pad
  4330 ;;		_ctoa
  4331 ;;		_vfpfcnvrt
  4332 ;;		_fputs
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text25
  4337  001D0E                     __ptext25:
  4338                           	callstack 0
  4339  001D0E                     _fputc:
  4340                           	callstack 25
  4341  001D0E  5003               	movf	fputc@fp^0,w,c
  4342  001D10  1004               	iorwf	(fputc@fp+1)^0,w,c
  4343  001D12  B4D8               	btfsc	status,2,c
  4344  001D14  EF8E  F00E         	goto	u941
  4345  001D18  EF90  F00E         	goto	u940
  4346  001D1C                     u941:
  4347  001D1C  EF99  F00E         	goto	l2243
  4348  001D20                     u940:
  4349  001D20  5003               	movf	fputc@fp^0,w,c
  4350  001D22  1004               	iorwf	(fputc@fp+1)^0,w,c
  4351  001D24  A4D8               	btfss	status,2,c
  4352  001D26  EF97  F00E         	goto	u951
  4353  001D2A  EF99  F00E         	goto	u950
  4354  001D2E                     u951:
  4355  001D2E  EF9E  F00E         	goto	l2245
  4356  001D32                     u950:
  4357  001D32                     l2243:
  4358  001D32  5001               	movf	fputc@c^0,w,c
  4359  001D34  EC07  F014         	call	_putch
  4360  001D38  EFEB  F00E         	goto	l1352
  4361  001D3C                     l2245:
  4362  001D3C  EE20 F004          	lfsr	2,4
  4363  001D40  5003               	movf	fputc@fp^0,w,c
  4364  001D42  26D9               	addwf	fsr2l,f,c
  4365  001D44  5004               	movf	(fputc@fp+1)^0,w,c
  4366  001D46  22DA               	addwfc	fsr2h,f,c
  4367  001D48  50DE               	movf	postinc2,w,c
  4368  001D4A  10DE               	iorwf	postinc2,w,c
  4369  001D4C  B4D8               	btfsc	status,2,c
  4370  001D4E  EFAB  F00E         	goto	u961
  4371  001D52  EFAD  F00E         	goto	u960
  4372  001D56                     u961:
  4373  001D56  EFC8  F00E         	goto	l2249
  4374  001D5A                     u960:
  4375  001D5A  EE20 F004          	lfsr	2,4
  4376  001D5E  5003               	movf	fputc@fp^0,w,c
  4377  001D60  26D9               	addwf	fsr2l,f,c
  4378  001D62  5004               	movf	(fputc@fp+1)^0,w,c
  4379  001D64  22DA               	addwfc	fsr2h,f,c
  4380  001D66  EE10 F002          	lfsr	1,2
  4381  001D6A  5003               	movf	fputc@fp^0,w,c
  4382  001D6C  26E1               	addwf	fsr1l,f,c
  4383  001D6E  5004               	movf	(fputc@fp+1)^0,w,c
  4384  001D70  22E2               	addwfc	fsr1h,f,c
  4385  001D72  50DE               	movf	postinc2,w,c
  4386  001D74  5CE6               	subwf	postinc1,w,c
  4387  001D76  50E6               	movf	postinc1,w,c
  4388  001D78  0A80               	xorlw	128
  4389  001D7A  6E09               	movwf	(??_fputc+4)^0,c
  4390  001D7C  50DE               	movf	postinc2,w,c
  4391  001D7E  0A80               	xorlw	128
  4392  001D80  5809               	subwfb	(??_fputc+4)^0,w,c
  4393  001D82  B0D8               	btfsc	status,0,c
  4394  001D84  EFC6  F00E         	goto	u971
  4395  001D88  EFC8  F00E         	goto	u970
  4396  001D8C                     u971:
  4397  001D8C  EFEB  F00E         	goto	l1352
  4398  001D90                     u970:
  4399  001D90                     l2249:
  4400  001D90  EE20 F002          	lfsr	2,2
  4401  001D94  5003               	movf	fputc@fp^0,w,c
  4402  001D96  26D9               	addwf	fsr2l,f,c
  4403  001D98  5004               	movf	(fputc@fp+1)^0,w,c
  4404  001D9A  22DA               	addwfc	fsr2h,f,c
  4405  001D9C  CFDE F005          	movff	postinc2,??_fputc
  4406  001DA0  CFDD F006          	movff	postdec2,??_fputc+1
  4407  001DA4  C003  FFD9         	movff	fputc@fp,fsr2l
  4408  001DA8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4409  001DAC  CFDE F007          	movff	postinc2,??_fputc+2
  4410  001DB0  CFDD F008          	movff	postdec2,??_fputc+3
  4411  001DB4  5005               	movf	??_fputc^0,w,c
  4412  001DB6  2407               	addwf	(??_fputc+2)^0,w,c
  4413  001DB8  6ED9               	movwf	fsr2l,c
  4414  001DBA  5006               	movf	(??_fputc+1)^0,w,c
  4415  001DBC  2008               	addwfc	(??_fputc+3)^0,w,c
  4416  001DBE  6EDA               	movwf	fsr2h,c
  4417  001DC0  C001  FFDF         	movff	fputc@c,indf2
  4418  001DC4  EE20 F002          	lfsr	2,2
  4419  001DC8  5003               	movf	fputc@fp^0,w,c
  4420  001DCA  26D9               	addwf	fsr2l,f,c
  4421  001DCC  5004               	movf	(fputc@fp+1)^0,w,c
  4422  001DCE  22DA               	addwfc	fsr2h,f,c
  4423  001DD0  2ADE               	incf	postinc2,f,c
  4424  001DD2  0E00               	movlw	0
  4425  001DD4  22DD               	addwfc	postdec2,f,c
  4426  001DD6                     l1352:
  4427  001DD6  0012               	return		;funcret
  4428  001DD8                     __end_of_fputc:
  4429                           	callstack 0
  4430                           
  4431 ;; *************** function _putch *****************
  4432 ;; Defined at:
  4433 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  c               1    wreg     unsigned char 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  c               1    0[COMRAM] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4451 ;;Total ram usage:        0 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_fputc
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text26
  4461  00280E                     __ptext26:
  4462                           	callstack 0
  4463  00280E                     _putch:
  4464                           	callstack 25
  4465  00280E  0012               	return		;funcret
  4466  002810                     __end_of_putch:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _atoi *****************
  4470 ;; Defined at:
  4471 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  s               2    7[COMRAM] PTR const unsigned char 
  4474 ;;		 -> STR_5(9), STR_4(11), STR_3(5), 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  n               2   20[COMRAM] int 
  4477 ;;  neg             2   13[COMRAM] int 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  2    7[COMRAM] int 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;Total ram usage:       15 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    1
  4494 ;; This function calls:
  4495 ;;		___wmul
  4496 ;;		_isdigit
  4497 ;;		_isspace
  4498 ;; This function is called by:
  4499 ;;		_vfpfcnvrt
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text27
  4504  001652                     __ptext27:
  4505                           	callstack 0
  4506  001652                     _atoi:
  4507                           	callstack 25
  4508  001652  0E00               	movlw	0
  4509  001654  6E16               	movwf	(atoi@n+1)^0,c
  4510  001656  0E00               	movlw	0
  4511  001658  6E15               	movwf	atoi@n^0,c
  4512  00165A  0E00               	movlw	0
  4513  00165C  6E0F               	movwf	(atoi@neg+1)^0,c
  4514  00165E  0E00               	movlw	0
  4515  001660  6E0E               	movwf	atoi@neg^0,c
  4516  001662  EF35  F00B         	goto	l2541
  4517  001666                     l2539:
  4518  001666  4A08               	infsnz	atoi@s^0,f,c
  4519  001668  2A09               	incf	(atoi@s+1)^0,f,c
  4520  00166A                     l2541:
  4521  00166A  0E01               	movlw	1
  4522  00166C  6E14               	movwf	_atoi$1422^0,c
  4523  00166E  C008  FFF6         	movff	atoi@s,tblptrl
  4524  001672  C009  FFF7         	movff	atoi@s+1,tblptrh
  4525  001676                     	if	0	;tblptru may be non-zero
  4526  001676                     	endif
  4527  001676                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4528  001676  0E00               	movlw	low (__mediumconst shr (0+16))
  4529  001678  6EF8               	movwf	tblptru,c
  4530  00167A                     	endif
  4531  00167A  0008               	tblrd		*
  4532  00167C  50F5               	movf	tablat,w,c
  4533  00167E  0A20               	xorlw	32
  4534  001680  B4D8               	btfsc	status,2,c
  4535  001682  EF45  F00B         	goto	u1441
  4536  001686  EF47  F00B         	goto	u1440
  4537  00168A                     u1441:
  4538  00168A  EF66  F00B         	goto	l2549
  4539  00168E                     u1440:
  4540  00168E  0EF7               	movlw	247
  4541  001690  6E0A               	movwf	??_atoi^0,c
  4542  001692  0EFF               	movlw	255
  4543  001694  6E0B               	movwf	(??_atoi+1)^0,c
  4544  001696  C008  FFF6         	movff	atoi@s,tblptrl
  4545  00169A  C009  FFF7         	movff	atoi@s+1,tblptrh
  4546  00169E                     	if	0	;tblptru may be non-zero
  4547  00169E                     	endif
  4548  00169E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4549  00169E  0E00               	movlw	low (__mediumconst shr (0+16))
  4550  0016A0  6EF8               	movwf	tblptru,c
  4551  0016A2                     	endif
  4552  0016A2  0008               	tblrd		*
  4553  0016A4  50F5               	movf	tablat,w,c
  4554  0016A6  6E0C               	movwf	(??_atoi+2)^0,c
  4555  0016A8  6A0D               	clrf	(??_atoi+3)^0,c
  4556  0016AA  500A               	movf	??_atoi^0,w,c
  4557  0016AC  260C               	addwf	(??_atoi+2)^0,f,c
  4558  0016AE  500B               	movf	(??_atoi+1)^0,w,c
  4559  0016B0  220D               	addwfc	(??_atoi+3)^0,f,c
  4560  0016B2  500D               	movf	(??_atoi+3)^0,w,c
  4561  0016B4  E109               	bnz	u1450
  4562  0016B6  0E05               	movlw	5
  4563  0016B8  5C0C               	subwf	(??_atoi+2)^0,w,c
  4564  0016BA  A0D8               	btfss	status,0,c
  4565  0016BC  EF62  F00B         	goto	u1451
  4566  0016C0  EF64  F00B         	goto	u1450
  4567  0016C4                     u1451:
  4568  0016C4  EF66  F00B         	goto	l2549
  4569  0016C8                     u1450:
  4570  0016C8  0E00               	movlw	0
  4571  0016CA  6E14               	movwf	_atoi$1422^0,c
  4572  0016CC                     l2549:
  4573  0016CC  C014  F010         	movff	_atoi$1422,_atoi$1421
  4574  0016D0  6A11               	clrf	(_atoi$1421+1)^0,c
  4575  0016D2  5010               	movf	_atoi$1421^0,w,c
  4576  0016D4  1011               	iorwf	(_atoi$1421+1)^0,w,c
  4577  0016D6  A4D8               	btfss	status,2,c
  4578  0016D8  EF70  F00B         	goto	u1461
  4579  0016DC  EF72  F00B         	goto	u1460
  4580  0016E0                     u1461:
  4581  0016E0  EF33  F00B         	goto	l2539
  4582  0016E4                     u1460:
  4583  0016E4  EF7C  F00B         	goto	l2559
  4584  0016E8                     l2555:
  4585  0016E8  0E00               	movlw	0
  4586  0016EA  6E0F               	movwf	(atoi@neg+1)^0,c
  4587  0016EC  0E01               	movlw	1
  4588  0016EE  6E0E               	movwf	atoi@neg^0,c
  4589  0016F0                     l2557:
  4590  0016F0  4A08               	infsnz	atoi@s^0,f,c
  4591  0016F2  2A09               	incf	(atoi@s+1)^0,f,c
  4592  0016F4  EFB5  F00B         	goto	l2565
  4593  0016F8                     l2559:
  4594  0016F8  C008  FFF6         	movff	atoi@s,tblptrl
  4595  0016FC  C009  FFF7         	movff	atoi@s+1,tblptrh
  4596  001700                     	if	0	;tblptru may be non-zero
  4597  001700                     	endif
  4598  001700                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4599  001700  0E00               	movlw	low (__mediumconst shr (0+16))
  4600  001702  6EF8               	movwf	tblptru,c
  4601  001704                     	endif
  4602  001704  0008               	tblrd		*
  4603  001706  50F5               	movf	tablat,w,c
  4604  001708  6E0A               	movwf	??_atoi^0,c
  4605  00170A  6A0B               	clrf	(??_atoi+1)^0,c
  4606                           
  4607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4608                           ; Switch size 1, requested type "simple"
  4609                           ; Number of cases is 1, Range of values is 0 to 0
  4610                           ; switch strategies available:
  4611                           ; Name         Instructions Cycles
  4612                           ; simple_byte            4     3 (average)
  4613                           ;	Chosen strategy is simple_byte
  4614  00170C  500B               	movf	(??_atoi+1)^0,w,c
  4615  00170E  0A00               	xorlw	0	; case 0
  4616  001710  B4D8               	btfsc	status,2,c
  4617  001712  EF8D  F00B         	goto	l2991
  4618  001716  EFB5  F00B         	goto	l2565
  4619  00171A                     l2991:
  4620                           
  4621                           ; Switch size 1, requested type "simple"
  4622                           ; Number of cases is 2, Range of values is 43 to 45
  4623                           ; switch strategies available:
  4624                           ; Name         Instructions Cycles
  4625                           ; simple_byte            7     4 (average)
  4626                           ;	Chosen strategy is simple_byte
  4627  00171A  500A               	movf	??_atoi^0,w,c
  4628  00171C  0A2B               	xorlw	43	; case 43
  4629  00171E  B4D8               	btfsc	status,2,c
  4630  001720  EF78  F00B         	goto	l2557
  4631  001724  0A06               	xorlw	6	; case 45
  4632  001726  B4D8               	btfsc	status,2,c
  4633  001728  EF74  F00B         	goto	l2555
  4634  00172C  EFB5  F00B         	goto	l2565
  4635  001730                     l2561:
  4636  001730  C015  F001         	movff	atoi@n,___wmul@multiplier
  4637  001734  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  4638  001738  0E00               	movlw	0
  4639  00173A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4640  00173C  0E0A               	movlw	10
  4641  00173E  6E03               	movwf	___wmul@multiplicand^0,c
  4642  001740  EC65  F013         	call	___wmul	;wreg free
  4643  001744  C008  FFF6         	movff	atoi@s,tblptrl
  4644  001748  C009  FFF7         	movff	atoi@s+1,tblptrh
  4645  00174C                     	if	0	;tblptru may be non-zero
  4646  00174C                     	endif
  4647  00174C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4648  00174C  0E00               	movlw	low (__mediumconst shr (0+16))
  4649  00174E  6EF8               	movwf	tblptru,c
  4650  001750                     	endif
  4651  001750  0008               	tblrd		*
  4652  001752  50F5               	movf	tablat,w,c
  4653  001754  5E01               	subwf	?___wmul^0,f,c
  4654  001756  0E00               	movlw	0
  4655  001758  5A02               	subwfb	(?___wmul+1)^0,f,c
  4656  00175A  0E30               	movlw	48
  4657  00175C  2401               	addwf	?___wmul^0,w,c
  4658  00175E  6E15               	movwf	atoi@n^0,c
  4659  001760  0E00               	movlw	0
  4660  001762  2002               	addwfc	(?___wmul+1)^0,w,c
  4661  001764  6E16               	movwf	(atoi@n+1)^0,c
  4662  001766  EF78  F00B         	goto	l2557
  4663  00176A                     l2565:
  4664  00176A  0ED0               	movlw	208
  4665  00176C  6E0A               	movwf	??_atoi^0,c
  4666  00176E  0EFF               	movlw	255
  4667  001770  6E0B               	movwf	(??_atoi+1)^0,c
  4668  001772  C008  FFF6         	movff	atoi@s,tblptrl
  4669  001776  C009  FFF7         	movff	atoi@s+1,tblptrh
  4670  00177A                     	if	0	;tblptru may be non-zero
  4671  00177A                     	endif
  4672  00177A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4673  00177A  0E00               	movlw	low (__mediumconst shr (0+16))
  4674  00177C  6EF8               	movwf	tblptru,c
  4675  00177E                     	endif
  4676  00177E  0008               	tblrd		*
  4677  001780  50F5               	movf	tablat,w,c
  4678  001782  6E0C               	movwf	(??_atoi+2)^0,c
  4679  001784  6A0D               	clrf	(??_atoi+3)^0,c
  4680  001786  500A               	movf	??_atoi^0,w,c
  4681  001788  260C               	addwf	(??_atoi+2)^0,f,c
  4682  00178A  500B               	movf	(??_atoi+1)^0,w,c
  4683  00178C  220D               	addwfc	(??_atoi+3)^0,f,c
  4684  00178E  500D               	movf	(??_atoi+3)^0,w,c
  4685  001790  E10A               	bnz	u1470
  4686  001792  0E0A               	movlw	10
  4687  001794  5C0C               	subwf	(??_atoi+2)^0,w,c
  4688  001796  A0D8               	btfss	status,0,c
  4689  001798  EFD0  F00B         	goto	u1471
  4690  00179C  EFD3  F00B         	goto	u1470
  4691  0017A0                     u1471:
  4692  0017A0  0E01               	movlw	1
  4693  0017A2  EFD4  F00B         	goto	u1480
  4694  0017A6                     u1470:
  4695  0017A6  0E00               	movlw	0
  4696  0017A8                     u1480:
  4697  0017A8  6E12               	movwf	_atoi$1423^0,c
  4698  0017AA  6A13               	clrf	(_atoi$1423+1)^0,c
  4699  0017AC  5012               	movf	_atoi$1423^0,w,c
  4700  0017AE  1013               	iorwf	(_atoi$1423+1)^0,w,c
  4701  0017B0  A4D8               	btfss	status,2,c
  4702  0017B2  EFDD  F00B         	goto	u1491
  4703  0017B6  EFDF  F00B         	goto	u1490
  4704  0017BA                     u1491:
  4705  0017BA  EF98  F00B         	goto	l2561
  4706  0017BE                     u1490:
  4707  0017BE  500E               	movf	atoi@neg^0,w,c
  4708  0017C0  100F               	iorwf	(atoi@neg+1)^0,w,c
  4709  0017C2  A4D8               	btfss	status,2,c
  4710  0017C4  EFE6  F00B         	goto	u1501
  4711  0017C8  EFE8  F00B         	goto	u1500
  4712  0017CC                     u1501:
  4713  0017CC  EFF6  F00B         	goto	l1323
  4714  0017D0                     u1500:
  4715  0017D0  C015  F00A         	movff	atoi@n,??_atoi
  4716  0017D4  C016  F00B         	movff	atoi@n+1,??_atoi+1
  4717  0017D8  1E0A               	comf	??_atoi^0,f,c
  4718  0017DA  1E0B               	comf	(??_atoi+1)^0,f,c
  4719  0017DC  4A0A               	infsnz	??_atoi^0,f,c
  4720  0017DE  2A0B               	incf	(??_atoi+1)^0,f,c
  4721  0017E0  C00A  F008         	movff	??_atoi,?_atoi
  4722  0017E4  C00B  F009         	movff	??_atoi+1,?_atoi+1
  4723  0017E8  EFFA  F00B         	goto	l1326
  4724  0017EC                     l1323:
  4725  0017EC  C015  F008         	movff	atoi@n,?_atoi
  4726  0017F0  C016  F009         	movff	atoi@n+1,?_atoi+1
  4727  0017F4                     l1326:
  4728  0017F4  0012               	return		;funcret
  4729  0017F6                     __end_of_atoi:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _isspace *****************
  4733 ;; Defined at:
  4734 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  c               2    0[COMRAM] int 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  2    0[COMRAM] int 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4751 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4752 ;;Total ram usage:        7 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_atoi
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text28
  4762  002344                     __ptext28:
  4763                           	callstack 0
  4764  002344                     _isspace:
  4765                           	callstack 25
  4766  002344  0E01               	movlw	1
  4767  002346  6E07               	movwf	_isspace$1439^0,c
  4768  002348  0E20               	movlw	32
  4769  00234A  1801               	xorwf	isspace@c^0,w,c
  4770  00234C  1002               	iorwf	(isspace@c+1)^0,w,c
  4771  00234E  B4D8               	btfsc	status,2,c
  4772  002350  EFAC  F011         	goto	u1211
  4773  002354  EFAE  F011         	goto	u1210
  4774  002358                     u1211:
  4775  002358  EFC7  F011         	goto	l2435
  4776  00235C                     u1210:
  4777  00235C  0EF7               	movlw	247
  4778  00235E  6E03               	movwf	??_isspace^0,c
  4779  002360  0EFF               	movlw	255
  4780  002362  6E04               	movwf	(??_isspace+1)^0,c
  4781  002364  C001  F005         	movff	isspace@c,??_isspace+2
  4782  002368  C002  F006         	movff	isspace@c+1,??_isspace+3
  4783  00236C  5003               	movf	??_isspace^0,w,c
  4784  00236E  2605               	addwf	(??_isspace+2)^0,f,c
  4785  002370  5004               	movf	(??_isspace+1)^0,w,c
  4786  002372  2206               	addwfc	(??_isspace+3)^0,f,c
  4787  002374  5006               	movf	(??_isspace+3)^0,w,c
  4788  002376  E109               	bnz	u1220
  4789  002378  0E05               	movlw	5
  4790  00237A  5C05               	subwf	(??_isspace+2)^0,w,c
  4791  00237C  A0D8               	btfss	status,0,c
  4792  00237E  EFC3  F011         	goto	u1221
  4793  002382  EFC5  F011         	goto	u1220
  4794  002386                     u1221:
  4795  002386  EFC7  F011         	goto	l2435
  4796  00238A                     u1220:
  4797  00238A  0E00               	movlw	0
  4798  00238C  6E07               	movwf	_isspace$1439^0,c
  4799  00238E                     l2435:
  4800  00238E  C007  F001         	movff	_isspace$1439,?_isspace
  4801  002392  6A02               	clrf	(?_isspace+1)^0,c
  4802  002394  0012               	return		;funcret
  4803  002396                     __end_of_isspace:
  4804                           	callstack 0
  4805                           
  4806 ;; *************** function _isdigit *****************
  4807 ;; Defined at:
  4808 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  c               2    0[COMRAM] int 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  2    0[COMRAM] int 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;Total ram usage:        6 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_vfpfcnvrt
  4832 ;;		_atoi
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text29
  4837  002498                     __ptext29:
  4838                           	callstack 0
  4839  002498                     _isdigit:
  4840                           	callstack 26
  4841  002498  0ED0               	movlw	208
  4842  00249A  6E03               	movwf	??_isdigit^0,c
  4843  00249C  0EFF               	movlw	255
  4844  00249E  6E04               	movwf	(??_isdigit+1)^0,c
  4845  0024A0  C001  F005         	movff	isdigit@c,??_isdigit+2
  4846  0024A4  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  4847  0024A8  5003               	movf	??_isdigit^0,w,c
  4848  0024AA  2605               	addwf	(??_isdigit+2)^0,f,c
  4849  0024AC  5004               	movf	(??_isdigit+1)^0,w,c
  4850  0024AE  2206               	addwfc	(??_isdigit+3)^0,f,c
  4851  0024B0  5006               	movf	(??_isdigit+3)^0,w,c
  4852  0024B2  E10A               	bnz	u1190
  4853  0024B4  0E0A               	movlw	10
  4854  0024B6  5C05               	subwf	(??_isdigit+2)^0,w,c
  4855  0024B8  A0D8               	btfss	status,0,c
  4856  0024BA  EF61  F012         	goto	u1191
  4857  0024BE  EF64  F012         	goto	u1190
  4858  0024C2                     u1191:
  4859  0024C2  0E01               	movlw	1
  4860  0024C4  EF65  F012         	goto	u1200
  4861  0024C8                     u1190:
  4862  0024C8  0E00               	movlw	0
  4863  0024CA                     u1200:
  4864  0024CA  6E01               	movwf	?_isdigit^0,c
  4865  0024CC  6A02               	clrf	(?_isdigit+1)^0,c
  4866  0024CE  0012               	return		;funcret
  4867  0024D0                     __end_of_isdigit:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function ___wmul *****************
  4871 ;; Defined at:
  4872 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  multiplier      2    0[COMRAM] unsigned int 
  4875 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  product         2    4[COMRAM] unsigned int 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2    0[COMRAM] unsigned int 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0, prodl, prodh
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4891 ;;Total ram usage:        6 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_GDapplication
  4897 ;;		_atoi
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text30
  4902  0026CA                     __ptext30:
  4903                           	callstack 0
  4904  0026CA                     ___wmul:
  4905                           	callstack 25
  4906  0026CA  5001               	movf	___wmul@multiplier^0,w,c
  4907  0026CC  0203               	mulwf	___wmul@multiplicand^0,c
  4908  0026CE  CFF3 F005          	movff	prodl,___wmul@product
  4909  0026D2  CFF4 F006          	movff	prodh,___wmul@product+1
  4910  0026D6  5001               	movf	___wmul@multiplier^0,w,c
  4911  0026D8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4912  0026DA  50F3               	movf	243,w,c
  4913  0026DC  2606               	addwf	(___wmul@product+1)^0,f,c
  4914  0026DE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4915  0026E0  0203               	mulwf	___wmul@multiplicand^0,c
  4916  0026E2  50F3               	movf	243,w,c
  4917  0026E4  2606               	addwf	(___wmul@product+1)^0,f,c
  4918  0026E6  C005  F001         	movff	___wmul@product,?___wmul
  4919  0026EA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4920  0026EE  0012               	return		;funcret
  4921  0026F0                     __end_of___wmul:
  4922                           	callstack 0
  4923                           
  4924 ;; *************** function ___lwmod *****************
  4925 ;; Defined at:
  4926 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  dividend        2    0[COMRAM] unsigned int 
  4929 ;;  divisor         2    2[COMRAM] unsigned int 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  counter         1    4[COMRAM] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  2    0[COMRAM] unsigned int 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4944 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4945 ;;Total ram usage:        5 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_GDapplication
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text31
  4955  00228E                     __ptext31:
  4956                           	callstack 0
  4957  00228E                     ___lwmod:
  4958                           	callstack 29
  4959  00228E  5003               	movf	___lwmod@divisor^0,w,c
  4960  002290  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4961  002292  B4D8               	btfsc	status,2,c
  4962  002294  EF4E  F011         	goto	u1711
  4963  002298  EF50  F011         	goto	u1710
  4964  00229C                     u1711:
  4965  00229C  EF74  F011         	goto	l996
  4966  0022A0                     u1710:
  4967  0022A0  0E01               	movlw	1
  4968  0022A2  6E05               	movwf	___lwmod@counter^0,c
  4969  0022A4  EF58  F011         	goto	l2841
  4970  0022A8                     l2839:
  4971  0022A8  90D8               	bcf	status,0,c
  4972  0022AA  3603               	rlcf	___lwmod@divisor^0,f,c
  4973  0022AC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4974  0022AE  2A05               	incf	___lwmod@counter^0,f,c
  4975  0022B0                     l2841:
  4976  0022B0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4977  0022B2  EF5D  F011         	goto	u1721
  4978  0022B6  EF5F  F011         	goto	u1720
  4979  0022BA                     u1721:
  4980  0022BA  EF54  F011         	goto	l2839
  4981  0022BE                     u1720:
  4982  0022BE                     l2843:
  4983  0022BE  5003               	movf	___lwmod@divisor^0,w,c
  4984  0022C0  5C01               	subwf	___lwmod@dividend^0,w,c
  4985  0022C2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4986  0022C4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4987  0022C6  A0D8               	btfss	status,0,c
  4988  0022C8  EF68  F011         	goto	u1731
  4989  0022CC  EF6A  F011         	goto	u1730
  4990  0022D0                     u1731:
  4991  0022D0  EF6E  F011         	goto	l2847
  4992  0022D4                     u1730:
  4993  0022D4  5003               	movf	___lwmod@divisor^0,w,c
  4994  0022D6  5E01               	subwf	___lwmod@dividend^0,f,c
  4995  0022D8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4996  0022DA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  4997  0022DC                     l2847:
  4998  0022DC  90D8               	bcf	status,0,c
  4999  0022DE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  5000  0022E0  3203               	rrcf	___lwmod@divisor^0,f,c
  5001  0022E2  2E05               	decfsz	___lwmod@counter^0,f,c
  5002  0022E4  EF5F  F011         	goto	l2843
  5003  0022E8                     l996:
  5004  0022E8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5005  0022EC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5006  0022F0  0012               	return		;funcret
  5007  0022F2                     __end_of___lwmod:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function ___lwdiv *****************
  5011 ;; Defined at:
  5012 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  dividend        2    0[COMRAM] unsigned int 
  5015 ;;  divisor         2    2[COMRAM] unsigned int 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  quotient        2    4[COMRAM] unsigned int 
  5018 ;;  counter         1    6[COMRAM] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  2    0[COMRAM] unsigned int 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5029 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5031 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5032 ;;Total ram usage:        7 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_GDapplication
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text32
  5042  0021B4                     __ptext32:
  5043                           	callstack 0
  5044  0021B4                     ___lwdiv:
  5045                           	callstack 29
  5046  0021B4  0E00               	movlw	0
  5047  0021B6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  5048  0021B8  0E00               	movlw	0
  5049  0021BA  6E05               	movwf	___lwdiv@quotient^0,c
  5050  0021BC  5003               	movf	___lwdiv@divisor^0,w,c
  5051  0021BE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5052  0021C0  B4D8               	btfsc	status,2,c
  5053  0021C2  EFE5  F010         	goto	u1681
  5054  0021C6  EFE7  F010         	goto	u1680
  5055  0021CA                     u1681:
  5056  0021CA  EF0F  F011         	goto	l986
  5057  0021CE                     u1680:
  5058  0021CE  0E01               	movlw	1
  5059  0021D0  6E07               	movwf	___lwdiv@counter^0,c
  5060  0021D2  EFEF  F010         	goto	l2821
  5061  0021D6                     l2819:
  5062  0021D6  90D8               	bcf	status,0,c
  5063  0021D8  3603               	rlcf	___lwdiv@divisor^0,f,c
  5064  0021DA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5065  0021DC  2A07               	incf	___lwdiv@counter^0,f,c
  5066  0021DE                     l2821:
  5067  0021DE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  5068  0021E0  EFF4  F010         	goto	u1691
  5069  0021E4  EFF6  F010         	goto	u1690
  5070  0021E8                     u1691:
  5071  0021E8  EFEB  F010         	goto	l2819
  5072  0021EC                     u1690:
  5073  0021EC                     l2823:
  5074  0021EC  90D8               	bcf	status,0,c
  5075  0021EE  3605               	rlcf	___lwdiv@quotient^0,f,c
  5076  0021F0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5077  0021F2  5003               	movf	___lwdiv@divisor^0,w,c
  5078  0021F4  5C01               	subwf	___lwdiv@dividend^0,w,c
  5079  0021F6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5080  0021F8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5081  0021FA  A0D8               	btfss	status,0,c
  5082  0021FC  EF02  F011         	goto	u1701
  5083  002200  EF04  F011         	goto	u1700
  5084  002204                     u1701:
  5085  002204  EF09  F011         	goto	l2831
  5086  002208                     u1700:
  5087  002208  5003               	movf	___lwdiv@divisor^0,w,c
  5088  00220A  5E01               	subwf	___lwdiv@dividend^0,f,c
  5089  00220C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  5090  00220E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5091  002210  8005               	bsf	___lwdiv@quotient^0,0,c
  5092  002212                     l2831:
  5093  002212  90D8               	bcf	status,0,c
  5094  002214  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5095  002216  3203               	rrcf	___lwdiv@divisor^0,f,c
  5096  002218  2E07               	decfsz	___lwdiv@counter^0,f,c
  5097  00221A  EFF6  F010         	goto	l2823
  5098  00221E                     l986:
  5099  00221E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5100  002222  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5101  002226  0012               	return		;funcret
  5102  002228                     __end_of___lwdiv:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function _ApplicationInit *****************
  5106 ;; Defined at:
  5107 ;;		line 6 in file "application.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    8
  5128 ;; This function calls:
  5129 ;;		_User_lcd_writeString
  5130 ;;		_lcd_clearDisplay
  5131 ;;		_lcd_setContrast
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text33
  5138  002506                     __ptext33:
  5139                           	callstack 0
  5140  002506                     _ApplicationInit:
  5141                           	callstack 22
  5142  002506                     
  5143                           ;application.c: 8:     lcd_setContrast(0x20);
  5144  002506  0E20               	movlw	32
  5145  002508  ECFC  F013         	call	_lcd_setContrast
  5146                           
  5147                           ;application.c: 9:     lcd_clearDisplay();
  5148  00250C  ECB2  F013         	call	_lcd_clearDisplay	;wreg free
  5149  002510                     
  5150                           ;application.c: 10:     User_lcd_writeString((char*)"Angle:          ",0,0);
  5151  002510  0E27               	movlw	low STR_1
  5152  002512  6E17               	movwf	User_lcd_writeString@string^0,c
  5153  002514  0E0F               	movlw	high STR_1
  5154  002516  6E18               	movwf	(User_lcd_writeString@string+1)^0,c
  5155  002518  0E00               	movlw	0
  5156  00251A  6E19               	movwf	User_lcd_writeString@row^0,c
  5157  00251C  0E00               	movlw	0
  5158  00251E  6E1A               	movwf	User_lcd_writeString@column^0,c
  5159  002520  EC4D  F010         	call	_User_lcd_writeString	;wreg free
  5160  002524                     
  5161                           ;application.c: 11:     User_lcd_writeString((char*)"Decoded value:  ",1,0);
  5162  002524  0E38               	movlw	low STR_2
  5163  002526  6E17               	movwf	User_lcd_writeString@string^0,c
  5164  002528  0E0F               	movlw	high STR_2
  5165  00252A  6E18               	movwf	(User_lcd_writeString@string+1)^0,c
  5166  00252C  0E01               	movlw	1
  5167  00252E  6E19               	movwf	User_lcd_writeString@row^0,c
  5168  002530  0E00               	movlw	0
  5169  002532  6E1A               	movwf	User_lcd_writeString@column^0,c
  5170  002534  EC4D  F010         	call	_User_lcd_writeString	;wreg free
  5171  002538  0012               	return		;funcret
  5172  00253A                     __end_of_ApplicationInit:
  5173                           	callstack 0
  5174                           
  5175 ;; *************** function _lcd_setContrast *****************
  5176 ;; Defined at:
  5177 ;;		line 83 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  contrast        1    wreg     unsigned char 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  contrast        1   10[COMRAM] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;Total ram usage:        1 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    4
  5198 ;; This function calls:
  5199 ;;		_digipot_setWiper
  5200 ;; This function is called by:
  5201 ;;		_ApplicationInit
  5202 ;;		_lcd_example
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text34
  5207  0027F8                     __ptext34:
  5208                           	callstack 0
  5209  0027F8                     _lcd_setContrast:
  5210                           	callstack 25
  5211                           
  5212                           ;incstack = 0
  5213                           ;lcd_setContrast@contrast stored from wreg
  5214  0027F8  6E0B               	movwf	lcd_setContrast@contrast^0,c
  5215  0027FA                     
  5216                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 84:     digipot_setWiper(contrast);
  5217  0027FA  500B               	movf	lcd_setContrast@contrast^0,w,c
  5218  0027FC  ECCF  F012         	call	_digipot_setWiper
  5219  002800  0012               	return		;funcret
  5220  002802                     __end_of_lcd_setContrast:
  5221                           	callstack 0
  5222                           
  5223 ;; *************** function _digipot_setWiper *****************
  5224 ;; Defined at:
  5225 ;;		line 30 in file "mcc_generated_files/LCDMiniDrivers/digpot.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  val             1    wreg     unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  val             1    7[COMRAM] unsigned char 
  5230 ;;  cmd             2    8[COMRAM] unsigned char [2]
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5241 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5243 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5244 ;;Total ram usage:        3 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    3
  5247 ;; This function calls:
  5248 ;;		_SPI1_Close
  5249 ;;		_SPI1_WriteBlock
  5250 ;;		_spi_master_open
  5251 ;; This function is called by:
  5252 ;;		_lcd_setContrast
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text35
  5257  00259E                     __ptext35:
  5258                           	callstack 0
  5259  00259E                     _digipot_setWiper:
  5260                           	callstack 25
  5261                           
  5262                           ;incstack = 0
  5263                           ;digipot_setWiper@val stored from wreg
  5264  00259E  6E08               	movwf	digipot_setWiper@val^0,c
  5265  0025A0                     
  5266                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 31:     spi_master_open(LCD);
  5267  0025A0  0E00               	movlw	0
  5268  0025A2  ECB6  F012         	call	_spi_master_open
  5269  0025A6                     
  5270                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 32:     LATAbits.LATA0 = 0;
  5271  0025A6  9082               	bcf	130,0,c	;volatile
  5272  0025A8                     
  5273                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 33:     uint8_t cmd[2];;mcc_generated_file
      +                          s/LCDMiniDrivers/digpot.c: 34:     cmd[0] = 0;
  5274  0025A8  0E00               	movlw	0
  5275  0025AA  6E09               	movwf	digipot_setWiper@cmd^0,c
  5276  0025AC                     
  5277                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 35:     cmd[1] = val;
  5278  0025AC  C008  F00A         	movff	digipot_setWiper@val,digipot_setWiper@cmd+1
  5279  0025B0                     
  5280                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 36:     SPI1_WriteBlock(cmd, 2);
  5281  0025B0  0E09               	movlw	low digipot_setWiper@cmd
  5282  0025B2  6E02               	movwf	SPI1_WriteBlock@block^0,c
  5283  0025B4  0E00               	movlw	high digipot_setWiper@cmd
  5284  0025B6  6E03               	movwf	(SPI1_WriteBlock@block+1)^0,c
  5285  0025B8  0E00               	movlw	0
  5286  0025BA  6E05               	movwf	(SPI1_WriteBlock@blockSize+1)^0,c
  5287  0025BC  0E02               	movlw	2
  5288  0025BE  6E04               	movwf	SPI1_WriteBlock@blockSize^0,c
  5289  0025C0  EC2F  F012         	call	_SPI1_WriteBlock	;wreg free
  5290  0025C4                     
  5291                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 37:     LATAbits.LATA0 = 1;
  5292  0025C4  8082               	bsf	130,0,c	;volatile
  5293  0025C6                     
  5294                           ;mcc_generated_files/LCDMiniDrivers/digpot.c: 38:     SPI1_Close();
  5295  0025C6  EC05  F014         	call	_SPI1_Close	;wreg free
  5296  0025CA  0012               	return		;funcret
  5297  0025CC                     __end_of_digipot_setWiper:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _lcd_clearDisplay *****************
  5301 ;; Defined at:
  5302 ;;		line 59 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;Total ram usage:        0 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    6
  5323 ;; This function calls:
  5324 ;;		_DELAY_milliseconds
  5325 ;;		_lcd_sendByte
  5326 ;; This function is called by:
  5327 ;;		_lcd_setup
  5328 ;;		_ApplicationInit
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text36
  5333  002764                     __ptext36:
  5334                           	callstack 0
  5335  002764                     _lcd_clearDisplay:
  5336                           	callstack 22
  5337  002764                     
  5338                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 60:     lcd_sendByte(0b1, 0);
  5339  002764  0E00               	movlw	0
  5340  002766  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  5341  002768  0E01               	movlw	1
  5342  00276A  EC98  F010         	call	_lcd_sendByte
  5343  00276E                     
  5344                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 61:     DELAY_milliseconds(2);
  5345  00276E  0E00               	movlw	0
  5346  002770  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5347  002772  0E02               	movlw	2
  5348  002774  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5349  002776  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  5350  00277A  0012               	return		;funcret
  5351  00277C                     __end_of_lcd_clearDisplay:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function _User_lcd_writeString *****************
  5355 ;; Defined at:
  5356 ;;		line 40 in file "application.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  string          2   22[COMRAM] PTR unsigned char 
  5359 ;;		 -> GDapplication@lcdDataBuffer(8), STR_2(17), STR_1(17), 
  5360 ;;  row             1   24[COMRAM] unsigned char 
  5361 ;;  column          1   25[COMRAM] unsigned char 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  i               1   28[COMRAM] unsigned char 
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5377 ;;Total ram usage:        7 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    7
  5380 ;; This function calls:
  5381 ;;		_lcd_returnHome
  5382 ;;		_lcd_setAddr
  5383 ;;		_lcd_writeChar
  5384 ;; This function is called by:
  5385 ;;		_ApplicationInit
  5386 ;;		_GDapplication
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text37
  5391  00209A                     __ptext37:
  5392                           	callstack 0
  5393  00209A                     _User_lcd_writeString:
  5394                           	callstack 22
  5395  00209A                     
  5396                           ;application.c: 41:     lcd_setAddr(row, column);
  5397  00209A  C01A  F015         	movff	User_lcd_writeString@column,lcd_setAddr@character
  5398  00209E  5019               	movf	User_lcd_writeString@row^0,w,c
  5399  0020A0  ECCA  F013         	call	_lcd_setAddr
  5400  0020A4                     
  5401                           ;application.c: 43:     for (i = 0; i < 16; i++) {
  5402  0020A4  0E00               	movlw	0
  5403  0020A6  6E1D               	movwf	User_lcd_writeString@i^0,c
  5404  0020A8                     l2791:
  5405                           
  5406                           ;application.c: 44:         if (string[i]) {
  5407  0020A8  501D               	movf	User_lcd_writeString@i^0,w,c
  5408  0020AA  2417               	addwf	User_lcd_writeString@string^0,w,c
  5409  0020AC  6E1B               	movwf	??_User_lcd_writeString^0,c
  5410  0020AE  0E00               	movlw	0
  5411  0020B0  2018               	addwfc	(User_lcd_writeString@string+1)^0,w,c
  5412  0020B2  6E1C               	movwf	(??_User_lcd_writeString+1)^0,c
  5413  0020B4  C01B  FFF6         	movff	??_User_lcd_writeString,tblptrl
  5414  0020B8  C01C  FFF7         	movff	??_User_lcd_writeString+1,tblptrh
  5415  0020BC  0E00               	movlw	low (__smallconst shr (0+16))
  5416  0020BE  6EF8               	movwf	tblptru,c
  5417  0020C0  0E0E               	movlw	(high __ramtop+-1)
  5418  0020C2  64F7               	cpfsgt	tblptrh,c
  5419  0020C4  D003               	bra	u1647
  5420  0020C6  0008               	tblrd		*
  5421  0020C8  50F5               	movf	tablat,w,c
  5422  0020CA  D005               	bra	u1640
  5423  0020CC                     u1647:
  5424  0020CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5425  0020D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5426  0020D4  50E7               	movf	indf1,w,c
  5427  0020D6                     u1640:
  5428  0020D6  0900               	iorlw	0
  5429  0020D8  B4D8               	btfsc	status,2,c
  5430  0020DA  EF71  F010         	goto	u1651
  5431  0020DE  EF73  F010         	goto	u1650
  5432  0020E2                     u1651:
  5433  0020E2  EF8C  F010         	goto	l2795
  5434  0020E6                     u1650:
  5435  0020E6                     
  5436                           ;application.c: 45:             lcd_writeChar(string[i]);
  5437  0020E6  501D               	movf	User_lcd_writeString@i^0,w,c
  5438  0020E8  2417               	addwf	User_lcd_writeString@string^0,w,c
  5439  0020EA  6E1B               	movwf	??_User_lcd_writeString^0,c
  5440  0020EC  0E00               	movlw	0
  5441  0020EE  2018               	addwfc	(User_lcd_writeString@string+1)^0,w,c
  5442  0020F0  6E1C               	movwf	(??_User_lcd_writeString+1)^0,c
  5443  0020F2  C01B  FFF6         	movff	??_User_lcd_writeString,tblptrl
  5444  0020F6  C01C  FFF7         	movff	??_User_lcd_writeString+1,tblptrh
  5445  0020FA  0E00               	movlw	low (__smallconst shr (0+16))
  5446  0020FC  6EF8               	movwf	tblptru,c
  5447  0020FE  0E0E               	movlw	(high __ramtop+-1)
  5448  002100  64F7               	cpfsgt	tblptrh,c
  5449  002102  D003               	bra	u1667
  5450  002104  0008               	tblrd		*
  5451  002106  50F5               	movf	tablat,w,c
  5452  002108  D005               	bra	u1660
  5453  00210A                     u1667:
  5454  00210A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5455  00210E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5456  002112  50E7               	movf	indf1,w,c
  5457  002114                     u1660:
  5458  002114  ECE8  F013         	call	_lcd_writeChar
  5459  002118                     l2795:
  5460                           
  5461                           ;application.c: 47:     }
  5462  002118  2A1D               	incf	User_lcd_writeString@i^0,f,c
  5463  00211A  0E0F               	movlw	15
  5464  00211C  641D               	cpfsgt	User_lcd_writeString@i^0,c
  5465  00211E  EF93  F010         	goto	u1671
  5466  002122  EF95  F010         	goto	u1670
  5467  002126                     u1671:
  5468  002126  EF54  F010         	goto	l2791
  5469  00212A                     u1670:
  5470  00212A                     
  5471                           ;application.c: 48:     lcd_returnHome();
  5472  00212A  ECBE  F013         	call	_lcd_returnHome	;wreg free
  5473  00212E  0012               	return		;funcret
  5474  002130                     __end_of_User_lcd_writeString:
  5475                           	callstack 0
  5476                           
  5477 ;; *************** function _lcd_writeChar *****************
  5478 ;; Defined at:
  5479 ;;		line 68 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  character       1    wreg     unsigned char 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  character       1   20[COMRAM] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;Total ram usage:        1 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    6
  5500 ;; This function calls:
  5501 ;;		_lcd_sendByte
  5502 ;; This function is called by:
  5503 ;;		_User_lcd_writeString
  5504 ;;		_lcd_writeString
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text38
  5509  0027D0                     __ptext38:
  5510                           	callstack 0
  5511  0027D0                     _lcd_writeChar:
  5512                           	callstack 22
  5513                           
  5514                           ;incstack = 0
  5515                           ;lcd_writeChar@character stored from wreg
  5516  0027D0  6E15               	movwf	lcd_writeChar@character^0,c
  5517  0027D2                     
  5518                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 69:     lcd_sendByte(character, 1);
  5519  0027D2  0E01               	movlw	1
  5520  0027D4  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  5521  0027D6  5015               	movf	lcd_writeChar@character^0,w,c
  5522  0027D8  EC98  F010         	call	_lcd_sendByte
  5523  0027DC  0012               	return		;funcret
  5524  0027DE                     __end_of_lcd_writeChar:
  5525                           	callstack 0
  5526                           
  5527 ;; *************** function _lcd_setAddr *****************
  5528 ;; Defined at:
  5529 ;;		line 64 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  row             1    wreg     unsigned char 
  5532 ;;  character       1   20[COMRAM] unsigned char 
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  row             1   21[COMRAM] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5544 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5548 ;;Total ram usage:        2 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    6
  5551 ;; This function calls:
  5552 ;;		_lcd_sendByte
  5553 ;; This function is called by:
  5554 ;;		_User_lcd_writeString
  5555 ;;		_lcd_writeString
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text39
  5560  002794                     __ptext39:
  5561                           	callstack 0
  5562  002794                     _lcd_setAddr:
  5563                           	callstack 22
  5564                           
  5565                           ;incstack = 0
  5566                           ;lcd_setAddr@row stored from wreg
  5567  002794  6E16               	movwf	lcd_setAddr@row^0,c
  5568  002796                     
  5569                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 65:     lcd_sendByte(0x80 | (character + (row
      +                          *40)), 0);
  5570  002796  0E00               	movlw	0
  5571  002798  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  5572  00279A  5016               	movf	lcd_setAddr@row^0,w,c
  5573  00279C  0D28               	mullw	40
  5574  00279E  50F3               	movf	243,w,c
  5575  0027A0  2415               	addwf	lcd_setAddr@character^0,w,c
  5576  0027A2  0980               	iorlw	128
  5577  0027A4  EC98  F010         	call	_lcd_sendByte
  5578  0027A8  0012               	return		;funcret
  5579  0027AA                     __end_of_lcd_setAddr:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _lcd_returnHome *****************
  5583 ;; Defined at:
  5584 ;;		line 54 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5602 ;;Total ram usage:        0 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    6
  5605 ;; This function calls:
  5606 ;;		_DELAY_milliseconds
  5607 ;;		_lcd_sendByte
  5608 ;; This function is called by:
  5609 ;;		_lcd_setup
  5610 ;;		_User_lcd_writeString
  5611 ;;		_lcd_writeString
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text40
  5616  00277C                     __ptext40:
  5617                           	callstack 0
  5618  00277C                     _lcd_returnHome:
  5619                           	callstack 22
  5620  00277C                     
  5621                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 55:     lcd_sendByte(0b10, 0);
  5622  00277C  0E00               	movlw	0
  5623  00277E  6E0E               	movwf	lcd_sendByte@RSbit^0,c
  5624  002780  0E02               	movlw	2
  5625  002782  EC98  F010         	call	_lcd_sendByte
  5626  002786                     
  5627                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 56:     DELAY_milliseconds(2);
  5628  002786  0E00               	movlw	0
  5629  002788  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5630  00278A  0E02               	movlw	2
  5631  00278C  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5632  00278E  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  5633  002792  0012               	return		;funcret
  5634  002794                     __end_of_lcd_returnHome:
  5635                           	callstack 0
  5636                           
  5637 ;; *************** function _lcd_sendByte *****************
  5638 ;; Defined at:
  5639 ;;		line 38 in file "mcc_generated_files/LCDMiniDrivers/lcd.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  byte            1    wreg     unsigned char 
  5642 ;;  RSbit           1   13[COMRAM] _Bool 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  byte            1   17[COMRAM] unsigned char 
  5645 ;;  packetLow       1   19[COMRAM] unsigned char 
  5646 ;;  packetHigh      1   18[COMRAM] unsigned char 
  5647 ;;  nibbleLow       1   16[COMRAM] unsigned char 
  5648 ;;  nibbleHigh      1   15[COMRAM] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5658 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5659 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;Total ram usage:        7 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    5
  5665 ;; This function calls:
  5666 ;;		_DELAY_milliseconds
  5667 ;;		_expander_setOutput
  5668 ;; This function is called by:
  5669 ;;		_lcd_returnHome
  5670 ;;		_lcd_clearDisplay
  5671 ;;		_lcd_setAddr
  5672 ;;		_lcd_writeChar
  5673 ;;		_lcd_setup
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text41
  5678  002130                     __ptext41:
  5679                           	callstack 0
  5680  002130                     _lcd_sendByte:
  5681                           	callstack 23
  5682                           
  5683                           ;incstack = 0
  5684                           ;lcd_sendByte@byte stored from wreg
  5685  002130  6E12               	movwf	lcd_sendByte@byte^0,c
  5686  002132                     
  5687                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 39:     uint8_t nibbleHigh = byte >> 4;
  5688  002132  3812               	swapf	lcd_sendByte@byte^0,w,c
  5689  002134  0B0F               	andlw	15
  5690  002136  6E10               	movwf	lcd_sendByte@nibbleHigh^0,c
  5691                           
  5692                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 40:     uint8_t nibbleLow = byte & 0xF;
  5693  002138  5012               	movf	lcd_sendByte@byte^0,w,c
  5694  00213A  0B0F               	andlw	15
  5695  00213C  6E11               	movwf	lcd_sendByte@nibbleLow^0,c
  5696                           
  5697                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 41:     uint8_t packetHigh = (nibbleHigh << 4
      +                          ) | (RSbit << 2);
  5698  00213E  C00E  F00F         	movff	lcd_sendByte@RSbit,??_lcd_sendByte
  5699  002142  90D8               	bcf	status,0,c
  5700  002144  360F               	rlcf	??_lcd_sendByte^0,f,c
  5701  002146  90D8               	bcf	status,0,c
  5702  002148  360F               	rlcf	??_lcd_sendByte^0,f,c
  5703  00214A  3810               	swapf	lcd_sendByte@nibbleHigh^0,w,c
  5704  00214C  0BF0               	andlw	240
  5705  00214E  100F               	iorwf	??_lcd_sendByte^0,w,c
  5706  002150  6E13               	movwf	lcd_sendByte@packetHigh^0,c
  5707                           
  5708                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 42:     uint8_t packetLow = (nibbleLow << 4) 
      +                          | (RSbit << 2);
  5709  002152  C00E  F00F         	movff	lcd_sendByte@RSbit,??_lcd_sendByte
  5710  002156  90D8               	bcf	status,0,c
  5711  002158  360F               	rlcf	??_lcd_sendByte^0,f,c
  5712  00215A  90D8               	bcf	status,0,c
  5713  00215C  360F               	rlcf	??_lcd_sendByte^0,f,c
  5714  00215E  3811               	swapf	lcd_sendByte@nibbleLow^0,w,c
  5715  002160  0BF0               	andlw	240
  5716  002162  100F               	iorwf	??_lcd_sendByte^0,w,c
  5717  002164  6E14               	movwf	lcd_sendByte@packetLow^0,c
  5718  002166                     
  5719                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 44:     expander_setOutput(packetHigh);
  5720  002166  5013               	movf	lcd_sendByte@packetHigh^0,w,c
  5721  002168  ECEF  F013         	call	_expander_setOutput
  5722  00216C                     
  5723                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 45:     DELAY_milliseconds(2);
  5724  00216C  0E00               	movlw	0
  5725  00216E  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5726  002170  0E02               	movlw	2
  5727  002172  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5728  002174  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  5729  002178                     
  5730                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 46:     expander_setOutput(packetHigh | (1<<3
      +                          ));
  5731  002178  5013               	movf	lcd_sendByte@packetHigh^0,w,c
  5732  00217A  0908               	iorlw	8
  5733  00217C  ECEF  F013         	call	_expander_setOutput
  5734  002180                     
  5735                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 47:     DELAY_milliseconds(2);
  5736  002180  0E00               	movlw	0
  5737  002182  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5738  002184  0E02               	movlw	2
  5739  002186  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5740  002188  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  5741  00218C                     
  5742                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 48:     expander_setOutput(packetLow);
  5743  00218C  5014               	movf	lcd_sendByte@packetLow^0,w,c
  5744  00218E  ECEF  F013         	call	_expander_setOutput
  5745  002192                     
  5746                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 49:     DELAY_milliseconds(2);
  5747  002192  0E00               	movlw	0
  5748  002194  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5749  002196  0E02               	movlw	2
  5750  002198  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5751  00219A  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  5752  00219E                     
  5753                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 50:     expander_setOutput(packetLow | (1<<3)
      +                          );
  5754  00219E  5014               	movf	lcd_sendByte@packetLow^0,w,c
  5755  0021A0  0908               	iorlw	8
  5756  0021A2  ECEF  F013         	call	_expander_setOutput
  5757  0021A6                     
  5758                           ;mcc_generated_files/LCDMiniDrivers/lcd.c: 51:     DELAY_milliseconds(40);
  5759  0021A6  0E00               	movlw	0
  5760  0021A8  6E02               	movwf	(DELAY_milliseconds@milliseconds+1)^0,c
  5761  0021AA  0E28               	movlw	40
  5762  0021AC  6E01               	movwf	DELAY_milliseconds@milliseconds^0,c
  5763  0021AE  EC3E  F013         	call	_DELAY_milliseconds	;wreg free
  5764  0021B2  0012               	return		;funcret
  5765  0021B4                     __end_of_lcd_sendByte:
  5766                           	callstack 0
  5767                           
  5768 ;; *************** function _expander_setOutput *****************
  5769 ;; Defined at:
  5770 ;;		line 48 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  output          1    wreg     unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  output          1   12[COMRAM] unsigned char 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5788 ;;Total ram usage:        1 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    4
  5791 ;; This function calls:
  5792 ;;		_expander_sendByte
  5793 ;; This function is called by:
  5794 ;;		_lcd_sendNibble
  5795 ;;		_lcd_sendByte
  5796 ;;		_lcd_setup
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text42
  5801  0027DE                     __ptext42:
  5802                           	callstack 0
  5803  0027DE                     _expander_setOutput:
  5804                           	callstack 23
  5805                           
  5806                           ;incstack = 0
  5807                           ;expander_setOutput@output stored from wreg
  5808  0027DE  6E0D               	movwf	expander_setOutput@output^0,c
  5809  0027E0                     
  5810                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 49:     expander_sendByte(0x15, output);
  5811  0027E0  C00D  F008         	movff	expander_setOutput@output,expander_sendByte@byte
  5812  0027E4  0E15               	movlw	21
  5813  0027E6  EC9D  F012         	call	_expander_sendByte
  5814  0027EA  0012               	return		;funcret
  5815  0027EC                     __end_of_expander_setOutput:
  5816                           	callstack 0
  5817                           
  5818 ;; *************** function _expander_sendByte *****************
  5819 ;; Defined at:
  5820 ;;		line 32 in file "mcc_generated_files/LCDMiniDrivers/expander.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  addr            1    wreg     unsigned char 
  5823 ;;  byte            1    7[COMRAM] unsigned char 
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  addr            1    8[COMRAM] unsigned char 
  5826 ;;  cmd             3    9[COMRAM] unsigned char [3]
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5836 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;Total ram usage:        5 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    3
  5843 ;; This function calls:
  5844 ;;		_SPI1_Close
  5845 ;;		_SPI1_WriteBlock
  5846 ;;		_spi_master_open
  5847 ;; This function is called by:
  5848 ;;		_expander_setup
  5849 ;;		_expander_setOutput
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text43
  5854  00253A                     __ptext43:
  5855                           	callstack 0
  5856  00253A                     _expander_sendByte:
  5857                           	callstack 23
  5858                           
  5859                           ;incstack = 0
  5860                           ;expander_sendByte@addr stored from wreg
  5861  00253A  6E09               	movwf	expander_sendByte@addr^0,c
  5862  00253C                     
  5863                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 33:     spi_master_open(LCD);
  5864  00253C  0E00               	movlw	0
  5865  00253E  ECB6  F012         	call	_spi_master_open
  5866  002542                     
  5867                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 34:     LATDbits.LATD4 = 0;
  5868  002542  9885               	bcf	133,4,c	;volatile
  5869  002544                     
  5870                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 35:     uint8_t cmd[3];;mcc_generated_fi
      +                          les/LCDMiniDrivers/expander.c: 36:     cmd[0] = 0b01000000;
  5871  002544  0E40               	movlw	64
  5872  002546  6E0A               	movwf	expander_sendByte@cmd^0,c
  5873  002548                     
  5874                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 37:     cmd[1] = addr;
  5875  002548  C009  F00B         	movff	expander_sendByte@addr,expander_sendByte@cmd+1
  5876  00254C                     
  5877                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 38:     cmd[2] = byte;
  5878  00254C  C008  F00C         	movff	expander_sendByte@byte,expander_sendByte@cmd+2
  5879  002550                     
  5880                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 39:     SPI1_WriteBlock(cmd, 3);
  5881  002550  0E0A               	movlw	low expander_sendByte@cmd
  5882  002552  6E02               	movwf	SPI1_WriteBlock@block^0,c
  5883  002554  0E00               	movlw	high expander_sendByte@cmd
  5884  002556  6E03               	movwf	(SPI1_WriteBlock@block+1)^0,c
  5885  002558  0E00               	movlw	0
  5886  00255A  6E05               	movwf	(SPI1_WriteBlock@blockSize+1)^0,c
  5887  00255C  0E03               	movlw	3
  5888  00255E  6E04               	movwf	SPI1_WriteBlock@blockSize^0,c
  5889  002560  EC2F  F012         	call	_SPI1_WriteBlock	;wreg free
  5890  002564                     
  5891                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 40:     LATDbits.LATD4 = 1;
  5892  002564  8885               	bsf	133,4,c	;volatile
  5893  002566                     
  5894                           ;mcc_generated_files/LCDMiniDrivers/expander.c: 41:     SPI1_Close();
  5895  002566  EC05  F014         	call	_SPI1_Close	;wreg free
  5896  00256A  0012               	return		;funcret
  5897  00256C                     __end_of_expander_sendByte:
  5898                           	callstack 0
  5899                           
  5900 ;; *************** function _spi_master_open *****************
  5901 ;; Defined at:
  5902 ;;		line 53 in file "mcc_generated_files/drivers/spi_master.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  config          1    wreg     enum E377
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  config          1    4[COMRAM] enum E377
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      _Bool 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5918 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5919 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5920 ;;Total ram usage:        3 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    2
  5923 ;; This function calls:
  5924 ;;		_LCD_open
  5925 ;; This function is called by:
  5926 ;;		_digipot_setWiper
  5927 ;;		_expander_sendByte
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text44
  5932  00256C                     __ptext44:
  5933                           	callstack 0
  5934  00256C                     _spi_master_open:
  5935                           	callstack 23
  5936                           
  5937                           ;incstack = 0
  5938                           ;spi_master_open@config stored from wreg
  5939  00256C  6E05               	movwf	spi_master_open@config^0,c
  5940  00256E                     
  5941                           ;mcc_generated_files/drivers/spi_master.c: 54:     switch(config){
  5942  00256E  EFBD  F012         	goto	l2271
  5943  002572                     l2265:
  5944                           
  5945                           ;mcc_generated_files/drivers/spi_master.c: 56:             return LCD_open();;	Return va
      +                          lue of _spi_master_open is never used
  5946  002572  EC01  F014         	call	_LCD_open	;wreg free
  5947  002576  EFCE  F012         	goto	l458
  5948  00257A                     l2271:
  5949  00257A  5005               	movf	spi_master_open@config^0,w,c
  5950  00257C  6E03               	movwf	??_spi_master_open^0,c
  5951  00257E  6A04               	clrf	(??_spi_master_open+1)^0,c
  5952                           
  5953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5954                           ; Switch size 1, requested type "simple"
  5955                           ; Number of cases is 1, Range of values is 0 to 0
  5956                           ; switch strategies available:
  5957                           ; Name         Instructions Cycles
  5958                           ; simple_byte            4     3 (average)
  5959                           ;	Chosen strategy is simple_byte
  5960  002580  5004               	movf	(??_spi_master_open+1)^0,w,c
  5961  002582  0A00               	xorlw	0	; case 0
  5962  002584  B4D8               	btfsc	status,2,c
  5963  002586  EFC7  F012         	goto	l2993
  5964  00258A  EFCE  F012         	goto	l458
  5965  00258E                     l2993:
  5966                           
  5967                           ; Switch size 1, requested type "simple"
  5968                           ; Number of cases is 1, Range of values is 0 to 0
  5969                           ; switch strategies available:
  5970                           ; Name         Instructions Cycles
  5971                           ; simple_byte            4     3 (average)
  5972                           ;	Chosen strategy is simple_byte
  5973  00258E  5003               	movf	??_spi_master_open^0,w,c
  5974  002590  0A00               	xorlw	0	; case 0
  5975  002592  B4D8               	btfsc	status,2,c
  5976  002594  EFB9  F012         	goto	l2265
  5977  002598  EFCE  F012         	goto	l458
  5978  00259C                     l458:
  5979  00259C  0012               	return		;funcret
  5980  00259E                     __end_of_spi_master_open:
  5981                           	callstack 0
  5982                           
  5983 ;; *************** function _LCD_open *****************
  5984 ;; Defined at:
  5985 ;;		line 40 in file "mcc_generated_files/drivers/spi_master.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      _Bool 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;Total ram usage:        0 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    1
  6006 ;; This function calls:
  6007 ;;		_SPI1_Open
  6008 ;; This function is called by:
  6009 ;;		_spi_master_open
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text45
  6014  002802                     __ptext45:
  6015                           	callstack 0
  6016  002802                     _LCD_open:
  6017                           	callstack 23
  6018  002802                     
  6019                           ;mcc_generated_files/drivers/spi_master.c: 41:     return SPI1_Open(LCD_CONFIG);
  6020  002802  0E00               	movlw	0
  6021  002804  EC4F  F00F         	call	_SPI1_Open
  6022  002808  0012               	return		;funcret
  6023  00280A                     __end_of_LCD_open:
  6024                           	callstack 0
  6025                           
  6026 ;; *************** function _SPI1_Open *****************
  6027 ;; Defined at:
  6028 ;;		line 85 in file "mcc_generated_files/spi1.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  spi1UniqueCo    1    wreg     enum E355
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  spi1UniqueCo    1    1[COMRAM] enum E355
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      _Bool 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6046 ;;Total ram usage:        2 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_LCD_open
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text46
  6056  001E9E                     __ptext46:
  6057                           	callstack 0
  6058  001E9E                     _SPI1_Open:
  6059                           	callstack 23
  6060                           
  6061                           ;incstack = 0
  6062                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  6063  001E9E  6E02               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
  6064  001EA0                     
  6065                           ;mcc_generated_files/spi1.c: 85:         *data++ = SPI1_ExchangeByte(0);;mcc_generated_f
      +                          iles/spi1.c: 86:     };mcc_generated_files/spi1.c: 87: }
  6066  001EA0  BA95               	btfsc	149,5,c	;volatile
  6067  001EA2  EF55  F00F         	goto	u921
  6068  001EA6  EF57  F00F         	goto	u920
  6069  001EAA                     u921:
  6070  001EAA  EFA9  F00F         	goto	l2229
  6071  001EAE                     u920:
  6072  001EAE                     
  6073                           ;mcc_generated_files/spi1.c: 88: ;mcc_generated_files/spi1.c: 89: void SPI1_WriteByte(ui
      +                          nt8_t byte)
  6074  001EAE  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  6075  001EB0  0D04               	mullw	4
  6076  001EB2  0E01               	movlw	1
  6077  001EB4  26F3               	addwf	243,f,c
  6078  001EB6  0E00               	movlw	0
  6079  001EB8  22F4               	addwfc	244,f,c
  6080  001EBA  0E1F               	movlw	low _spi1_configuration
  6081  001EBC  24F3               	addwf	243,w,c
  6082  001EBE  6EF6               	movwf	tblptrl,c
  6083  001EC0  0E0F               	movlw	high _spi1_configuration
  6084  001EC2  20F4               	addwfc	244,w,c
  6085  001EC4  6EF7               	movwf	tblptrh,c
  6086  001EC6                     	if	1	;There are 3 active tblptr bytes
  6087  001EC6  6AF8               	clrf	tblptru,c
  6088  001EC8  0E00               	movlw	low (__mediumconst shr (0+16))
  6089  001ECA  22F8               	addwfc	tblptru,f,c
  6090  001ECC                     	endif
  6091  001ECC  0008               	tblrd		*
  6092  001ECE  CFF5 FF94          	movff	tablat,3988	;volatile
  6093                           
  6094                           ;mcc_generated_files/spi1.c: 90: {
  6095  001ED2  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  6096  001ED4  0D04               	mullw	4
  6097  001ED6  0E1F               	movlw	low _spi1_configuration
  6098  001ED8  24F3               	addwf	243,w,c
  6099  001EDA  6EF6               	movwf	tblptrl,c
  6100  001EDC  0E0F               	movlw	high _spi1_configuration
  6101  001EDE  20F4               	addwfc	244,w,c
  6102  001EE0  6EF7               	movwf	tblptrh,c
  6103  001EE2                     	if	1	;There are 3 active tblptr bytes
  6104  001EE2  6AF8               	clrf	tblptru,c
  6105  001EE4  0E00               	movlw	low (__mediumconst shr (0+16))
  6106  001EE6  22F8               	addwfc	tblptru,f,c
  6107  001EE8                     	endif
  6108  001EE8  0008               	tblrd		*
  6109  001EEA  CFF5 FF95          	movff	tablat,3989	;volatile
  6110  001EEE                     
  6111                           ;mcc_generated_files/spi1.c: 91:     SSP1BUF = byte;
  6112  001EEE  0E00               	movlw	0
  6113  001EF0  6E96               	movwf	150,c	;volatile
  6114  001EF2                     
  6115                           ;mcc_generated_files/spi1.c: 92: }
  6116  001EF2  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  6117  001EF4  0D04               	mullw	4
  6118  001EF6  0E02               	movlw	2
  6119  001EF8  26F3               	addwf	243,f,c
  6120  001EFA  0E00               	movlw	0
  6121  001EFC  22F4               	addwfc	244,f,c
  6122  001EFE  0E1F               	movlw	low _spi1_configuration
  6123  001F00  24F3               	addwf	243,w,c
  6124  001F02  6EF6               	movwf	tblptrl,c
  6125  001F04  0E0F               	movlw	high _spi1_configuration
  6126  001F06  20F4               	addwfc	244,w,c
  6127  001F08  6EF7               	movwf	tblptrh,c
  6128  001F0A                     	if	1	;There are 3 active tblptr bytes
  6129  001F0A  6AF8               	clrf	tblptru,c
  6130  001F0C  0E00               	movlw	low (__mediumconst shr (0+16))
  6131  001F0E  22F8               	addwfc	tblptru,f,c
  6132  001F10                     	endif
  6133  001F10  0008               	tblrd		*
  6134  001F12  CFF5 FF92          	movff	tablat,3986	;volatile
  6135  001F16                     
  6136                           ;mcc_generated_files/spi1.c: 93: 
  6137  001F16  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  6138  001F18  0D04               	mullw	4
  6139  001F1A  0E03               	movlw	3
  6140  001F1C  26F3               	addwf	243,f,c
  6141  001F1E  0E00               	movlw	0
  6142  001F20  22F4               	addwfc	244,f,c
  6143  001F22  0E1F               	movlw	low _spi1_configuration
  6144  001F24  24F3               	addwf	243,w,c
  6145  001F26  6EF6               	movwf	tblptrl,c
  6146  001F28  0E0F               	movlw	high _spi1_configuration
  6147  001F2A  20F4               	addwfc	244,w,c
  6148  001F2C  6EF7               	movwf	tblptrh,c
  6149  001F2E                     	if	1	;There are 3 active tblptr bytes
  6150  001F2E  6AF8               	clrf	tblptru,c
  6151  001F30  0E00               	movlw	low (__mediumconst shr (0+16))
  6152  001F32  22F8               	addwfc	tblptru,f,c
  6153  001F34                     	endif
  6154  001F34  0008               	tblrd		*
  6155  001F36  CFF5 F001          	movff	tablat,??_SPI1_Open
  6156  001F3A  3A01               	swapf	??_SPI1_Open^0,f,c
  6157  001F3C  4601               	rlncf	??_SPI1_Open^0,f,c
  6158  001F3E  4601               	rlncf	??_SPI1_Open^0,f,c
  6159  001F40  5089               	movf	137,w,c	;volatile
  6160  001F42  1801               	xorwf	??_SPI1_Open^0,w,c
  6161  001F44  0BBF               	andlw	-65
  6162  001F46  1801               	xorwf	??_SPI1_Open^0,w,c
  6163  001F48  6E89               	movwf	137,c	;volatile
  6164  001F4A                     
  6165                           ;mcc_generated_files/spi1.c: 94: uint8_t SPI1_ReadByte(void)
  6166  001F4A  8A95               	bsf	149,5,c	;volatile
  6167  001F4C                     
  6168                           ;mcc_generated_files/spi1.c: 95: {
  6169  001F4C  0E01               	movlw	1
  6170  001F4E  EFAA  F00F         	goto	l302
  6171  001F52                     l2229:
  6172                           
  6173                           ;mcc_generated_files/spi1.c: 97: }
  6174  001F52  0E00               	movlw	0
  6175  001F54                     l302:
  6176  001F54  0012               	return		;funcret
  6177  001F56                     __end_of_SPI1_Open:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _SPI1_WriteBlock *****************
  6181 ;; Defined at:
  6182 ;;		line 126 in file "mcc_generated_files/spi1.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  block           2    1[COMRAM] PTR void 
  6185 ;;		 -> expander_sendByte@cmd(3), digipot_setWiper@cmd(2), 
  6186 ;;  blockSize       2    3[COMRAM] unsigned int 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  data            2    5[COMRAM] PTR unsigned char 
  6189 ;;		 -> expander_sendByte@cmd(3), digipot_setWiper@cmd(2), 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6202 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6203 ;;Total ram usage:        6 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    1
  6206 ;; This function calls:
  6207 ;;		_SPI1_ExchangeByte
  6208 ;; This function is called by:
  6209 ;;		_digipot_setWiper
  6210 ;;		_expander_sendByte
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text47
  6215  00245E                     __ptext47:
  6216                           	callstack 0
  6217  00245E                     _SPI1_WriteBlock:
  6218                           	callstack 24
  6219  00245E  C002  F006         	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
  6220  002462  C003  F007         	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
  6221  002466  EF3E  F012         	goto	l2261
  6222  00246A                     l2257:
  6223  00246A  C006  FFD9         	movff	SPI1_WriteBlock@data,fsr2l
  6224  00246E  C007  FFDA         	movff	SPI1_WriteBlock@data+1,fsr2h
  6225  002472  50DF               	movf	indf2,w,c
  6226  002474  EC98  F013         	call	_SPI1_ExchangeByte
  6227  002478  4A06               	infsnz	SPI1_WriteBlock@data^0,f,c
  6228  00247A  2A07               	incf	(SPI1_WriteBlock@data+1)^0,f,c
  6229  00247C                     l2261:
  6230  00247C  0604               	decf	SPI1_WriteBlock@blockSize^0,f,c
  6231  00247E  A0D8               	btfss	status,0,c
  6232  002480  0605               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
  6233  002482  2804               	incf	SPI1_WriteBlock@blockSize^0,w,c
  6234  002484  E106               	bnz	u981
  6235  002486  2805               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
  6236  002488  A4D8               	btfss	status,2,c
  6237  00248A  EF49  F012         	goto	u981
  6238  00248E  EF4B  F012         	goto	u980
  6239  002492                     u981:
  6240  002492  EF35  F012         	goto	l2257
  6241  002496                     u980:
  6242  002496  0012               	return		;funcret
  6243  002498                     __end_of_SPI1_WriteBlock:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _SPI1_ExchangeByte *****************
  6247 ;; Defined at:
  6248 ;;		line 105 in file "mcc_generated_files/spi1.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  data            1    wreg     unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  data            1    0[COMRAM] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      unsigned char 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;Total ram usage:        1 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_SPI1_WriteBlock
  6272 ;;		_SPI1_ReadBlock
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text48
  6277  002730                     __ptext48:
  6278                           	callstack 0
  6279  002730                     _SPI1_ExchangeByte:
  6280                           	callstack 24
  6281                           
  6282                           ;incstack = 0
  6283                           ;SPI1_ExchangeByte@data stored from wreg
  6284  002730  6E01               	movwf	SPI1_ExchangeByte@data^0,c
  6285  002732  C001  FF91         	movff	SPI1_ExchangeByte@data,3985	;volatile
  6286  002736                     l308:
  6287  002736  010E               	movlb	14	; () banked
  6288  002738  A1C8               	btfss	200,0,b	;volatile
  6289  00273A  EFA1  F013         	goto	u931
  6290  00273E  EFA3  F013         	goto	u930
  6291  002742                     u931:
  6292  002742  EF9B  F013         	goto	l308
  6293  002746                     u930:
  6294  002746                     
  6295                           ; BSR set to: 14
  6296  002746  91C8               	bcf	200,0,b	;volatile
  6297  002748  5091               	movf	145,w,c	;volatile
  6298  00274A                     
  6299                           ; BSR set to: 14
  6300  00274A  0012               	return		;funcret
  6301  00274C                     __end_of_SPI1_ExchangeByte:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function _SPI1_Close *****************
  6305 ;; Defined at:
  6306 ;;		line 100 in file "mcc_generated_files/spi1.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		None
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;Total ram usage:        0 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_digipot_setWiper
  6330 ;;		_expander_sendByte
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text49
  6335  00280A                     __ptext49:
  6336                           	callstack 0
  6337  00280A                     _SPI1_Close:
  6338                           	callstack 25
  6339  00280A  9A95               	bcf	149,5,c	;volatile
  6340  00280C  0012               	return		;funcret
  6341  00280E                     __end_of_SPI1_Close:
  6342                           	callstack 0
  6343                           
  6344 ;; *************** function _DELAY_milliseconds *****************
  6345 ;; Defined at:
  6346 ;;		line 35 in file "mcc_generated_files/delay.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  milliseconds    2    0[COMRAM] unsigned short 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;Total ram usage:        2 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_lcd_sendNibble
  6370 ;;		_lcd_sendByte
  6371 ;;		_lcd_returnHome
  6372 ;;		_lcd_clearDisplay
  6373 ;;		_lcd_setup
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text50
  6378  00267C                     __ptext50:
  6379                           	callstack 0
  6380  00267C                     _DELAY_milliseconds:
  6381                           	callstack 27
  6382  00267C                     
  6383                           ;mcc_generated_files/delay.c: 36:     while(milliseconds--){
  6384  00267C  EF44  F013         	goto	l2445
  6385  002680                     l2443:
  6386                           
  6387                           ;mcc_generated_files/delay.c: 37:         _delay((unsigned long)((1)*(1000000/4000.0)));
  6388  002680  0E53               	movlw	83
  6389  002682                     u1797:
  6390  002682  2EE8               	decfsz	wreg,f,c
  6391  002684  D7FE               	bra	u1797
  6392  002686  F000               	nop	
  6393  002688                     l2445:
  6394                           
  6395                           ;mcc_generated_files/delay.c: 36:     while(milliseconds--){
  6396  002688  0601               	decf	DELAY_milliseconds@milliseconds^0,f,c
  6397  00268A  A0D8               	btfss	status,0,c
  6398  00268C  0602               	decf	(DELAY_milliseconds@milliseconds+1)^0,f,c
  6399  00268E  2801               	incf	DELAY_milliseconds@milliseconds^0,w,c
  6400  002690  E106               	bnz	u1231
  6401  002692  2802               	incf	(DELAY_milliseconds@milliseconds+1)^0,w,c
  6402  002694  A4D8               	btfss	status,2,c
  6403  002696  EF4F  F013         	goto	u1231
  6404  00269A  EF51  F013         	goto	u1230
  6405  00269E                     u1231:
  6406  00269E  EF40  F013         	goto	l2443
  6407  0026A2                     u1230:
  6408  0026A2  0012               	return		;funcret
  6409  0026A4                     __end_of_DELAY_milliseconds:
  6410                           	callstack 0
  6411                           
  6412                           	psect	text51
  6413  000000                     __ptext51:
  6414                           	callstack 0
  6415  000000                     
  6416                           	psect	rparam
  6417  0000                     
  6418                           	psect	idloc
  6419                           
  6420                           ;Config register IDLOC0 @ 0x200000
  6421                           ;	unspecified, using default values
  6422  200000                     	org	2097152
  6423  200000  FFFF               	dw	65535
  6424                           
  6425                           ;Config register IDLOC1 @ 0x200002
  6426                           ;	unspecified, using default values
  6427  200002                     	org	2097154
  6428  200002  FFFF               	dw	65535
  6429                           
  6430                           ;Config register IDLOC2 @ 0x200004
  6431                           ;	unspecified, using default values
  6432  200004                     	org	2097156
  6433  200004  FFFF               	dw	65535
  6434                           
  6435                           ;Config register IDLOC3 @ 0x200006
  6436                           ;	unspecified, using default values
  6437  200006                     	org	2097158
  6438  200006  FFFF               	dw	65535
  6439                           
  6440                           ;Config register IDLOC4 @ 0x200008
  6441                           ;	unspecified, using default values
  6442  200008                     	org	2097160
  6443  200008  FFFF               	dw	65535
  6444                           
  6445                           ;Config register IDLOC5 @ 0x20000A
  6446                           ;	unspecified, using default values
  6447  20000A                     	org	2097162
  6448  20000A  FFFF               	dw	65535
  6449                           
  6450                           ;Config register IDLOC6 @ 0x20000C
  6451                           ;	unspecified, using default values
  6452  20000C                     	org	2097164
  6453  20000C  FFFF               	dw	65535
  6454                           
  6455                           ;Config register IDLOC7 @ 0x20000E
  6456                           ;	unspecified, using default values
  6457  20000E                     	org	2097166
  6458  20000E  FFFF               	dw	65535
  6459                           
  6460                           ;Config register IDLOC8 @ 0x200010
  6461                           ;	unspecified, using default values
  6462  200010                     	org	2097168
  6463  200010  FFFF               	dw	65535
  6464                           
  6465                           ;Config register IDLOC9 @ 0x200012
  6466                           ;	unspecified, using default values
  6467  200012                     	org	2097170
  6468  200012  FFFF               	dw	65535
  6469                           
  6470                           ;Config register IDLOC10 @ 0x200014
  6471                           ;	unspecified, using default values
  6472  200014                     	org	2097172
  6473  200014  FFFF               	dw	65535
  6474                           
  6475                           ;Config register IDLOC11 @ 0x200016
  6476                           ;	unspecified, using default values
  6477  200016                     	org	2097174
  6478  200016  FFFF               	dw	65535
  6479                           
  6480                           ;Config register IDLOC12 @ 0x200018
  6481                           ;	unspecified, using default values
  6482  200018                     	org	2097176
  6483  200018  FFFF               	dw	65535
  6484                           
  6485                           ;Config register IDLOC13 @ 0x20001A
  6486                           ;	unspecified, using default values
  6487  20001A                     	org	2097178
  6488  20001A  FFFF               	dw	65535
  6489                           
  6490                           ;Config register IDLOC14 @ 0x20001C
  6491                           ;	unspecified, using default values
  6492  20001C                     	org	2097180
  6493  20001C  FFFF               	dw	65535
  6494                           
  6495                           ;Config register IDLOC15 @ 0x20001E
  6496                           ;	unspecified, using default values
  6497  20001E                     	org	2097182
  6498  20001E  FFFF               	dw	65535
  6499                           
  6500                           ;Config register IDLOC16 @ 0x200020
  6501                           ;	unspecified, using default values
  6502  200020                     	org	2097184
  6503  200020  FFFF               	dw	65535
  6504                           
  6505                           ;Config register IDLOC17 @ 0x200022
  6506                           ;	unspecified, using default values
  6507  200022                     	org	2097186
  6508  200022  FFFF               	dw	65535
  6509                           
  6510                           ;Config register IDLOC18 @ 0x200024
  6511                           ;	unspecified, using default values
  6512  200024                     	org	2097188
  6513  200024  FFFF               	dw	65535
  6514                           
  6515                           ;Config register IDLOC19 @ 0x200026
  6516                           ;	unspecified, using default values
  6517  200026                     	org	2097190
  6518  200026  FFFF               	dw	65535
  6519                           
  6520                           ;Config register IDLOC20 @ 0x200028
  6521                           ;	unspecified, using default values
  6522  200028                     	org	2097192
  6523  200028  FFFF               	dw	65535
  6524                           
  6525                           ;Config register IDLOC21 @ 0x20002A
  6526                           ;	unspecified, using default values
  6527  20002A                     	org	2097194
  6528  20002A  FFFF               	dw	65535
  6529                           
  6530                           ;Config register IDLOC22 @ 0x20002C
  6531                           ;	unspecified, using default values
  6532  20002C                     	org	2097196
  6533  20002C  FFFF               	dw	65535
  6534                           
  6535                           ;Config register IDLOC23 @ 0x20002E
  6536                           ;	unspecified, using default values
  6537  20002E                     	org	2097198
  6538  20002E  FFFF               	dw	65535
  6539                           
  6540                           ;Config register IDLOC24 @ 0x200030
  6541                           ;	unspecified, using default values
  6542  200030                     	org	2097200
  6543  200030  FFFF               	dw	65535
  6544                           
  6545                           ;Config register IDLOC25 @ 0x200032
  6546                           ;	unspecified, using default values
  6547  200032                     	org	2097202
  6548  200032  FFFF               	dw	65535
  6549                           
  6550                           ;Config register IDLOC26 @ 0x200034
  6551                           ;	unspecified, using default values
  6552  200034                     	org	2097204
  6553  200034  FFFF               	dw	65535
  6554                           
  6555                           ;Config register IDLOC27 @ 0x200036
  6556                           ;	unspecified, using default values
  6557  200036                     	org	2097206
  6558  200036  FFFF               	dw	65535
  6559                           
  6560                           ;Config register IDLOC28 @ 0x200038
  6561                           ;	unspecified, using default values
  6562  200038                     	org	2097208
  6563  200038  FFFF               	dw	65535
  6564                           
  6565                           ;Config register IDLOC29 @ 0x20003A
  6566                           ;	unspecified, using default values
  6567  20003A                     	org	2097210
  6568  20003A  FFFF               	dw	65535
  6569                           
  6570                           ;Config register IDLOC30 @ 0x20003C
  6571                           ;	unspecified, using default values
  6572  20003C                     	org	2097212
  6573  20003C  FFFF               	dw	65535
  6574                           
  6575                           ;Config register IDLOC31 @ 0x20003E
  6576                           ;	unspecified, using default values
  6577  20003E                     	org	2097214
  6578  20003E  FFFF               	dw	65535
  6579                           
  6580                           ;Config register IDLOC32 @ 0x200040
  6581                           ;	unspecified, using default values
  6582  200040                     	org	2097216
  6583  200040  FFFF               	dw	65535
  6584                           
  6585                           ;Config register IDLOC33 @ 0x200042
  6586                           ;	unspecified, using default values
  6587  200042                     	org	2097218
  6588  200042  FFFF               	dw	65535
  6589                           
  6590                           ;Config register IDLOC34 @ 0x200044
  6591                           ;	unspecified, using default values
  6592  200044                     	org	2097220
  6593  200044  FFFF               	dw	65535
  6594                           
  6595                           ;Config register IDLOC35 @ 0x200046
  6596                           ;	unspecified, using default values
  6597  200046                     	org	2097222
  6598  200046  FFFF               	dw	65535
  6599                           
  6600                           ;Config register IDLOC36 @ 0x200048
  6601                           ;	unspecified, using default values
  6602  200048                     	org	2097224
  6603  200048  FFFF               	dw	65535
  6604                           
  6605                           ;Config register IDLOC37 @ 0x20004A
  6606                           ;	unspecified, using default values
  6607  20004A                     	org	2097226
  6608  20004A  FFFF               	dw	65535
  6609                           
  6610                           ;Config register IDLOC38 @ 0x20004C
  6611                           ;	unspecified, using default values
  6612  20004C                     	org	2097228
  6613  20004C  FFFF               	dw	65535
  6614                           
  6615                           ;Config register IDLOC39 @ 0x20004E
  6616                           ;	unspecified, using default values
  6617  20004E                     	org	2097230
  6618  20004E  FFFF               	dw	65535
  6619                           
  6620                           ;Config register IDLOC40 @ 0x200050
  6621                           ;	unspecified, using default values
  6622  200050                     	org	2097232
  6623  200050  FFFF               	dw	65535
  6624                           
  6625                           ;Config register IDLOC41 @ 0x200052
  6626                           ;	unspecified, using default values
  6627  200052                     	org	2097234
  6628  200052  FFFF               	dw	65535
  6629                           
  6630                           ;Config register IDLOC42 @ 0x200054
  6631                           ;	unspecified, using default values
  6632  200054                     	org	2097236
  6633  200054  FFFF               	dw	65535
  6634                           
  6635                           ;Config register IDLOC43 @ 0x200056
  6636                           ;	unspecified, using default values
  6637  200056                     	org	2097238
  6638  200056  FFFF               	dw	65535
  6639                           
  6640                           ;Config register IDLOC44 @ 0x200058
  6641                           ;	unspecified, using default values
  6642  200058                     	org	2097240
  6643  200058  FFFF               	dw	65535
  6644                           
  6645                           ;Config register IDLOC45 @ 0x20005A
  6646                           ;	unspecified, using default values
  6647  20005A                     	org	2097242
  6648  20005A  FFFF               	dw	65535
  6649                           
  6650                           ;Config register IDLOC46 @ 0x20005C
  6651                           ;	unspecified, using default values
  6652  20005C                     	org	2097244
  6653  20005C  FFFF               	dw	65535
  6654                           
  6655                           ;Config register IDLOC47 @ 0x20005E
  6656                           ;	unspecified, using default values
  6657  20005E                     	org	2097246
  6658  20005E  FFFF               	dw	65535
  6659                           
  6660                           ;Config register IDLOC48 @ 0x200060
  6661                           ;	unspecified, using default values
  6662  200060                     	org	2097248
  6663  200060  FFFF               	dw	65535
  6664                           
  6665                           ;Config register IDLOC49 @ 0x200062
  6666                           ;	unspecified, using default values
  6667  200062                     	org	2097250
  6668  200062  FFFF               	dw	65535
  6669                           
  6670                           ;Config register IDLOC50 @ 0x200064
  6671                           ;	unspecified, using default values
  6672  200064                     	org	2097252
  6673  200064  FFFF               	dw	65535
  6674                           
  6675                           ;Config register IDLOC51 @ 0x200066
  6676                           ;	unspecified, using default values
  6677  200066                     	org	2097254
  6678  200066  FFFF               	dw	65535
  6679                           
  6680                           ;Config register IDLOC52 @ 0x200068
  6681                           ;	unspecified, using default values
  6682  200068                     	org	2097256
  6683  200068  FFFF               	dw	65535
  6684                           
  6685                           ;Config register IDLOC53 @ 0x20006A
  6686                           ;	unspecified, using default values
  6687  20006A                     	org	2097258
  6688  20006A  FFFF               	dw	65535
  6689                           
  6690                           ;Config register IDLOC54 @ 0x20006C
  6691                           ;	unspecified, using default values
  6692  20006C                     	org	2097260
  6693  20006C  FFFF               	dw	65535
  6694                           
  6695                           ;Config register IDLOC55 @ 0x20006E
  6696                           ;	unspecified, using default values
  6697  20006E                     	org	2097262
  6698  20006E  FFFF               	dw	65535
  6699                           
  6700                           ;Config register IDLOC56 @ 0x200070
  6701                           ;	unspecified, using default values
  6702  200070                     	org	2097264
  6703  200070  FFFF               	dw	65535
  6704                           
  6705                           ;Config register IDLOC57 @ 0x200072
  6706                           ;	unspecified, using default values
  6707  200072                     	org	2097266
  6708  200072  FFFF               	dw	65535
  6709                           
  6710                           ;Config register IDLOC58 @ 0x200074
  6711                           ;	unspecified, using default values
  6712  200074                     	org	2097268
  6713  200074  FFFF               	dw	65535
  6714                           
  6715                           ;Config register IDLOC59 @ 0x200076
  6716                           ;	unspecified, using default values
  6717  200076                     	org	2097270
  6718  200076  FFFF               	dw	65535
  6719                           
  6720                           ;Config register IDLOC60 @ 0x200078
  6721                           ;	unspecified, using default values
  6722  200078                     	org	2097272
  6723  200078  FFFF               	dw	65535
  6724                           
  6725                           ;Config register IDLOC61 @ 0x20007A
  6726                           ;	unspecified, using default values
  6727  20007A                     	org	2097274
  6728  20007A  FFFF               	dw	65535
  6729                           
  6730                           ;Config register IDLOC62 @ 0x20007C
  6731                           ;	unspecified, using default values
  6732  20007C                     	org	2097276
  6733  20007C  FFFF               	dw	65535
  6734                           
  6735                           ;Config register IDLOC63 @ 0x20007E
  6736                           ;	unspecified, using default values
  6737  20007E                     	org	2097278
  6738  20007E  FFFF               	dw	65535
  6739                           
  6740                           ;Config register IDLOC64 @ 0x200080
  6741                           ;	unspecified, using default values
  6742  200080                     	org	2097280
  6743  200080  FFFF               	dw	65535
  6744                           
  6745                           ;Config register IDLOC65 @ 0x200082
  6746                           ;	unspecified, using default values
  6747  200082                     	org	2097282
  6748  200082  FFFF               	dw	65535
  6749                           
  6750                           ;Config register IDLOC66 @ 0x200084
  6751                           ;	unspecified, using default values
  6752  200084                     	org	2097284
  6753  200084  FFFF               	dw	65535
  6754                           
  6755                           ;Config register IDLOC67 @ 0x200086
  6756                           ;	unspecified, using default values
  6757  200086                     	org	2097286
  6758  200086  FFFF               	dw	65535
  6759                           
  6760                           ;Config register IDLOC68 @ 0x200088
  6761                           ;	unspecified, using default values
  6762  200088                     	org	2097288
  6763  200088  FFFF               	dw	65535
  6764                           
  6765                           ;Config register IDLOC69 @ 0x20008A
  6766                           ;	unspecified, using default values
  6767  20008A                     	org	2097290
  6768  20008A  FFFF               	dw	65535
  6769                           
  6770                           ;Config register IDLOC70 @ 0x20008C
  6771                           ;	unspecified, using default values
  6772  20008C                     	org	2097292
  6773  20008C  FFFF               	dw	65535
  6774                           
  6775                           ;Config register IDLOC71 @ 0x20008E
  6776                           ;	unspecified, using default values
  6777  20008E                     	org	2097294
  6778  20008E  FFFF               	dw	65535
  6779                           
  6780                           ;Config register IDLOC72 @ 0x200090
  6781                           ;	unspecified, using default values
  6782  200090                     	org	2097296
  6783  200090  FFFF               	dw	65535
  6784                           
  6785                           ;Config register IDLOC73 @ 0x200092
  6786                           ;	unspecified, using default values
  6787  200092                     	org	2097298
  6788  200092  FFFF               	dw	65535
  6789                           
  6790                           ;Config register IDLOC74 @ 0x200094
  6791                           ;	unspecified, using default values
  6792  200094                     	org	2097300
  6793  200094  FFFF               	dw	65535
  6794                           
  6795                           ;Config register IDLOC75 @ 0x200096
  6796                           ;	unspecified, using default values
  6797  200096                     	org	2097302
  6798  200096  FFFF               	dw	65535
  6799                           
  6800                           ;Config register IDLOC76 @ 0x200098
  6801                           ;	unspecified, using default values
  6802  200098                     	org	2097304
  6803  200098  FFFF               	dw	65535
  6804                           
  6805                           ;Config register IDLOC77 @ 0x20009A
  6806                           ;	unspecified, using default values
  6807  20009A                     	org	2097306
  6808  20009A  FFFF               	dw	65535
  6809                           
  6810                           ;Config register IDLOC78 @ 0x20009C
  6811                           ;	unspecified, using default values
  6812  20009C                     	org	2097308
  6813  20009C  FFFF               	dw	65535
  6814                           
  6815                           ;Config register IDLOC79 @ 0x20009E
  6816                           ;	unspecified, using default values
  6817  20009E                     	org	2097310
  6818  20009E  FFFF               	dw	65535
  6819                           
  6820                           ;Config register IDLOC80 @ 0x2000A0
  6821                           ;	unspecified, using default values
  6822  2000A0                     	org	2097312
  6823  2000A0  FFFF               	dw	65535
  6824                           
  6825                           ;Config register IDLOC81 @ 0x2000A2
  6826                           ;	unspecified, using default values
  6827  2000A2                     	org	2097314
  6828  2000A2  FFFF               	dw	65535
  6829                           
  6830                           ;Config register IDLOC82 @ 0x2000A4
  6831                           ;	unspecified, using default values
  6832  2000A4                     	org	2097316
  6833  2000A4  FFFF               	dw	65535
  6834                           
  6835                           ;Config register IDLOC83 @ 0x2000A6
  6836                           ;	unspecified, using default values
  6837  2000A6                     	org	2097318
  6838  2000A6  FFFF               	dw	65535
  6839                           
  6840                           ;Config register IDLOC84 @ 0x2000A8
  6841                           ;	unspecified, using default values
  6842  2000A8                     	org	2097320
  6843  2000A8  FFFF               	dw	65535
  6844                           
  6845                           ;Config register IDLOC85 @ 0x2000AA
  6846                           ;	unspecified, using default values
  6847  2000AA                     	org	2097322
  6848  2000AA  FFFF               	dw	65535
  6849                           
  6850                           ;Config register IDLOC86 @ 0x2000AC
  6851                           ;	unspecified, using default values
  6852  2000AC                     	org	2097324
  6853  2000AC  FFFF               	dw	65535
  6854                           
  6855                           ;Config register IDLOC87 @ 0x2000AE
  6856                           ;	unspecified, using default values
  6857  2000AE                     	org	2097326
  6858  2000AE  FFFF               	dw	65535
  6859                           
  6860                           ;Config register IDLOC88 @ 0x2000B0
  6861                           ;	unspecified, using default values
  6862  2000B0                     	org	2097328
  6863  2000B0  FFFF               	dw	65535
  6864                           
  6865                           ;Config register IDLOC89 @ 0x2000B2
  6866                           ;	unspecified, using default values
  6867  2000B2                     	org	2097330
  6868  2000B2  FFFF               	dw	65535
  6869                           
  6870                           ;Config register IDLOC90 @ 0x2000B4
  6871                           ;	unspecified, using default values
  6872  2000B4                     	org	2097332
  6873  2000B4  FFFF               	dw	65535
  6874                           
  6875                           ;Config register IDLOC91 @ 0x2000B6
  6876                           ;	unspecified, using default values
  6877  2000B6                     	org	2097334
  6878  2000B6  FFFF               	dw	65535
  6879                           
  6880                           ;Config register IDLOC92 @ 0x2000B8
  6881                           ;	unspecified, using default values
  6882  2000B8                     	org	2097336
  6883  2000B8  FFFF               	dw	65535
  6884                           
  6885                           ;Config register IDLOC93 @ 0x2000BA
  6886                           ;	unspecified, using default values
  6887  2000BA                     	org	2097338
  6888  2000BA  FFFF               	dw	65535
  6889                           
  6890                           ;Config register IDLOC94 @ 0x2000BC
  6891                           ;	unspecified, using default values
  6892  2000BC                     	org	2097340
  6893  2000BC  FFFF               	dw	65535
  6894                           
  6895                           ;Config register IDLOC95 @ 0x2000BE
  6896                           ;	unspecified, using default values
  6897  2000BE                     	org	2097342
  6898  2000BE  FFFF               	dw	65535
  6899                           
  6900                           ;Config register IDLOC96 @ 0x2000C0
  6901                           ;	unspecified, using default values
  6902  2000C0                     	org	2097344
  6903  2000C0  FFFF               	dw	65535
  6904                           
  6905                           ;Config register IDLOC97 @ 0x2000C2
  6906                           ;	unspecified, using default values
  6907  2000C2                     	org	2097346
  6908  2000C2  FFFF               	dw	65535
  6909                           
  6910                           ;Config register IDLOC98 @ 0x2000C4
  6911                           ;	unspecified, using default values
  6912  2000C4                     	org	2097348
  6913  2000C4  FFFF               	dw	65535
  6914                           
  6915                           ;Config register IDLOC99 @ 0x2000C6
  6916                           ;	unspecified, using default values
  6917  2000C6                     	org	2097350
  6918  2000C6  FFFF               	dw	65535
  6919                           
  6920                           ;Config register IDLOC100 @ 0x2000C8
  6921                           ;	unspecified, using default values
  6922  2000C8                     	org	2097352
  6923  2000C8  FFFF               	dw	65535
  6924                           
  6925                           ;Config register IDLOC101 @ 0x2000CA
  6926                           ;	unspecified, using default values
  6927  2000CA                     	org	2097354
  6928  2000CA  FFFF               	dw	65535
  6929                           
  6930                           ;Config register IDLOC102 @ 0x2000CC
  6931                           ;	unspecified, using default values
  6932  2000CC                     	org	2097356
  6933  2000CC  FFFF               	dw	65535
  6934                           
  6935                           ;Config register IDLOC103 @ 0x2000CE
  6936                           ;	unspecified, using default values
  6937  2000CE                     	org	2097358
  6938  2000CE  FFFF               	dw	65535
  6939                           
  6940                           ;Config register IDLOC104 @ 0x2000D0
  6941                           ;	unspecified, using default values
  6942  2000D0                     	org	2097360
  6943  2000D0  FFFF               	dw	65535
  6944                           
  6945                           ;Config register IDLOC105 @ 0x2000D2
  6946                           ;	unspecified, using default values
  6947  2000D2                     	org	2097362
  6948  2000D2  FFFF               	dw	65535
  6949                           
  6950                           ;Config register IDLOC106 @ 0x2000D4
  6951                           ;	unspecified, using default values
  6952  2000D4                     	org	2097364
  6953  2000D4  FFFF               	dw	65535
  6954                           
  6955                           ;Config register IDLOC107 @ 0x2000D6
  6956                           ;	unspecified, using default values
  6957  2000D6                     	org	2097366
  6958  2000D6  FFFF               	dw	65535
  6959                           
  6960                           ;Config register IDLOC108 @ 0x2000D8
  6961                           ;	unspecified, using default values
  6962  2000D8                     	org	2097368
  6963  2000D8  FFFF               	dw	65535
  6964                           
  6965                           ;Config register IDLOC109 @ 0x2000DA
  6966                           ;	unspecified, using default values
  6967  2000DA                     	org	2097370
  6968  2000DA  FFFF               	dw	65535
  6969                           
  6970                           ;Config register IDLOC110 @ 0x2000DC
  6971                           ;	unspecified, using default values
  6972  2000DC                     	org	2097372
  6973  2000DC  FFFF               	dw	65535
  6974                           
  6975                           ;Config register IDLOC111 @ 0x2000DE
  6976                           ;	unspecified, using default values
  6977  2000DE                     	org	2097374
  6978  2000DE  FFFF               	dw	65535
  6979                           
  6980                           ;Config register IDLOC112 @ 0x2000E0
  6981                           ;	unspecified, using default values
  6982  2000E0                     	org	2097376
  6983  2000E0  FFFF               	dw	65535
  6984                           
  6985                           ;Config register IDLOC113 @ 0x2000E2
  6986                           ;	unspecified, using default values
  6987  2000E2                     	org	2097378
  6988  2000E2  FFFF               	dw	65535
  6989                           
  6990                           ;Config register IDLOC114 @ 0x2000E4
  6991                           ;	unspecified, using default values
  6992  2000E4                     	org	2097380
  6993  2000E4  FFFF               	dw	65535
  6994                           
  6995                           ;Config register IDLOC115 @ 0x2000E6
  6996                           ;	unspecified, using default values
  6997  2000E6                     	org	2097382
  6998  2000E6  FFFF               	dw	65535
  6999                           
  7000                           ;Config register IDLOC116 @ 0x2000E8
  7001                           ;	unspecified, using default values
  7002  2000E8                     	org	2097384
  7003  2000E8  FFFF               	dw	65535
  7004                           
  7005                           ;Config register IDLOC117 @ 0x2000EA
  7006                           ;	unspecified, using default values
  7007  2000EA                     	org	2097386
  7008  2000EA  FFFF               	dw	65535
  7009                           
  7010                           ;Config register IDLOC118 @ 0x2000EC
  7011                           ;	unspecified, using default values
  7012  2000EC                     	org	2097388
  7013  2000EC  FFFF               	dw	65535
  7014                           
  7015                           ;Config register IDLOC119 @ 0x2000EE
  7016                           ;	unspecified, using default values
  7017  2000EE                     	org	2097390
  7018  2000EE  FFFF               	dw	65535
  7019                           
  7020                           ;Config register IDLOC120 @ 0x2000F0
  7021                           ;	unspecified, using default values
  7022  2000F0                     	org	2097392
  7023  2000F0  FFFF               	dw	65535
  7024                           
  7025                           ;Config register IDLOC121 @ 0x2000F2
  7026                           ;	unspecified, using default values
  7027  2000F2                     	org	2097394
  7028  2000F2  FFFF               	dw	65535
  7029                           
  7030                           ;Config register IDLOC122 @ 0x2000F4
  7031                           ;	unspecified, using default values
  7032  2000F4                     	org	2097396
  7033  2000F4  FFFF               	dw	65535
  7034                           
  7035                           ;Config register IDLOC123 @ 0x2000F6
  7036                           ;	unspecified, using default values
  7037  2000F6                     	org	2097398
  7038  2000F6  FFFF               	dw	65535
  7039                           
  7040                           ;Config register IDLOC124 @ 0x2000F8
  7041                           ;	unspecified, using default values
  7042  2000F8                     	org	2097400
  7043  2000F8  FFFF               	dw	65535
  7044                           
  7045                           ;Config register IDLOC125 @ 0x2000FA
  7046                           ;	unspecified, using default values
  7047  2000FA                     	org	2097402
  7048  2000FA  FFFF               	dw	65535
  7049                           
  7050                           ;Config register IDLOC126 @ 0x2000FC
  7051                           ;	unspecified, using default values
  7052  2000FC                     	org	2097404
  7053  2000FC  FFFF               	dw	65535
  7054                           
  7055                           ;Config register IDLOC127 @ 0x2000FE
  7056                           ;	unspecified, using default values
  7057  2000FE                     	org	2097406
  7058  2000FE  FFFF               	dw	65535
  7059                           
  7060                           	psect	config
  7061                           
  7062                           ;Config register CONFIG1L @ 0x300000
  7063                           ;	External Oscillator mode Selection bits
  7064                           ;	FEXTOSC = OFF, Oscillator not enabled
  7065                           ;	Power-up default value for COSC bits
  7066                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  7067  300000                     	org	3145728
  7068  300000  EC                 	db	236
  7069                           
  7070                           ;Config register CONFIG1H @ 0x300001
  7071                           ;	Clock Out Enable bit
  7072                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7073                           ;	Clock Switch Enable bit
  7074                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7075                           ;	Fail-Safe Clock Monitor Enable bit
  7076                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7077  300001                     	org	3145729
  7078  300001  FF                 	db	255
  7079                           
  7080                           ;Config register CONFIG2L @ 0x300002
  7081                           ;	Master Clear Enable bit
  7082                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  7083                           ;	Power-up Timer Enable bit
  7084                           ;	PWRTE = OFF, Power up timer disabled
  7085                           ;	Low-power BOR enable bit
  7086                           ;	LPBOREN = OFF, Low power BOR is disabled
  7087                           ;	Brown-out Reset Enable bits
  7088                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7089  300002                     	org	3145730
  7090  300002  FF                 	db	255
  7091                           
  7092                           ;Config register CONFIG2H @ 0x300003
  7093                           ;	Brown Out Reset Voltage selection bits
  7094                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  7095                           ;	ZCD Disable bit
  7096                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7097                           ;	PPSLOCK bit One-Way Set Enable bit
  7098                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7099                           ;	Stack Full/Underflow Reset Enable bit
  7100                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7101                           ;	Extended Instruction Set Enable bit
  7102                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7103  300003                     	org	3145731
  7104  300003  FF                 	db	255
  7105                           
  7106                           ;Config register CONFIG3L @ 0x300004
  7107                           ;	WDT Period Select bits
  7108                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7109                           ;	WDT operating mode
  7110                           ;	WDTE = OFF, WDT Disabled
  7111  300004                     	org	3145732
  7112  300004  9F                 	db	159
  7113                           
  7114                           ;Config register CONFIG3H @ 0x300005
  7115                           ;	WDT Window Select bits
  7116                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7117                           ;	WDT input clock selector
  7118                           ;	WDTCCS = SC, Software Control
  7119  300005                     	org	3145733
  7120  300005  FF                 	db	255
  7121                           
  7122                           ;Config register CONFIG4L @ 0x300006
  7123                           ;	Write Protection Block 0
  7124                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7125                           ;	Write Protection Block 1
  7126                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7127                           ;	Write Protection Block 2
  7128                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7129                           ;	Write Protection Block 3
  7130                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7131                           ;	Write Protection Block 4
  7132                           ;	WRT4 = 0x1, unprogrammed default
  7133                           ;	Write Protection Block 5
  7134                           ;	WRT5 = 0x1, unprogrammed default
  7135                           ;	Write Protection Block 6
  7136                           ;	WRT6 = 0x1, unprogrammed default
  7137                           ;	Write Protection Block 7
  7138                           ;	WRT7 = 0x1, unprogrammed default
  7139  300006                     	org	3145734
  7140  300006  FF                 	db	255
  7141                           
  7142                           ;Config register CONFIG4H @ 0x300007
  7143                           ;	Configuration Register Write Protection bit
  7144                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  7145                           ;	Boot Block Write Protection bit
  7146                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7147                           ;	Data EEPROM Write Protection bit
  7148                           ;	WRTD = OFF, Data EEPROM not write-protected
  7149                           ;	Scanner Enable bit
  7150                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  7151                           ;	Low Voltage Programming Enable bit
  7152                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7153  300007                     	org	3145735
  7154  300007  FF                 	db	255
  7155                           
  7156                           ;Config register CONFIG5L @ 0x300008
  7157                           ;	UserNVM Program Memory Code Protection bit
  7158                           ;	CP = OFF, UserNVM code protection disabled
  7159                           ;	DataNVM Memory Code Protection bit
  7160                           ;	CPD = OFF, DataNVM code protection disabled
  7161  300008                     	org	3145736
  7162  300008  FF                 	db	255
  7163                           
  7164                           ;Config register CONFIG5H @ 0x300009
  7165                           ;	unspecified, using default values
  7166  300009                     	org	3145737
  7167  300009  FF                 	db	255
  7168                           
  7169                           ;Config register CONFIG6L @ 0x30000A
  7170                           ;	Table Read Protection Block 0
  7171                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7172                           ;	Table Read Protection Block 1
  7173                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7174                           ;	Table Read Protection Block 2
  7175                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7176                           ;	Table Read Protection Block 3
  7177                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7178                           ;	Table Read Protection Block 4
  7179                           ;	EBTR4 = 0x1, unprogrammed default
  7180                           ;	Table Read Protection Block 5
  7181                           ;	EBTR5 = 0x1, unprogrammed default
  7182                           ;	Table Read Protection Block 6
  7183                           ;	EBTR6 = 0x1, unprogrammed default
  7184                           ;	Table Read Protection Block 7
  7185                           ;	EBTR7 = 0x1, unprogrammed default
  7186  30000A                     	org	3145738
  7187  30000A  FF                 	db	255
  7188                           
  7189                           ;Config register CONFIG6H @ 0x30000B
  7190                           ;	Boot Block Table Read Protection bit
  7191                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7192  30000B                     	org	3145739
  7193  30000B  FF                 	db	255
  7194                           tosu	equ	0xFFF
  7195                           tosh	equ	0xFFE
  7196                           tosl	equ	0xFFD
  7197                           stkptr	equ	0xFFC
  7198                           pclatu	equ	0xFFB
  7199                           pclath	equ	0xFFA
  7200                           pcl	equ	0xFF9
  7201                           tblptru	equ	0xFF8
  7202                           tblptrh	equ	0xFF7
  7203                           tblptrl	equ	0xFF6
  7204                           tablat	equ	0xFF5
  7205                           prodh	equ	0xFF4
  7206                           prodl	equ	0xFF3
  7207                           indf0	equ	0xFEF
  7208                           postinc0	equ	0xFEE
  7209                           postdec0	equ	0xFED
  7210                           preinc0	equ	0xFEC
  7211                           plusw0	equ	0xFEB
  7212                           fsr0h	equ	0xFEA
  7213                           fsr0l	equ	0xFE9
  7214                           wreg	equ	0xFE8
  7215                           indf1	equ	0xFE7
  7216                           postinc1	equ	0xFE6
  7217                           postdec1	equ	0xFE5
  7218                           preinc1	equ	0xFE4
  7219                           plusw1	equ	0xFE3
  7220                           fsr1h	equ	0xFE2
  7221                           fsr1l	equ	0xFE1
  7222                           bsr	equ	0xFE0
  7223                           indf2	equ	0xFDF
  7224                           postinc2	equ	0xFDE
  7225                           postdec2	equ	0xFDD
  7226                           preinc2	equ	0xFDC
  7227                           plusw2	equ	0xFDB
  7228                           fsr2h	equ	0xFDA
  7229                           fsr2l	equ	0xFD9
  7230                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    38
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     31      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    S744$3$0	PTR void  size(2) Largest target is 0

    S744$4$0	PTR void  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 

    S744$5$0	PTR void  size(2) Largest target is 0

    Absolute function$0	PTR FTN()void  size(3) Largest target is 0

    spi1_interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> GDapplication@lcdDataBuffer(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[9]), STR_4(CODE[11]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> GDapplication@lcdDataBuffer(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1297_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> GDapplication@lcdDataBuffer(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> GDapplication@lcdDataBuffer(BANK0[8]), 

    User_lcd_writeString@string	PTR unsigned char  size(2) Largest target is 17
		 -> GDapplication@lcdDataBuffer(BANK0[8]), STR_2(CODE[17]), STR_1(CODE[17]), 

    S744$spiISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    S744$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> Absolute function(), 

    S744$readByte	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ReadByte(), 

    S744$writeByte	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_WriteByte(), 

    S744$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S744$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S744$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S744$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S744$spiOpen	PTR FTN()_Bool  size(3) Largest target is 1
		 -> LCD_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(3) Largest target is 1
		 -> LCD_open(), 

    S744$spiClose	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 3
		 -> expander_sendByte@cmd(COMRAM[3]), digipot_setWiper@cmd(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_GDapplication
    _lcd_setup->_lcd_sendByte
    _lcd_sendNibble->_expander_setOutput
    _expander_setup->_expander_sendByte
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _ApplicationInit->_User_lcd_writeString
    _lcd_setContrast->_digipot_setWiper
    _digipot_setWiper->_SPI1_WriteBlock
    _lcd_clearDisplay->_lcd_sendByte
    _User_lcd_writeString->_lcd_setAddr
    _lcd_writeChar->_lcd_sendByte
    _lcd_setAddr->_lcd_sendByte
    _lcd_returnHome->_lcd_sendByte
    _lcd_sendByte->_expander_setOutput
    _expander_setOutput->_expander_sendByte
    _expander_sendByte->_SPI1_WriteBlock
    _LCD_open->_SPI1_Open
    _SPI1_WriteBlock->_SPI1_ExchangeByte

Critical Paths under _main in BANK0

    _main->_GDapplication
    _GDapplication->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   53170
                    _ApplicationInit
                      _GDapplication
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   14723
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _CLC5_Initialize
                    _CLC6_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                          _lcd_setup
 ---------------------------------------------------------------------------------
 (2) _lcd_setup                                            0     0      0   14723
                 _DELAY_milliseconds
                 _expander_setOutput
                     _expander_setup
                   _lcd_clearDisplay
                     _lcd_returnHome
                       _lcd_sendByte
                     _lcd_sendNibble
 ---------------------------------------------------------------------------------
 (3) _lcd_sendNibble                                       4     3      1    2219
                                             13 COMRAM     4     3      1
                 _DELAY_milliseconds
                 _expander_setOutput
 ---------------------------------------------------------------------------------
 (3) _expander_setup                                       0     0      0     772
                  _expander_sendByte
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GDapplication                                       12    12      0   23978
                                             94 COMRAM     1     1      0
                                             20 BANK0     11    11      0
               _User_lcd_writeString
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   11923
                                              0 BANK0     20    10     10
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11264
                                             86 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   10888
                                             63 COMRAM    23    17      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5270
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1645
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1442
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     601
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ApplicationInit                                      0     0      0   14469
               _User_lcd_writeString
                   _lcd_clearDisplay
                    _lcd_setContrast
 ---------------------------------------------------------------------------------
 (2) _lcd_setContrast                                      1     1      0     596
                                             10 COMRAM     1     1      0
                   _digipot_setWiper
 ---------------------------------------------------------------------------------
 (3) _digipot_setWiper                                     3     3      0     574
                                              7 COMRAM     3     3      0
                         _SPI1_Close
                    _SPI1_WriteBlock
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (3) _lcd_clearDisplay                                     0     0      0    3646
                 _DELAY_milliseconds
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (2) _User_lcd_writeString                                 7     3      4   10227
                                             22 COMRAM     7     3      4
                     _lcd_returnHome
                        _lcd_setAddr
                      _lcd_writeChar
 ---------------------------------------------------------------------------------
 (3) _lcd_writeChar                                        1     1      0    2658
                                             20 COMRAM     1     1      0
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_setAddr                                          2     1      1    2832
                                             20 COMRAM     2     1      1
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_returnHome                                       0     0      0    3646
                 _DELAY_milliseconds
                       _lcd_sendByte
 ---------------------------------------------------------------------------------
 (3) _lcd_sendByte                                         7     6      1    2636
                                             13 COMRAM     7     6      1
                 _DELAY_milliseconds
                 _expander_setOutput
 ---------------------------------------------------------------------------------
 (4) _expander_setOutput                                   1     1      0     794
                                             12 COMRAM     1     1      0
                  _expander_sendByte
 ---------------------------------------------------------------------------------
 (5) _expander_sendByte                                    5     4      1     772
                                              7 COMRAM     5     4      1
                         _SPI1_Close
                    _SPI1_WriteBlock
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (6) _spi_master_open                                      3     3      0     110
                                              2 COMRAM     3     3      0
                           _LCD_open
 ---------------------------------------------------------------------------------
 (7) _LCD_open                                             0     0      0      88
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (8) _SPI1_Open                                            2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _SPI1_WriteBlock                                      6     2      4     394
                                              1 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SPI1_ExchangeByte                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DELAY_milliseconds                                   2     0      2    1010
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ApplicationInit
     _User_lcd_writeString
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_setAddr
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_writeChar
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
     _lcd_clearDisplay
       _DELAY_milliseconds
       _lcd_sendByte
         _DELAY_milliseconds
         _expander_setOutput
           _expander_sendByte
             _SPI1_Close
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
             _spi_master_open
               _LCD_open
                 _SPI1_Open
     _lcd_setContrast
       _digipot_setWiper
         _SPI1_Close
         _SPI1_WriteBlock
           _SPI1_ExchangeByte
         _spi_master_open
           _LCD_open
             _SPI1_Open
   _GDapplication
     _User_lcd_writeString
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_setAddr
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_writeChar
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
     ___lwdiv
     ___lwmod
     ___wmul
     _sprintf
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _CLC5_Initialize
     _CLC6_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _lcd_setup
       _DELAY_milliseconds
       _expander_setOutput
         _expander_sendByte
           _SPI1_Close
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _spi_master_open
             _LCD_open
               _SPI1_Open
       _expander_setup
         _expander_sendByte
           _SPI1_Close
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _spi_master_open
             _LCD_open
               _SPI1_Open
       _lcd_clearDisplay
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_returnHome
         _DELAY_milliseconds
         _lcd_sendByte
           _DELAY_milliseconds
           _expander_setOutput
             _expander_sendByte
               _SPI1_Close
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
               _spi_master_open
                 _LCD_open
                   _SPI1_Open
       _lcd_sendByte
         _DELAY_milliseconds
         _expander_setOutput
           _expander_sendByte
             _SPI1_Close
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
             _spi_master_open
               _LCD_open
                 _SPI1_Open
       _lcd_sendNibble
         _DELAY_milliseconds
         _expander_setOutput
           _expander_sendByte
             _SPI1_Close
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
             _spi_master_open
               _LCD_open
                 _SPI1_Open

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E1E      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      52       5       51.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK14           1F      0       0      33        0.0%
BANK14              1F      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1       6        0.0%
DATA                 0      0      B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Oct 15 14:52:56 2020

                   ?_lcd_sendByte 000E                 _SPI1_ExchangeByte 2730  
              _SPI1_ExchangeBlock 000000                                l39 25F6  
                              l67 2622                                l95 264E  
              ?_SPI1_ExchangeByte 0001                   ?_lcd_sendNibble 000E  
        __size_of_CLC6_Initialize 002C               ___wmul@multiplicand 0003  
           __end_of_GDapplication 1C36                               l123 267A  
                             l310 2746                               l302 1F54  
                             l311 274A                               l305 280C  
                             l402 256A                               l308 2736  
                             l172 2762                               l421 26A2  
                             l405 27F6                               l326 2496  
                             l175 272E                               l408 27EA  
                             l264 2098                               l169 26C8  
                             l370 2792                               l364 23D8  
                             l453 2808                               l373 277A  
                             l349 25CA                               l622 1AE0  
                             l367 21B2                               l391 1FFA  
                             l376 27A8                               l609 197C  
                             l458 259C                               l298 2712  
                             l379 27DC                               l492 212E  
                             l388 2800                               l485 1C20  
                             l486 1C34                               l479 2538  
                             l495 26EE                               l993 2226  
                             l986 221E                               l996 22E8  
                             u920 1EAE                               u921 1EAA  
                             u930 2746                               u931 2742  
                             u940 1D20                               u941 1D1C  
                             u950 1D32                               u951 1D2E  
                             u960 1D5A                               u961 1D56  
                             u970 1D90                               u971 1D8C  
                             u980 2496                               u981 2492  
                             u990 241C                               u991 2418  
      __end_of_DELAY_milliseconds 26A4                               _abs 241E  
                ?_lcd_setContrast 0001               lcd_sendNibble@RSbit 000E  
                             _pad 1DD8           __size_of_PMD_Initialize 001C  
             ??_SPI1_ExchangeByte 0001                 ??_CLC2_Initialize 0001  
                             wreg 000FE8                              l1003 22F0  
                            ?_abs 0013                              l1220 1C9C  
                            l1204 1E1E                              l1223 1CDE  
                            l1207 1E60                              l1231 1410  
                            l1225 1D0C                              l1209 1E9C  
                            l1233 1418                              l1323 17EC  
                            l1251 1650                              l2221 1F16  
                            l2213 1EA0                              l2301 2548  
                            l1173 2342                              l1326 17F4  
                            l2223 1F4A                              l2215 1EAE  
                            l2303 254C                              l2311 26CA  
                            l1352 1DD6                              l1360 241C  
                            l2233 2732                              l2225 1F4C  
                            l2217 1EEE                              l2305 2550  
                            l2313 26E6                              l1329 24CE  
                            l1337 2394                              l2241 1D20  
                            l2321 1808                              l2401 1DFC  
                            l1265 1068                              l2219 1EF2  
                            l2235 2802                              l2307 2564  
                            l1363 280E                              l2243 1D32  
                            l2331 185E                              l2323 1828  
                            l2411 1E42                              l2403 1E0A  
                            l1292 2454                              l2253 280A  
                            l2261 247C                              l2229 1F52  
                            l2309 2566                              l2245 1D3C  
                            l2341 18B2                              l2333 186A  
                            l2325 182C                              l2317 17F6  
                            l2421 2438                              l2413 1E70  
                            l2405 1E16                              l2501 145C  
                            l1278 136E                              l2255 245E  
                            l2271 257A                              l2263 256E  
                            l2423 2498                              l2431 235C  
                            l2247 1D5A                              l2239 1D0E  
                            l2351 1926                              l2343 18C4  
                            l2335 1888                              l2327 183A  
                            l2319 17FA                              l1295 245C  
                            l2415 1E84                              l2407 1E2A  
                            l2511 1568                              l2503 14DE  
                            l1287 2284                              l1288 228C  
                            l2441 267C                              l2257 246A  
                            l2265 2572                              l2433 238A  
                            l2249 1D90                              l2345 18F2  
                            l2337 1890                              l2353 192C  
                            l2329 185A                              l2361 197E  
                            l2281 23F8                              l1369 2504  
                            l2409 1E3E                              l2521 15DC  
                            l2513 1586                              l2505 14E4  
                            l2601 0F9A                              l2443 2680  
                            l2259 2478                              l2435 238E  
                            l2427 2344                              l2451 1C56  
                            l2355 193C                              l2347 1912  
                            l2339 18A4                              l2371 19C2  
                            l2363 1982                              l2419 241E  
                            l2283 23FC                              l2291 24F8  
                            l2531 1618                              l2523 15EC  
                            l2515 15A0                              l2507 14EA  
                            l2611 0FD2                              l2603 0FAC  
                            l2445 2688                              l2429 2348  
                            l2541 166A                              l2461 1C94  
                            l2453 1C62                              l2357 195C  
                            l2349 1914                              l2381 1A2A  
                            l2373 19E2                              l2365 1990  
                            l2277 23DA                              l2285 24D0  
                            l2525 15F2                              l2533 1628  
                            l2517 15BA                              l2509 154E  
                            l2605 0FB0                              l2295 253C  
                            l2439 27E0                              l2711 25B0  
                            l2703 25A0                              l2543 166E  
                            l2471 1D00                              l2463 1CA8  
                            l2455 1C70                              l2447 1C36  
                            l2391 1AA0                              l2383 1A58  
                            l2375 1A00                              l2367 19B0  
                            l2279 23E6                              l2287 24DC  
                            l2527 1604                              l2519 15CA  
                            l2631 0FFE                              l2623 0FEA  
                            l2615 0FDA                              l2607 0FBC  
                            l1911 2624                              l2297 2542  
                            l2713 25C4                              l2705 25A6  
                            l2561 1730                              l2553 16D2  
                            l2545 168E                              l2537 1652  
                            l2465 1CBC                              l2457 1C82  
                            l2449 1C4A                              l2393 1AC0  
                            l2385 1A78                              l2377 1A08  
                            l2369 19B4                              l2289 24E0  
                            l2529 1610                              l2481 13D8  
                            l2641 10D8                              l2609 0FC0  
                            l2633 1056                              l2801 22F2  
                            l1913 2650                              l1921 2710  
                            l2721 23B2                              l2299 2544  
                            l2731 2786                              l2715 25C6  
                            l2707 25A8                              l2571 17BE  
                            l2555 16E8                              l2547 16C8  
                            l2539 1666                              l2467 1CC0  
                            l2387 1A8A                              l2379 1A1C  
                            l2491 1432                              l2483 13E8  
                            l2475 1370                              l2643 10E6  
                            l2635 1078                              l2627 0FF2  
                            l2619 0FE2                              l2803 2304  
                            l1907 25CC                              l1931 2060  
                            l1923 1FFC                              l1915 2714  
                            l2723 23BA                              l2581 2166  
                            l2733 2764                              l2709 25AC  
                            l2821 21DE                              l2813 21B4  
                            l2573 17D0                              l2565 176A  
                            l2557 16F0                              l2549 16CC  
                            l2469 1CEE                              l2389 1A90  
                            l2397 1DD8                              l2493 1440  
                            l2485 13EA                              l2477 1390  
                            l2653 116C                              l2645 10F4  
                            l2637 107A                              l2805 230C  
                            l1909 25F8                              l1941 206E  
                            l1933 2062                              l1925 2018  
                            l1917 26F0                              l2741 27EC  
                            l2725 23C6                              l2717 2398  
                            l2591 2192                              l2583 216C  
                            l2735 276E                              l2831 2212  
                            l2823 21EC                              l2815 21BC  
                            l2559 16F8                              l2399 1DE8  
                            l2495 1446                              l2487 1404  
                            l2479 13B8                              l2663 11F4  
                            l2647 1114                              l2655 117E  
                            l2639 10A2                              l2743 2228  
                            l2807 2314                              l1943 2070  
                            l1935 2064                              l1927 202C  
                            l1919 270E                              l2727 23CC  
                            l2719 23AC                              l2751 1F56  
                            l2593 219E                              l2585 2178  
                            l2729 277C                              l2737 2796  
                            l2833 2218                              l2825 21F2  
                            l2817 21CE                              l2841 22B0  
                            l2569 17AC                              l2497 144E  
                            l2489 1420                              l2673 12C4  
                            l2665 121C                              l2657 11A6  
                            l2649 1122                              l2745 2230  
                            l2809 2330                              l1945 274C  
                            l1937 206A                              l1929 205E  
                            l2761 1F92                              l2753 1F5C  
                            l2595 21A6                              l2587 2180  
                            l2579 2132                              l2739 27D2  
                            l2827 2208                              l2819 21D6  
                            l2843 22BE                              l2835 228E  
                            l2499 1456                              l2691 135C  
                            l2675 12EC                              l2683 131A  
                            l2667 1244                              l2659 11D8  
                            l2747 223E                              l1939 206C  
                            l2771 1FD2                              l2763 1FA8  
                            l2755 1F66                              l2851 26A4  
                            l2589 218C                              l2781 209A  
                            l2829 2210                              l2845 22D4  
                            l2837 22A0                              l2685 1328  
                            l2677 12FA                              l2669 128C  
                            l2597 0F64                              l2749 2264  
                            l2861 1AE2                              l2773 1FDC  
                            l2765 1FB4                              l2757 1F72  
                            l2853 26C4                              ?_pad 0011  
                            l2791 20A8                              l2783 20A4  
                            l2855 2506                              l2847 22DC  
                            l2839 22A8                              l2679 130E  
                            l2599 0F8C                              l2871 1B08  
                            l2863 1AEE                              l2775 1FF2  
                            l2767 1FBE                              l2759 1F88  
                            l2793 20E6                              l2785 20A4  
                            l2857 2510                              l2849 22E2  
                            l2689 1334                              l2881 1BE4  
                            l2873 1B2A                              l2865 1AEE  
                            l2777 1FF6                              l2769 1FC8  
                            l2795 2118                              l2779 27FA  
                            l2859 2524                              l2875 1B4E  
                            l2867 1AEE                              l2883 27AA  
                            l2797 211A                              l2877 1B62  
                            l2869 1AF2                              l2885 27AE  
                            l2799 212A                              l2991 171A  
                            l2879 1B88                              l2887 27B2  
                            l2993 258E                              l2989 1028  
                            STR_1 0F27                              STR_2 0F38  
                            STR_3 0F5D                              STR_4 0F49  
                            STR_5 0F54                              u1000 24F8  
                            u1001 24F4                              u1010 1808  
                            u1011 1804                              u1020 183A  
                            u1100 1A00                              u1021 1836  
                            u1101 19FC                              u1110 1A2A  
                            u1031 1864                              u1111 1A26  
                            u1200 24CA                              u1040 1888  
                            u1120 1A58                              u1041 1884  
                            u1121 1A54                              u1210 235C  
                            u1050 18B2                              u1130 1AA0  
                            u1211 2358                              u1051 18AE  
                            u1131 1A9C                              u1220 238A  
                            u1060 18F2                              u1140 1DE8  
                            u1300 13A2                              u1221 2386  
                            u1061 18EE                              u1141 1DE4  
                            u1230 26A2                              u1070 193C  
                            u1150 1E0A                              u1310 13B8  
                            u1231 269E                              u1071 1938  
                            u1151 1E06                              u1311 13B4  
                            u1240 1C4A                              u1080 1990  
                            u1160 1E60                              u1400 15CA  
                            u1320 13E8                              u1241 1C46  
                            u1081 198C                              u1161 1E5C  
                            u1401 15C6                              u1321 13E4  
                            u1250 1C70                              u1090 19C2  
                            u1170 1E70                              u1410 15DC  
                            u1330 1404                              u1251 1C6C  
                            u1091 19BE                              u1171 1E6C  
                            u1411 15D8                              u1331 1400  
                            u1500 17D0                              u1260 1C90  
                            u1180 2438                              u1420 15EC  
                            u1340 1432                              u1501 17CC  
                            u1261 1C8C                              u1181 2434  
                            u1421 15E8                              u1341 142E  
                            _LATA 000F82                              u1190 24C8  
                            u1270 1CDE                              u1430 1604  
                            u1350 1440                              u1510 0F8C  
                            _LATB 000F83                              u1191 24C2  
                            u1271 1CDA                              u1431 1600  
                            u1351 143C                              u1511 0F88  
                            _LATC 000F84                              u1440 168E  
                            u1280 1CEE                              u1360 1568  
                            u1600 121C                              u1520 1068  
                            _LATD 000F85                              u1441 168A  
                            u1281 1CEA                              u1361 1564  
                            u1601 1218                              u1521 1064  
                            _LATE 000F86                              u1450 16C8  
                            u1370 1586                              u1290 13A0  
                            u1610 1244                              u1530 1078  
                            u1451 16C4                              u1371 1582  
                            u1291 139A                              u1611 1240  
                            u1531 1074                              u1700 2208  
                            u1460 16E4                              u1380 15A0  
                            u1620 12EC                              u1540 10A2  
                            u1701 2204                              u1461 16E0  
                            u1381 159C                              u1621 12E8  
                            u1541 109E                              u1710 22A0  
                            u1470 17A6                              u1390 15BA  
                            u1550 10E6                              u1630 2284  
                            u1711 229C                              u1471 17A0  
                            u1391 15B6                              u1551 10E2  
                            u1631 2280                              u1640 20D6  
                            u1720 22BE                              u1480 17A8  
                            u1560 1166                              u1721 22BA  
                            u1561 1160                              u1650 20E6  
                            u1730 22D4                              u1490 17BE  
                            u1570 1168                              u1651 20E2  
                            u1731 22D0                              u1491 17BA  
                            u1660 2114                              u1580 117E  
                            u1581 117A                              u1741 1AE8  
                            u1670 212A                              u1590 11A6  
                            u1750 1B88                              u1671 2126  
                            u1647 20CC                              u1591 11A2  
                            u1751 1B84                              u1680 21CE  
                            u1681 21CA                              u1690 21EC  
                            u1667 210A                              u1691 21E8  
                            _PMD0 000EDC                              u1797 2682  
                            _PMD1 000EDD                              _PMD2 000EDE  
                            _PMD3 000EDF                              _PMD4 000EE0  
                            _PMD5 000EE1                              _WPUA 000F0B  
                            _WPUB 000F13                              _WPUC 000F1B  
                            _WPUD 000F20                              _WPUE 000F28  
                            abs@a 0013                              _dbuf 0073  
                            _atoi 1652                              _ctoa 1C36  
                            _main 27AA                              _dtoa 1370  
                 ?_lcd_returnHome 0001                              _prec 006F  
                            _nout 006B                              pad@i 0018  
                            pad@p 0015                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                  ?_lcd_writeChar 0001                              prodh 000FF4  
                            prodl 000FF3                              start 0000  
       __end_of_SPI1_ExchangeByte 274C                    ??_lcd_sendByte 000F  
                    ___param_bank 000000              lcd_sendNibble@packet 0011  
            lcd_sendNibble@nibble 0010                             ??_abs 0015  
                           ??_pad 0017              _User_lcd_writeString 209A  
  __size_of_OSCILLATOR_Initialize 0018                  _lcd_clearDisplay 2764  
         __end_of_ApplicationInit 253A     __end_of_OSCILLATOR_Initialize 2764  
                __end_of_LCD_open 280A                       ?_SPI1_Close 0001  
                 __end_of___aodiv 197E                             ?_atoi 0008  
                           ?_ctoa 000A                             ?_main 0001  
                           ?_dtoa 001C                   __end_of___aomod 1AE2  
SPI1_Open@spi1UniqueConfiguration 0002                   __end_of___lwdiv 2228  
                 __end_of___lwmod 22F2                             _OSCEN 000ED7  
                    vfpfcnvrt@fmt 0042                             _TRISA 000F87  
                           _TRISB 000F88                             _TRISC 000F89  
                           _TRISD 000F8A                             _TRISE 000F8B  
              __size_of_SPI1_Open 00B8                 _expander_sendByte 253A  
                _digipot_setWiper 259E                             _flags 0071  
                           _fputc 1D0E                             _fputs 23DA  
                 __end_of_isdigit 24D0                ?_expander_sendByte 0008  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 006D  
                           ctoa@c 000C                             _putch 280E  
                           ctoa@l 000E                             ctoa@w 0010  
                           dtoa@d 001E                             dtoa@i 003E  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 2396                             tablat 000FF5  
                           status 000FD8                   __end_of_sprintf 2344  
             ??_expander_sendByte 0009          __size_of_SPI1_Initialize 0024  
           spi_master_open@config 0005                 ??_CLC5_Initialize 0001  
                 __initialization 27BE                      __end_of_atoi 17F6  
                    __end_of_ctoa 1D0E                      __end_of_main 27BE  
                    __end_of_dtoa 1652                  ??_expander_setup 000D  
           ?_User_lcd_writeString 0017                            ??_atoi 000A  
                          ??_ctoa 000D                            ??_main 0060  
                          ??_dtoa 0026                     __activetblptr 000003  
       __end_of_expander_sendByte 256C                 ??_CLC6_Initialize 0001  
            expander_sendByte@cmd 000A                            ?_fputc 0001  
                          ?_fputs 000A                            _ANSELA 000F0C  
                          ?_putch 0001                            _ANSELB 000F14  
                          _ANSELC 000F1C                            _ANSELD 000F21  
                          _ANSELE 000F29                            _RC4PPS 000EF6  
                          _ODCONA 000F0A                            _ODCONB 000F12  
                          _ODCONC 000F1A                            _RC6PPS 000EF8  
                          _ODCOND 000F1F                            _ODCONE 000F27  
                          _INLVLA 000F08                            _INLVLB 000F10  
                          _INLVLC 000F18                            _INLVLD 000F1D  
                          _INLVLE 000F25                   ??_lcd_writeChar 0015  
                          _OSCFRQ 000ED9                     vfpfcnvrt@done 0052  
             __size_of_SPI1_Close 0004        __size_of_SPI1_ExchangeByte 001C  
               __end_of_SPI1_Open 1F56                      vfprintf@cfmt 005D  
                       ??___aodiv 0011                         ??___aomod 0011  
                          ___wmul 26CA                _expander_setOutput 27DE  
                       ??___lwdiv 0005              __size_of_lcd_setAddr 0016  
                       ??___lwmod 0005                            clear_0 27C4  
                ?_ApplicationInit 0001                            pad@buf 0013  
                          ctoa@fp 000A                            dtoa@fp 001C  
                          _strlen 24D0               ?_expander_setOutput 0001  
                          fputc@c 0001                    _PMD_Initialize 2714  
                          fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_isdigit 0003  
                    __mediumconst 0000                         ??_isspace 0003  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8              __end_of_lcd_sendByte 21B4  
                          putch@c 0001                  __end_of_vfprintf 228E  
                 _CLC1_Initialize 2650                         ??_sprintf 005F  
               _SYSTEM_Initialize 26A4                  lcd_sendByte@byte 0012  
                      __accesstop 0060           __end_of__initialization 27CA  
        __size_of_SPI1_WriteBlock 003A                fp__SPI1_WriteBlock 0000  
                  _SPI1_ReadBlock 000000                ?_SYSTEM_Initialize 0001  
            ??_expander_setOutput 000D                         ?_LCD_open 0001  
                   ___rparam_used 000001                  ??_lcd_sendNibble 000F  
            lcd_setAddr@character 0015                    __pcstackCOMRAM 0001  
          ??_User_lcd_writeString 001B               ??_SYSTEM_Initialize 0015  
                 _CLC2_Initialize 2624        User_lcd_writeString@column 001A  
                   __end_of_fputc 1DD8                     __end_of_fputs 241E  
               ??_SPI1_Initialize 0001                     __end_of_putch 2810  
          __end_of_PMD_Initialize 2730             SPI1_ExchangeByte@data 0001  
      User_lcd_writeString@string 0017                    lcd_setAddr@row 0016  
              _spi1_configuration 0F1F        __size_of_expander_sendByte 0032  
              __size_of_lcd_setup 00A6                  ??_lcd_returnHome 0015  
                         ??_fputc 0005         __end_of_SYSTEM_Initialize 26CA  
                         ??_fputs 000E                           ??_putch 0001  
                      __pbssBANK0 0060          __end_of_lcd_clearDisplay 277C  
              _DELAY_milliseconds 267C                        ??_LCD_open 0003  
                  _SPI1_WriteByte 000000          __size_of_spi_master_open 0032  
             ?_DELAY_milliseconds 0001             expander_sendByte@addr 0009  
        __end_of_digipot_setWiper 25CC             expander_sendByte@byte 0008  
                         ?___wmul 0001                           _CLC1CON 000E27  
                         _CLC2CON 000E31                           _CLC5CON 000E4F  
                         _CLC6CON 000E59                           _CLC1POL 000E28  
                         _CLC2POL 000E32                           _CLC5POL 000E50  
                         _CLC6POL 000E5A                           _CLCDATA 000E77  
             GDapplication@F13113 0060                      ??_SPI1_Close 0001  
                 ?_PMD_Initialize 0001                           ?_strlen 0001  
         __end_of_CLC1_Initialize 267C              ??_DELAY_milliseconds 0003  
                         _OSCCON1 000ED3                           _OSCCON3 000ED5  
              __size_of_vfpfcnvrt 040C                           _OSCTUNE 000ED8  
                         _SSP1ADD 000F92                           _SLRCONA 000F09  
                         _SLRCONB 000F11                           _SLRCONC 000F19  
                         _SLRCOND 000F1E                           _SLRCONE 000F26  
                         _SSP1BUF 000F91                   _CLC5_Initialize 25F8  
        __size_of_lcd_setContrast 000A        GDapplication@lcdDataBuffer 00A7  
          __size_of_GDapplication 0154           __end_of_CLC2_Initialize 2650  
             GDapplication@degree 00AF                __end_of_SPI1_Close 280E  
                       _CLCIN0PPS 000E1F                         _CLCIN1PPS 000E20  
                       _CLCIN2PPS 000E21                         _CLCIN3PPS 000E22  
                         __Hparam 0000                           __Lparam 0000  
               ??_SPI1_WriteBlock 0006                           ___aodiv 17F6  
               __end_of_lcd_setup 1FFC                           ___aomod 197E  
                 __size_of___wmul 0026                   _CLC6_Initialize 25CC  
                         ___lwdiv 21B4                           ___lwmod 228E  
                       ?_vfprintf 0057                      __psmallconst 0F00  
                         __pcinit 27BE                           __ramtop 0F00  
          lcd_writeChar@character 0015                           __ptext0 27AA  
                         __ptext1 26A4                           __ptext2 1F56  
                         __ptext3 2396                           __ptext4 27EC  
                         __ptext5 26F0                           __ptext6 2714  
                         __ptext7 1FFC                           __ptext8 274C  
                         __ptext9 25CC          SPI1_WriteBlock@blockSize 0004  
           __size_of_lcd_sendByte 0084                   __size_of_strlen 0036  
           _OSCILLATOR_Initialize 274C                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _isdigit 2498  
            fp__SPI1_ExchangeByte 0000          ??_PIN_MANAGER_Initialize 0001  
                         _isspace 2344                           atoi@neg 000E  
      __size_of_SYSTEM_Initialize 0026                           _sprintf 22F2  
            end_of_initialization 27CA                           fputc@fp 0003  
           User_lcd_writeString@i 001D                           fputs@fp 000C  
               __end_of_spiMaster 0F1F                 __end_of_vfpfcnvrt 1370  
                         postdec2 000FDD                      _lcd_sendByte 2130  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                 ??_spi_master_open 0003  
                      ??_vfprintf 005D                         _SPI1_Open 1E9E  
                         strlen@a 0003                           strlen@s 0001  
                   _GDapplication 1AE2                 lcd_sendByte@RSbit 000E  
                ?_CLC1_Initialize 0001           __end_of_CLC5_Initialize 2624  
                       _TRISCbits 000F89             _spi1_interruptHandler 0068  
                 _SPI1_Initialize 26F0             __end_of_lcd_writeChar 27DE  
                ?_CLC2_Initialize 0001           __end_of_CLC6_Initialize 25F8  
               ??_lcd_setContrast 000B                     ??_lcd_setAddr 0016  
               __size_of_LCD_open 0008                       _CLC1CONbits 000E27  
                     _CLC2CONbits 000E31                        ?_SPI1_Open 0001  
                     vfpfcnvrt@ap 0044                       vfpfcnvrt@fp 0040  
                     vfpfcnvrt@ll 004A                    __end_of___wmul 26F0  
                  ?_GDapplication 0001                       _CLC5CONbits 000E4F  
                     _CLC6CONbits 000E59            ?_OSCILLATOR_Initialize 0001  
                  __end_of_strlen 2506               start_initialization 27BE  
                   fp__SPI1_Close 0000           __size_of_expander_setup 000C  
 __size_of_PIN_MANAGER_Initialize 009E                       __end_of_abs 245E  
                     __end_of_pad 1E9E          __size_of_ApplicationInit 0034  
               ?_lcd_clearDisplay 0001       __size_of_expander_setOutput 000E  
              ??_lcd_clearDisplay 0015                       vfprintf@fmt 0059  
                ??_PMD_Initialize 0001                 ?_digipot_setWiper 0001  
                        ??___wmul 0005     __size_of_User_lcd_writeString 0096  
              ??_digipot_setWiper 0008               __end_of_lcd_setAddr 27AA  
                        ??_strlen 0003                  ?_CLC5_Initialize 0001  
                   _SPI1_ReadByte 000000                     __pcstackBANK0 0093  
                ___aodiv@dividend 0001           __end_of_SPI1_Initialize 2714  
                 _SPI1_WriteBlock 245E                         _atoi$1421 0010  
                       _atoi$1422 0014                         _atoi$1423 0012  
                ?_CLC6_Initialize 0001                  ___lwdiv@dividend 0001  
          _PIN_MANAGER_Initialize 1FFC                         _dtoa$1385 002E  
                        ?___aodiv 0001                          ?___aomod 0001  
                ___aodiv@quotient 0013                   ??_GDapplication 005F  
                        ?___lwdiv 0001                       ??_SPI1_Open 0001  
                        ?___lwmod 0001                         _lcd_setup 1F56  
               __size_of_vfprintf 0066           __size_of_lcd_sendNibble 0044  
                     __smallconst 0F00                          _CLC1GLS0 000E2D  
                        _CLC1GLS1 000E2E                          _CLC1GLS2 000E2F  
                        _CLC1GLS3 000E30                          _CLC2GLS0 000E37  
                        _CLC2GLS1 000E38                          _CLC2GLS2 000E39  
                        _CLC2GLS3 000E3A                          _CLC1SEL0 000E29  
                        _CLC1SEL1 000E2A                          _CLC1SEL2 000E2B  
                        _CLC1SEL3 000E2C                          _CLC5GLS0 000E55  
                        _CLC5GLS1 000E56                          _CLC5GLS2 000E57  
                        _CLC5GLS3 000E58                          _CLC2SEL0 000E33  
                        _CLC2SEL1 000E34                          _CLC2SEL2 000E35  
                        _CLC2SEL3 000E36                          _CLC6GLS0 000E5F  
                        _CLC6GLS1 000E60                          _CLC6GLS2 000E61  
                        _CLC6GLS3 000E62                          ?_isdigit 0001  
                        _CLC5SEL0 000E51                          _CLC5SEL1 000E52  
                        _CLC5SEL2 000E53                          _CLC5SEL3 000E54  
                        _CLC6SEL0 000E5B                          _CLC6SEL1 000E5C  
                        _CLC6SEL2 000E5D                          _CLC6SEL3 000E5E  
                        ?_isspace 0001           lcd_setContrast@contrast 000B  
     __size_of_DELAY_milliseconds 0028                  ___lwdiv@quotient 0005  
                        ?_sprintf 0093                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                    __size_of_putch 0002  
                 _spi_master_open 256C                    ___wmul@product 0005  
                        _LATAbits 000F82                          _LATDbits 000F85  
               ??_ApplicationInit 001E                          _LCD_open 2802  
         __size_of_lcd_returnHome 0018                          _PIR3bits 000EC8  
                     _lcd_setAddr 2794                         _spiMaster 0F01  
  DELAY_milliseconds@milliseconds 0001                          _SSP1CON1 000F95  
                        _SSP1CON2 000F96                          _SSP1STAT 000F94  
                       _vfpfcnvrt 0F64                        ?_lcd_setup 0001  
               ___wmul@multiplier 0001           __end_of_SPI1_WriteBlock 2498  
                  _expander_setup 27EC                      _isspace$1439 0007  
                      vfpfcnvrt@c 0056                  ?_SPI1_Initialize 0001  
                 _lcd_setContrast 27F8              GDapplication@clcData 00B1  
                        __Hrparam 0000                        vfprintf@ap 005B  
                        __Lrparam 0000                        vfprintf@fp 0057  
         ??_OSCILLATOR_Initialize 0001                  __size_of___aodiv 0188  
                __size_of___aomod 0164                        ?_vfpfcnvrt 0040  
         User_lcd_writeString@row 0019                  __size_of___lwdiv 0074  
                __size_of___lwmod 0064                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011            __end_of_expander_setup 27F8  
        expander_setOutput@output 000D                        sprintf@fmt 0095  
                __size_of_isdigit 0038                   ___lwdiv@divisor 0003  
                __size_of_isspace 0052                   ___lwdiv@counter 0007  
         __end_of_spi_master_open 259E                          __ptext10 25F8  
                        __ptext11 2624                          __ptext20 23DA  
                        __ptext12 2650                          __ptext21 241E  
                        __ptext13 1AE2                          __ptext30 26CA  
                        __ptext22 197E                          __ptext14 22F2  
                        __ptext31 228E                          __ptext23 17F6  
                        __ptext15 2228                          __ptext40 277C  
                        __ptext32 21B4                          __ptext24 1C36  
                        __ptext16 0F64                          __ptext41 2130  
                        __ptext33 2506                          __ptext25 1D0E  
                        __ptext17 1370                          __ptext50 267C  
                        __ptext42 27DE                          __ptext34 27F8  
                        __ptext26 280E                          __ptext18 1DD8  
                        __ptext51 0000                          __ptext43 253A  
                        __ptext35 259E                          __ptext27 1652  
                        __ptext19 24D0                          __ptext44 256C  
                        __ptext36 2764                          __ptext28 2344  
                        __ptext45 2802                          __ptext37 209A  
                        __ptext29 2498                          __ptext46 1E9E  
                        __ptext38 27D0                          __ptext47 245E  
                        __ptext39 2794                          __ptext48 2730  
                        __ptext49 280A                      _SSP1CON1bits 000F95  
        __size_of_CLC1_Initialize 002C                  __size_of_sprintf 0052  
                   __size_of_atoi 01A4                     __size_of_ctoa 00D8  
                   __size_of_main 0014                     __size_of_dtoa 02E2  
                     fp__LCD_open 0000                          _vfprintf 2228  
        __size_of_CLC2_Initialize 002C         __size_of_lcd_clearDisplay 0018  
                     ??_lcd_setup 0015                    _lcd_sendNibble 2396  
                ___aomod@dividend 0001                   ?_expander_setup 0001  
         __end_of_lcd_setContrast 2802                    _vfpfcnvrt$1400 0054  
          __size_of_lcd_writeChar 000E                  ?_SPI1_WriteBlock 0002  
            SPI1_WriteBlock@block 0002         __size_of_digipot_setWiper 002E  
                        isdigit@c 0001               digipot_setWiper@cmd 0009  
             digipot_setWiper@val 0008      __end_of_User_lcd_writeString 2130  
                       sprintf@ap 009F        __end_of_expander_setOutput 27EC  
                ___lwmod@dividend 0001                          isspace@c 0001  
         ?_PIN_MANAGER_Initialize 0001                    _lcd_returnHome 277C  
                 ___aomod@divisor 0009            __end_of_lcd_sendNibble 23DA  
                     ??_vfpfcnvrt 0046                   ___aomod@counter 0011  
             SPI1_WriteBlock@data 0006                        _SPI1_Close 280A  
                        sprintf@f 00A1                          sprintf@s 0093  
                      _SSP1DATPPS 000EB3                        _SSP1CLKPPS 000EB2  
                 ___lwmod@divisor 0003                   ___lwmod@counter 0005  
                 _ApplicationInit 2506                  ?_spi_master_open 0001  
                    ___aodiv@sign 0012    __end_of_PIN_MANAGER_Initialize 209A  
        __size_of_CLC5_Initialize 002C            __end_of_lcd_returnHome 2794  
                   _lcd_writeChar 27D0            lcd_sendByte@packetHigh 0013  
                    ___aomod@sign 0012                 ??_CLC1_Initialize 0001  
           lcd_sendByte@packetLow 0014        __end_of_spi1_configuration 0F27  
          lcd_sendByte@nibbleHigh 0010                      ?_lcd_setAddr 0015  
           lcd_sendByte@nibbleLow 0011  
